[{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\App.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":17,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":17,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'sidebarOpen' is assigned a value but never used.","line":18,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":18,"endColumn":21}],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import './App.css'\r\nimport { Routes, Route, HashRouter } from \"react-router-dom\";\r\nimport HomePage from './structure/homepage/HomePage';\r\nimport About from './structure/about/About';\r\nimport Contact from './structure/contact/Contact';\r\nimport Dashboard from './structure/dashboard/Dashboard';\r\nimport PageNotFound from './structure/defaultRoutePage/PageNotFound';\r\nimport SearchOrderWizard from './structure/searchOrders/SearchOrderWizard';\r\nimport VendorCardFull from './structure/cards/VendorCardFull';\r\nimport VendorCard from './structure/cards/VendorCard';\r\nimport VendorList from './structure/searchOrders/VendorList';\r\nimport Header from './structure/header/Header';\r\nimport { useState } from 'react';\r\nimport SignIn from './structure/login/SignIn';\r\nimport CreateOrder from './structure/searchOrders/CreateOrder';\r\n\r\nfunction App() {\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  return (\r\n    <HashRouter>\r\n      <Header setSidebarOpen={setSidebarOpen}/>\r\n      <Routes>\r\n        <Route path=\"/\" element={<HomePage />} />\r\n        <Route index element={<HomePage />} />\r\n        <Route path='signin' element={<SignIn/>} />\r\n        <Route path='about' element={<About/>} />\r\n        <Route path='contact' element={<Contact/>} />\r\n        <Route path='dashboard/*' element={<Dashboard/>} />\r\n        <Route path='create-order/*' element={<CreateOrder/>} />\r\n        <Route path='search-wizard/*' element={<SearchOrderWizard/>} />\r\n        <Route path='vendor-card-full/*' element={<VendorCardFull/>} />\r\n        <Route path='vendor-card/*' element={<VendorCard/>} />\r\n        <Route path='vendor-list/*' element={<VendorList/>} />\r\n        <Route path='*' element={<PageNotFound/>} />\r\n      </Routes>\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport default App\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\main.tsx","messages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\about\\About.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":1,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":1,"endColumn":20}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const About = () => {\r\n    return <></>\r\n}\r\n\r\nexport default About;","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\cards\\ContactButtons.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":6,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":6,"endColumn":41}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\r\n  ChatBubbleBottomCenterIcon,\r\n  CalendarIcon,\r\n} from \"@heroicons/react/24/outline\";\r\n\r\nexport default function ContactButtons() {\r\n  return (\r\n    <div className=\"flex flex-col gap-[22px] whitespace-nowrap w-full flex-1 \">\r\n      <button\r\n        type=\"button\"\r\n        className=\"inline-flex items-center justify-center rounded gap-2 border border-transparent bg-indigo-600 px-2.5 py-3 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n      >\r\n        <CalendarIcon className=\"h-5 w-5\"></CalendarIcon>\r\n        Запази час\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className=\"inline-flex items-center justify-center gap-2 rounded border border-gray-300 px-2.5 py-3 text-sm font-medium text-gray-700 shadow-sm hover:bg-opacity-30 hover:bg-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n      >\r\n        <ChatBubbleBottomCenterIcon className=\"h-5 w-5 flex-shrink-0\"></ChatBubbleBottomCenterIcon>\r\n        Свържи се\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\cards\\DetailedInfo.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":1,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":1,"endColumn":39}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export default function DetailedInfo() {\r\n  return (\r\n    <>\r\n\r\n      <p className=\"text-sm text-gray-800  mt-3\">\r\n        Suspendisse dictum mi ac lacinia dignissim. Proin arcu felis, vulputate\r\n        a velit non, dapibus dignissim neque. Aliquam erat volutpat. Integer eu\r\n        magna placerat, volutpat metus nec, gravida sapien. Sed nec dapibus\r\n        dolor, id aliquet dolor. Vestibulum bibendum lobortis enim sit amet\r\n        ullamcorper.\r\n      </p>\r\n    </>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\cards\\Perks.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":9,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":9,"endColumn":32}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\r\n  BoltIcon,\r\n  ChartBarIcon,\r\n  ShieldCheckIcon,\r\n  SparklesIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport Tooltip from \"./Tooltip\";\r\n\r\nexport default function Perks() {\r\n  return (\r\n    <div className=\"flex justify-between w-full max-w-sm m-auto\">\r\n      <Tooltip tooltipText=\"Отговаря бързо\">\r\n        <div className=\"drop-shadow-sm\">\r\n          <div className=\"clip-path-perks\">\r\n            <BoltIcon className=\"h-[35px] w-[35px] p-1.5 bg-indigo-50 text-indigo-600\"></BoltIcon>\r\n          </div>\r\n        </div>\r\n      </Tooltip>\r\n      <Tooltip tooltipText=\"Висока оценка\">\r\n        <div className=\"drop-shadow-sm\">\r\n          <div className=\"clip-path-perks\">\r\n            <SparklesIcon className=\"h-[35px] w-[35px] p-1.5  bg-indigo-50 text-indigo-600 \"></SparklesIcon>\r\n          </div>\r\n        </div>\r\n      </Tooltip>\r\n      <Tooltip tooltipText=\"Потвърден профил\" styles=\"text-gray-400 bg-gray-100\">\r\n        <div className=\"drop-shadow-sm\">\r\n          <div className=\"clip-path-perks\">\r\n            <ShieldCheckIcon className=\"h-[35px] w-[35px] p-1.5 bg-gray-50 text-gray-300\"></ShieldCheckIcon>\r\n          </div>\r\n        </div>\r\n      </Tooltip>\r\n      <Tooltip tooltipText=\"Старо куче\">\r\n        <div className=\"drop-shadow-sm\">\r\n          <div className=\"clip-path-perks\">\r\n            <ChartBarIcon className=\"h-[35px] w-[35px] p-1.5  bg-indigo-50 text-indigo-600\"></ChartBarIcon>\r\n          </div>\r\n        </div>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\cards\\PortfolioTags.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":4,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":4,"endColumn":40}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import Badge from \"../../utilityComponents/Badge\";\r\nimport Tooltip from \"./Tooltip\";\r\n\r\nexport default function PortfolioTags() {\r\n  return (\r\n    <div className=\"flex flex-wrap gap-2\">\r\n      <Tooltip tooltipText=\"Почистване.\">\r\n        <Badge styles=\"bg-indigo-100 text-indigo-800\">Основно</Badge>\r\n      </Tooltip>\r\n      <Tooltip tooltipText=\"Почистване на под, прах, баня и тоалетна, кухня и т.н.\">\r\n        <Badge styles=\"bg-indigo-100 text-indigo-800\">Мека мебел</Badge>\r\n      </Tooltip>\r\n      <Tooltip tooltipText=\"Почистване на под, прах, баня и тоалетна, кухня и т.н.\">\r\n        <Badge styles=\"text-gray-400 font-light\">Прозорци</Badge>\r\n      </Tooltip>\r\n      <Tooltip tooltipText=\"Почистване на под, прах, баня и тоалетна, кухня и т.н.\">\r\n        <Badge styles=\"text-gray-400 font-light\">Собствени материали</Badge>\r\n      </Tooltip>\r\n      <Tooltip tooltipText=\"Почистване на под, прах, баня и тоалетна, кухня и т.н.\">\r\n        <Badge styles=\"bg-indigo-100 text-indigo-800\">Абонамент</Badge>\r\n      </Tooltip>\r\n      <Tooltip tooltipText=\"Почистване на под, прах, баня и тоалетна, кухня и т.н.\">\r\n        <Badge styles=\"bg-indigo-100 text-indigo-800\">Еднократно</Badge>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\cards\\ShortInfo.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":3,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":3,"endColumn":36}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import Tooltip from \"./Tooltip\";\r\n\r\nexport default function ShortInfo() {\r\n  return (\r\n    <div className=\"flex justify-between max-w-md md:gap-20\">\r\n      <Tooltip tooltipText=\"Брой уникални клиенти\">\r\n        <div className=\"rounded-full bg-gradient-to-r p-[2px] from-indigo-200 via-sky-200 to-indigo-500 shadow-md\">\r\n          <div className=\"flex flex-col items-center bg-white justify-center h-[70px] w-[70px] rounded-full\">\r\n            <p className=\"text-xs text-gray-500\">Клиенти</p>\r\n            <p className=\"text-gray-700 font-semibold\">5</p>\r\n          </div>\r\n        </div>\r\n      </Tooltip>\r\n      {/* <Tooltip tooltipText=\"Брой уникални клиенти\">\r\n        <div className=\"flex flex-col items-center justify-center h-[75px] w-[75px] border-2 border-indigo-50 shadow-md rounded-full\">\r\n          <p className=\"text-xs text-gray-500\">Клиенти</p>\r\n          <p className=\"text-gray-700 font-semibold\">5</p>\r\n        </div>\r\n      </Tooltip> */}\r\n      <Tooltip tooltipText=\"Брой уникални клиенти\">\r\n        <div className=\"rounded-full bg-gradient-to-r p-[2px] from-indigo-200 via-sky-200 to-indigo-500 shadow-md\">\r\n          <div className=\"flex flex-col items-center bg-white justify-center h-[70px] w-[70px] rounded-full\">\r\n            <p className=\"text-xs text-gray-500\">Поръчки</p>\r\n            <p className=\"text-gray-700 font-semibold\">120</p>\r\n          </div>\r\n        </div>\r\n      </Tooltip>\r\n      <Tooltip tooltipText=\"Брой уникални клиенти\">\r\n        <div className=\"rounded-full bg-gradient-to-r p-[2px] from-indigo-200 via-sky-200 to-indigo-500 shadow-md\">\r\n          <div className=\"flex flex-col items-center bg-white justify-center h-[70px] w-[70px] rounded-full\">\r\n            <p className=\"text-xs text-gray-500\">Оценка</p>\r\n            <p className=\"text-gray-700 font-semibold\">4.5</p>\r\n          </div>\r\n        </div>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\cards\\SingleRating.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":6,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":6,"endColumn":39}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { StarIcon } from \"@heroicons/react/20/solid\";\r\nimport classNames from \"../../helpers/classNames\";\r\n\r\nconst userRating = 4;\r\n\r\nexport default function SingleRating() {\r\n  return (\r\n      \r\n      <div className=\"flex flex-col items-center mt-2\">\r\n        <div className=\"flex items-center\">\r\n          {[0, 1, 2, 3, 4].map((rating) => (\r\n            <StarIcon\r\n              key={rating}\r\n              className={classNames(\r\n                userRating > rating ? \"text-yellow-400\" : \"text-gray-200\",\r\n                \"h-5 w-5 flex-shrink-0\"\r\n              )}\r\n              aria-hidden=\"true\"\r\n            />\r\n          ))}\r\n        </div>\r\n        <p className=\"text-xs font-medium text-gray-600 underline underline-offset-2 mt-1 cursor-pointer\">\r\n          (52 ревюта)\r\n        </p>\r\n      </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\cards\\Tooltip.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":23,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":23,"endColumn":81},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":65,"column":189,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":65,"endColumn":195,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[1705,1711],"text":"(styles != null)"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[1705,1711],"text":"(styles ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[1705,1711],"text":"(Boolean(styles))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":65,"column":196,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":65,"endColumn":198,"suggestions":[{"messageId":"suggestNullish","fix":{"range":[1712,1714],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from \"react\";\r\nimport {\r\n  useFloating,\r\n  autoUpdate,\r\n  offset,\r\n  flip,\r\n  shift,\r\n  useHover,\r\n  useFocus,\r\n  useDismiss,\r\n  useRole,\r\n  useInteractions,\r\n  FloatingPortal,\r\n} from \"@floating-ui/react\";\r\nimport classNames from \"../../helpers/classNames\";\r\n\r\ninterface TooltipProps {\r\n  children: React.ReactNode;\r\n  tooltipText: string;\r\n  styles?: string;\r\n}\r\n\r\nexport default function Tooltip({ children, tooltipText, styles }: TooltipProps) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { x, y, refs, strategy, context } = useFloating({\r\n    open,\r\n    onOpenChange: setOpen,\r\n    placement: \"top\",\r\n    // Make sure the tooltip stays on the screen\r\n    whileElementsMounted: autoUpdate,\r\n    middleware: [\r\n      offset(5),\r\n      flip({\r\n        fallbackAxisSideDirection: \"start\",\r\n        crossAxis: false,\r\n      }),\r\n      shift(),\r\n    ],\r\n  });\r\n\r\n  // Event listeners to change the open state\r\n  const hover = useHover(context, { move: false });\r\n  const focus = useFocus(context);\r\n  const dismiss = useDismiss(context);\r\n  // Role props for screen readers\r\n  const role = useRole(context, { role: \"tooltip\" });\r\n\r\n  // Merge all the interactions into prop getters\r\n  const { getReferenceProps, getFloatingProps } = useInteractions([\r\n    hover,\r\n    focus,\r\n    dismiss,\r\n    role,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div ref={refs.setReference} {...getReferenceProps()}>\r\n        {children}\r\n      </div>\r\n      <FloatingPortal>\r\n        {open && (\r\n          <div\r\n            className={classNames(\"Tooltip max-w-[200px] justify-center text-center shadow-lg ring-1 ring-black ring-opacity-5 rounded-md px-2 py-1 border bg-white text-gray-700 text-xs\", styles || \"\")}\r\n            ref={refs.setFloating}\r\n            style={{\r\n              // Positioning styles\r\n              position: strategy,\r\n              top: y ?? 0,\r\n              left: x ?? 0,\r\n            }}\r\n            {...getFloatingProps()}\r\n          >\r\n            {tooltipText}\r\n          </div>\r\n        )}\r\n      </FloatingPortal>\r\n    </>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\cards\\VendorCard.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":10,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":10,"endColumn":37},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'tagsRef' is assigned a value but never used.","line":11,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":18},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":49,"column":255,"nodeType":"JSXText","messageId":"unescapedEntityAlts"}],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { StarIcon , ChevronRightIcon } from \"@heroicons/react/20/solid\";\r\nimport classNames from \"../../helpers/classNames\";\r\n\r\nimport { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport VendorPrices from \"./VendorPrices\";\r\n\r\nconst userRating = 5;\r\n\r\nexport default function VendorCard() {\r\n    const tagsRef = useRef<null | HTMLDivElement>(null)\r\n    return (\r\n        <div>\r\n            <div className=\"shadow-order hover:shadow-order-hover p-4 bg-white rounded-md gap-x-2 sm:gap-x-4 grid grid-cols-[min-content_1fr]\">\r\n                {/* photo */}\r\n                <div className=\"w-20 sm:w-48 col-start-1 row-start-1 sm:row-span-2 drop-shadow-xl\">\r\n                    <img\r\n                        className=\"[aspect-ratio:_1_/_1] w-full object-cover rounded-sm clip-path-photo \"\r\n                        src=\"https://st1.photogallery.ind.sh/wp-content/uploads/indiacom/zozibini-tunzi-top-20-most-beautiful-women-in-the-world-2022-202003-1655117381.jpg\"\r\n                        alt=\"\"\r\n                    />\r\n                </div>\r\n                {/* base info and rating */}\r\n                <div className=\"flex flex-col col-start-2\">\r\n                    <h2 className=\"text-lg font-medium font-serif -mt-1.5\">Даниа Бързакова</h2>\r\n                    <p className=\"text-gray-400 text-sm\">София</p>\r\n                    <div className=\"flex items-end gap-1 mt-1\">\r\n                        <span className=\"text-sm text-yellow-400 font-medium\">4.8</span>\r\n                        <div className=\"flex mb-0.5\">\r\n                            {[0, 1, 2, 3, 4, 5].map((rating) => (\r\n                                <StarIcon\r\n                                    key={rating}\r\n                                    className={classNames(\r\n                                        userRating > rating ? \"text-yellow-400\" : \"text-gray-200\",\r\n                                        \"h-5 w-5 flex-shrink-0\"\r\n                                    )}\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                        <p className=\"text-sm text-gray-400 cursor-pointer\">\r\n                            (<span className=\"underline underline-offset-2 text-indigo-600\">52</span>\r\n                            )\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                {/* about */}\r\n                <div className=\"mt-4 col-start-1 row-start-3 col-span-2\">\r\n                    <p className=\"text-gray-800 text-sm leading-normal line-clamp-4\">There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable.</p>\r\n                </div>\r\n                {/* more info */}\r\n                {/* prices */}\r\n                <VendorPrices />\r\n                <Link\r\n                    to=\"/vendor-card-full\"\r\n                    className=\"col-start-1 col-span-2 order-last row-start-[10]\"\r\n                >\r\n                    <div className=\"flex items-center text-indigo-600 mt-1\">\r\n                        <p className=\"text-sm font-serif\">Още информация и услуги</p>\r\n                        <ChevronRightIcon className=\"h-5 w-5 mt-0.5\"></ChevronRightIcon>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\cards\\VendorCardFull.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":17,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":17,"endColumn":41},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'sidebarOpen' is assigned a value but never used.","line":18,"column":12,"nodeType":"Identifier","messageId":"unusedVar","endLine":18,"endColumn":23}],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\r\n    BellIcon,\r\n    ChevronLeftIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport Perks from \"./Perks\";\r\nimport RatingCard from \"../../utilityComponents/RatingCard\";\r\nimport SingleRating from \"./SingleRating\";\r\nimport PortfolioTags from \"./PortfolioTags\";\r\nimport ContactButtons from \"./ContactButtons\";\r\nimport DetailedInfo from \"./DetailedInfo\";\r\nimport ShortInfo from \"./ShortInfo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../header/Header\";\r\nimport { useState } from \"react\";\r\nimport VendorPrices from \"./VendorPrices\";\r\n\r\nexport default function VendorCardFull() {\r\n    const [sidebarOpen, setSidebarOpen] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <Header setSidebarOpen={setSidebarOpen} />\r\n            {/* Mobile */}\r\n            <div className=\"sm:hidden bg-gradient-to-b m-auto from-fuchsia-50 to-indigo-300\">\r\n                <div className=\"pt-4 flex justify-between items-center px-4  text-gray-600\">\r\n                    <Link to=\"/vendor-card\">\r\n                        <ChevronLeftIcon className=\"h-6 w-6\"></ChevronLeftIcon>\r\n                    </Link>\r\n                    <p className=\"font-medium\">Профил</p>\r\n                    <BellIcon className=\"h-6 w-6\"></BellIcon>\r\n                </div>\r\n                <div className=\"mt-36 flex flex-col bg-white justify-center rounded-t-3xl px-4 gap-6\">\r\n                    <div className=\"flex flex-col items-center\">\r\n                        <div className=\"flex flex-col -mt-28 max-w-[10rem]\">\r\n                            <img\r\n                                className=\"[aspect-ratio:_1_/_1] w-full rounded-md object-cover\"\r\n                                src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                        <h2 className=\"font-bold text-xl text-gray-900 mt-2 text-center tracking-tight\">Велизар saf asf Стоянов</h2>\r\n                        <p className=\"text-sm text-gray-400 self-center\">София</p>\r\n                        <SingleRating />\r\n                    </div>\r\n                    <Perks />\r\n                    <VendorPrices />\r\n                    <ContactButtons />\r\n                    <div className=\"\">\r\n                        <h2 className=\"text-xl font-bold tracking-tight text-gray-900\">\r\n                            За мен\r\n                        </h2>\r\n                        <DetailedInfo />\r\n                    </div>\r\n                    <div className=\"border-t pt-6\">\r\n                        <h2 className=\"text-xl font-bold tracking-tight text-gray-900\">\r\n                            Портфолио\r\n                        </h2>\r\n                        <PortfolioTags />\r\n                    </div>\r\n                    <ShortInfo />\r\n                    <RatingCard />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Larger screen */}\r\n            <div className=\"grid sm:grid-cols-[1fr_2fr] gap-x-3 md:gap-x-6 lg:gap-x-9 max-w-5xl m-auto sm:p-8 bg-white\">\r\n                <div className=\"sm:col-start-1 [grid-row:1/10] bg-gradient-to-b sm:min-w-[13rem] sm:max-w-xs from-fuchsia-50 to-indigo-300 sm:bg-none\">\r\n                    <div className=\"border-r flex flex-col mt-36 sm:mt-0 px-4 sm:px-0 bg-white rounded-t-3xl gap-8\">\r\n                        {/* Name, town, photo, rating */}\r\n                        <div className=\"flex flex-col\">\r\n                            <div className=\"flex flex-col max-w-[10rem] w-full self-center sm:self-auto -mt-28 sm:mt-0 sm:max-w-full\">\r\n                                <img\r\n                                    className=\"[aspect-ratio:_1_/_1] w-full rounded-md object-cover\"\r\n                                    src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"px-3 md:px-5 flex flex-col items-center\">\r\n                                <h2 className=\"font-bold text-xl text-gray-900 mt-2 text-center tracking-tight\">Велизар saf asf Стоянов</h2>\r\n                                <p className=\"text-sm text-gray-400 self-center\">София</p>\r\n                                <SingleRating />\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Perks */}\r\n                        <div className=\"sm:px-3 md:px-5\">\r\n                            <Perks />\r\n                        </div>\r\n\r\n                        {/* Contact Buttons */}\r\n                        <div className=\"sm:px-3 md:px-5\">\r\n                            <ContactButtons />\r\n                        </div>\r\n\r\n                        {/* Portfolio */}\r\n                        <div className=\"sm:px-3 md:px-5\">\r\n                            <h2 className=\"text-xl font-semibold tracking-tight text-gray-700 mb-4\">\r\n                                Портфолио\r\n                            </h2>\r\n                            <PortfolioTags />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* right column */}\r\n                <div className=\"col-start-1 sm:col-start-2 px-4 sm:px-0 mt-8 sm:mt-0 order-1 sm:order-1\">\r\n                    <h2 className=\"text-xl font-semibold tracking-tight text-gray-700 mb-2\">\r\n                        За мен\r\n                    </h2>\r\n                    <DetailedInfo />\r\n                </div>\r\n\r\n                <div className=\"col-start-1 sm:col-start-2 px-4 sm:px-0 mt-8 order-2 sm:order-2\">\r\n                    <h2 className=\"text-xl font-semibold tracking-tight text-gray-700 mb-2\">\r\n                        Цени\r\n                    </h2>\r\n                    <VendorPrices />\r\n                </div>\r\n\r\n                <div className=\"col-start-1 sm:col-start-2 px-4 sm:px-0 mt-8 order-3 sm:order-3\">\r\n                    <h2 className=\"text-xl font-semibold tracking-tight text-gray-700 mb-3\">\r\n                        Статистика\r\n                    </h2>\r\n                    <ShortInfo />\r\n                </div>\r\n\r\n                <div className=\"col-start-1 sm:col-start-2 px-4 sm:px-0 mt-8 order-4 sm:order-4\">\r\n                    <h2 className=\"text-xl font-semibold tracking-tight text-gray-700 mb-2\">\r\n                        Ревюта от клиенти\r\n                    </h2>\r\n                    <RatingCard />\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\cards\\VendorPrices.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":1,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":1,"endColumn":39}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export default function VendorPrices() {\r\n    return (\r\n        <div className=\"flex flex-col gap-1 mt-3 sm:col-start-2 col-start-1 col-span-2 sm:col-span-1 row-start-4 sm:row-start-2\">\r\n            <div className=\"flex gap-1 justify-between border-b border-dotted  pb-1 mb-1\">\r\n                <p className=\"text-xs text-gray-400\">Вид почистване</p>\r\n                <p className=\"text-gray-400 text-xs whitespace-nowrap\">Цена от</p>\r\n            </div>\r\n            <div className=\"flex gap-1 justify-between\">\r\n                <p className=\"text-gray-800 text-sm\">Еднократно</p>\r\n                <p className=\"w-full border-b border-dotted relative inline-block bottom-[0.3rem]\"></p>\r\n                <p className=\"text-gray-800 text-sm font-semibold whitespace-nowrap\">20 лв/ч</p>\r\n            </div>\r\n            <div className=\"flex gap-1 justify-between\">\r\n                <p className=\"text-gray-800 text-sm\">Абонаментно</p>\r\n                <p className=\"w-full border-b border-dotted relative inline-block bottom-[0.3rem]\"></p>\r\n                <p className=\"text-gray-800 text-sm font-semibold whitespace-nowrap\">15 лв/ч</p>\r\n            </div>\r\n            <div className=\"flex gap-1 justify-between\">\r\n                <p className=\"text-gray-800 text-sm\">Основно</p>\r\n                <p className=\"w-full border-b border-dotted relative inline-block bottom-[0.3rem]\"></p>\r\n                <p className=\"text-gray-800 text-sm font-semibold whitespace-nowrap\">50 лв/ч</p>\r\n            </div>\r\n            <div className=\"flex gap-1 justify-between\">\r\n                <p className=\"text-gray-800 text-sm\">Дивани</p>\r\n                <p className=\"w-full border-b border-dotted relative inline-block bottom-[0.3rem]\"></p>\r\n                <p className=\"text-gray-800 text-sm font-semibold whitespace-nowrap\">25 лв</p>\r\n            </div>\r\n            <p className=\"text-gray-600 text-xs -mt-1\">........</p>\r\n        </div>\r\n    )\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\contact\\Contact.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":17,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":17,"endColumn":34}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/*\r\n  This example requires some changes to your config:\r\n  \r\n  ```\r\n  // tailwind.config.js\r\n  module.exports = {\r\n    // ...\r\n    plugins: [\r\n      // ...\r\n      require('@tailwindcss/forms'),\r\n    ],\r\n  }\r\n  ```\r\n*/\r\nimport { EnvelopeIcon, PhoneIcon } from '@heroicons/react/24/outline'\r\n\r\nexport default function Contact() {\r\n  return (\r\n    <div className=\"relative bg-white\">\r\n      <div className=\"absolute inset-0\">\r\n        <div className=\"absolute inset-y-0 left-0 w-1/2 bg-gray-50\" />\r\n      </div>\r\n      <div className=\"relative mx-auto max-w-7xl lg:grid lg:grid-cols-5\">\r\n        <div className=\"bg-gray-50 py-16 px-6 lg:col-span-2 lg:px-8 lg:py-24 xl:pr-12\">\r\n          <div className=\"mx-auto max-w-lg\">\r\n            <h2 className=\"text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl\">Get in touch</h2>\r\n            <p className=\"mt-3 text-lg leading-6 text-gray-500\">\r\n              Nullam risus blandit ac aliquam justo ipsum. Quam mauris volutpat massa dictumst amet. Sapien tortor lacus\r\n              arcu.\r\n            </p>\r\n            <dl className=\"mt-8 text-base text-gray-500\">\r\n              <div>\r\n                <dt className=\"sr-only\">Postal address</dt>\r\n                <dd>\r\n                  <p>742 Evergreen Terrace</p>\r\n                  <p>Springfield, OR 12345</p>\r\n                </dd>\r\n              </div>\r\n              <div className=\"mt-6\">\r\n                <dt className=\"sr-only\">Phone number</dt>\r\n                <dd className=\"flex\">\r\n                  <PhoneIcon className=\"h-6 w-6 flex-shrink-0 text-gray-400\" aria-hidden=\"true\" />\r\n                  <span className=\"ml-3\">+1 (555) 123-4567</span>\r\n                </dd>\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <dt className=\"sr-only\">Email</dt>\r\n                <dd className=\"flex\">\r\n                  <EnvelopeIcon className=\"h-6 w-6 flex-shrink-0 text-gray-400\" aria-hidden=\"true\" />\r\n                  <span className=\"ml-3\">support@example.com</span>\r\n                </dd>\r\n              </div>\r\n            </dl>\r\n            <p className=\"mt-6 text-base text-gray-500\">\r\n              Looking for careers?{' '}\r\n              <a href=\"#\" className=\"font-medium text-gray-700 underline\">\r\n                View all job openings\r\n              </a>\r\n              .\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-white py-16 px-6 lg:col-span-3 lg:py-24 lg:px-8 xl:pl-12\">\r\n          <div className=\"mx-auto max-w-lg lg:max-w-none\">\r\n            <form action=\"#\" method=\"POST\" className=\"grid grid-cols-1 gap-y-6\">\r\n              <div>\r\n                <label htmlFor=\"full-name\" className=\"sr-only\">\r\n                  Full name\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"full-name\"\r\n                  id=\"full-name\"\r\n                  autoComplete=\"name\"\r\n                  className=\"block w-full rounded-md border-gray-300 py-3 px-4 placeholder-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                  placeholder=\"Full name\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"email\" className=\"sr-only\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  autoComplete=\"email\"\r\n                  className=\"block w-full rounded-md border-gray-300 py-3 px-4 placeholder-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                  placeholder=\"Email\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"phone\" className=\"sr-only\">\r\n                  Phone\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  id=\"phone\"\r\n                  autoComplete=\"tel\"\r\n                  className=\"block w-full rounded-md border-gray-300 py-3 px-4 placeholder-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                  placeholder=\"Phone\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"message\" className=\"sr-only\">\r\n                  Message\r\n                </label>\r\n                <textarea\r\n                  id=\"message\"\r\n                  name=\"message\"\r\n                  rows={4}\r\n                  className=\"block w-full rounded-md border-gray-300 py-3 px-4 placeholder-gray-500 shadow-sm focus:border-indigo-500 focus:ring-indigo-500\"\r\n                  placeholder=\"Message\"\r\n                  defaultValue={''}\r\n                />\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"inline-flex justify-center rounded-md border border-transparent bg-indigo-600 py-3 px-6 text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\Dashboard.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":15,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":15,"endColumn":42},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'classNames' is defined but never used.","line":15,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":15,"endColumn":20},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":19,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":19,"endColumn":36}],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { Fragment, useState } from 'react'\r\nimport { Dialog, Transition } from '@headlessui/react'\r\nimport {\r\n  XMarkIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport Header from '../header/Header'\r\nimport Sidebar from './sidebar/Sidebar'\r\nimport Footer from '../footer/Footer';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport Chat from './chat/Chat';\r\nimport Orders from './orders/Orders';\r\nimport Account from './account/Account';\r\n\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport default function Dashboard() {\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Header setSidebarOpen={setSidebarOpen} />\r\n      <div className=\"flex max-w-7xl  bg-white\">\r\n        <Transition.Root show={sidebarOpen} as={Fragment}>\r\n          <Dialog as=\"div\" className=\"relative z-40 md:hidden\" onClose={setSidebarOpen}>\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"transition-opacity ease-linear duration-300\"\r\n              enterFrom=\"opacity-0\"\r\n              enterTo=\"opacity-100\"\r\n              leave=\"transition-opacity ease-linear duration-300\"\r\n              leaveFrom=\"opacity-100\"\r\n              leaveTo=\"opacity-0\"\r\n            >\r\n              <div className=\"fixed inset-0 bg-gray-600 bg-opacity-75\" />\r\n            </Transition.Child>\r\n\r\n            <div className=\"fixed inset-0 z-40 flex\">\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter=\"transition ease-in-out duration-300 transform\"\r\n                enterFrom=\"-translate-x-full\"\r\n                enterTo=\"translate-x-0\"\r\n                leave=\"transition ease-in-out duration-300 transform\"\r\n                leaveFrom=\"translate-x-0\"\r\n                leaveTo=\"-translate-x-full\"\r\n              >\r\n                <Dialog.Panel className=\"relative flex w-28 max-w-xs flex-col bg-indigo-700\">\r\n                  {/* sidebar button close */}\r\n                  <Transition.Child\r\n                    as={Fragment}\r\n                    enter=\"ease-in-out duration-300\"\r\n                    enterFrom=\"opacity-0\"\r\n                    enterTo=\"opacity-100\"\r\n                    leave=\"ease-in-out duration-300\"\r\n                    leaveFrom=\"opacity-100\"\r\n                    leaveTo=\"opacity-0\"\r\n                  >\r\n                    <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"ml-1 flex h-10 w-10 items-center justify-center rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\r\n                        onClick={() => { setSidebarOpen(false); }}\r\n                      >\r\n                        <span className=\"sr-only\">Close sidebar</span>\r\n                        <XMarkIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\r\n                      </button>\r\n                    </div>\r\n                  </Transition.Child>\r\n                  {/* mobile sidebar */}\r\n                  <Sidebar  setSidebarOpen={setSidebarOpen}/>\r\n                </Dialog.Panel>\r\n              </Transition.Child>\r\n              <div className=\"w-14 flex-shrink-0\" aria-hidden=\"true\">\r\n                {/* Force sidebar to shrink to fit close icon */}\r\n              </div>\r\n            </div>\r\n          </Dialog>\r\n        </Transition.Root>\r\n\r\n        {/* Static sidebar for desktop */}\r\n\r\n\r\n        {/* Sidebar component, swap this element with another sidebar if you like */}\r\n        <div className=\"hidden bg-indigo-700 md:block\">\r\n          <Sidebar setSidebarOpen={setSidebarOpen} />\r\n        </div>\r\n        <div className=\"flex-1 \">\r\n          <Routes>\r\n            <Route path=\"chat/*\" element={<Chat />} />\r\n            <Route path=\"account/*\" element={<Account />} />\r\n            <Route path=\"orders/*\" element={<Orders />} />\r\n          </Routes>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\account\\Account.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":13,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":13,"endColumn":34}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Route, Routes } from \"react-router-dom\";\r\nimport TabsMenu from \"../../../utilityComponents/TabsMenu\";\r\nimport Profile from \"./profile/Profile\";\r\nimport AccountSettings from \"./settings/AccountSettings\";\r\nimport Security from \"./security/Security\";\r\n\r\nconst tabs = [\r\n  { id: 1, name: \"Профил\", href: \"#/dashboard/account/profile\" },\r\n  { id: 2, name: \"Сигурност\", href: \"#/dashboard/account/security\" },\r\n  { id: 3, name: \"Нотификации\", href: \"#/dashboard/account/settings\" },\r\n];\r\n\r\nexport default function Account() {\r\n  return (\r\n    <>\r\n      <div className='px-4 md:px-6 lg:px-8'>\r\n        <TabsMenu tabs={tabs} defaultTab={\"Профил\"} />\r\n      </div>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Profile />} />\r\n        <Route path=\"profile\" element={<Profile />} />\r\n        <Route path=\"security\" element={<Security />} />\r\n        <Route path=\"settings\" element={<AccountSettings />} />\r\n      </Routes>\r\n    </>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\account\\profile\\ComboSelectBox.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'LegacyRef' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":19},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":29,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":29,"endColumn":42},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":35,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":35,"endColumn":41},{"ruleId":"@typescript-eslint/ban-types","severity":2,"message":"Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":37,"column":75,"nodeType":"TSTypeLiteral","messageId":"bannedTypeMessage","endLine":37,"endColumn":77},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":48,"column":36,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":48,"endColumn":77}],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { LegacyRef, useEffect, useRef, useState } from 'react'\r\nimport { CheckIcon, ChevronUpDownIcon } from '@heroicons/react/20/solid'\r\nimport { Combobox } from '@headlessui/react'\r\nimport Badge from '../../../../utilityComponents/Badge';\r\n\r\n\r\ninterface Person { id: number; name: string }\r\n\r\nconst people: Person[] = [\r\n\r\n    { id: 1, name: 'Leslie Alexander' },\r\n    { id: 2, name: 'saf Alexander' },\r\n    { id: 3, name: 'Lessaglie Alefjxander' },\r\n    { id: 4, name: 'edfh Alexander' },\r\n    { id: 5, name: 'Ledsadie Alefjxander' },\r\n    { id: 6, name: 'Ledfhsljie Alexander' },\r\n    { id: 7, name: 'Ledfhstfjjslie Alexander' },\r\n    { id: 8, name: 'Ledfhssdglie Alexander' },\r\n    { id: 9, name: 'Ledfhslie Alexander' },\r\n    { id: 10, name: 'Ledfhdjslie Alexanjfder' },\r\n    { id: 11, name: 'Ledfhslie Alexandfer' },\r\n    { id: 12, name: 'Ledfhfgdjslie Alexander' },\r\n    { id: 13, name: 'Ledfhfgjfslie Alejxandfgjer' },\r\n    { id: 14, name: 'Ledfhslie Alefgjxander' },\r\n    { id: 15, name: 'Ledfhslie Alexander' },\r\n    // More users...\r\n]\r\n\r\nfunction classNames(...classes: string[]) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\n\r\n\r\nexport default function ComboSelectBox() {\r\n    const [query, setQuery] = useState('')\r\n    const [selectedPerson, setSelectedPerson] = useState<Person[] | Array<{}>>([])\r\n    const [value, setValue] = useState(\"\")\r\n\r\n\r\n    const filteredPeople =\r\n        query === ''\r\n            ? people\r\n            : people.filter((person) => {\r\n                return person.name.toLowerCase().includes(query.toLowerCase())\r\n            })\r\n\r\n    const scrollDropdownIntoView = (behavior: \"auto\" | \"smooth\" = \"auto\") => {\r\n        const el = comboRef.current;\r\n        if (el == null) return\r\n        const scrollGap = el.getBoundingClientRect().bottom - window.innerHeight\r\n        if (scrollGap > 0)\r\n            comboRef.current?.scrollIntoView({ block: \"end\", inline: \"nearest\", behavior })\r\n        // window.scrollBy(0, scrollGap)\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollDropdownIntoView();\r\n    }, [query])\r\n\r\n    const comboRef = useRef<null | HTMLUListElement>(null)\r\n\r\n\r\n    return (\r\n\r\n\r\n        <Combobox as=\"div\" value={selectedPerson} onChange={setSelectedPerson} multiple nullable className=\"sm:col-span-3 coverage-combo-box\">\r\n\r\n            {({ open }) => (\r\n\r\n                <>\r\n                    <div className='flex flex-col md:flex-row gap-2 items-start md:justify-between md:items-center'>\r\n                        <p className=\"block text-sm font-normal text-gray-900\">Квартали, в които работите</p>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => { setSelectedPerson(selected => selected.length !== people.length ? people : []); }}\r\n                            className=\"inline-flex underline items-center h-full text-xs font-medium text-gray-600  hover:text-black \"\r\n                        >\r\n                            Избирам всички\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"relative mb-2\">\r\n                        <Combobox.Input\r\n                            className=\"mt-1 block w-full rounded-md border-gray-300 text-gray-900 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\r\n                            onChange={(event) => { setQuery(event.target.value); }}\r\n                            onBlur={() => { setValue(\"\"); }}\r\n                            displayValue={() => value}\r\n                            onFocus={() => { setQuery(\"\"); }}\r\n                        />\r\n                        <Combobox.Button onClick={() => setTimeout(() => {\r\n                            scrollDropdownIntoView(\"smooth\")\r\n                        }, 200)} className=\"absolute inset-y-0 right-0 flex items-center rounded-r-md px-2 focus:outline-none\">\r\n                            <ChevronUpDownIcon className=\"h-5 w-5 text-gray-500\" aria-hidden=\"true\" />\r\n                        </Combobox.Button>\r\n                        {filteredPeople.length > 0 && (\r\n                            <Combobox.Options ref={comboRef} className=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\r\n                                {filteredPeople.map((person) => (\r\n                                    <Combobox.Option\r\n                                        key={person.id}\r\n                                        value={person}\r\n                                        className={({ active }) =>\r\n                                            classNames(\r\n                                                'relative cursor-default select-none py-2 pl-3 pr-9',\r\n                                                active ? 'bg-indigo-600 text-white' : 'text-gray-900'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        {({ active, selected }) => (\r\n                                            <>\r\n                                                <span className={classNames('block truncate', selected ? 'font-semibold' : \"\")}>{person.name}</span>\r\n                                                {selected && (\r\n                                                    <span\r\n                                                        className={classNames(\r\n                                                            'absolute inset-y-0 right-0 flex items-center pr-4',\r\n                                                            active ? 'text-white' : 'text-indigo-600'\r\n                                                        )}\r\n                                                    >\r\n                                                        <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                                                    </span>\r\n                                                )}\r\n                                            </>\r\n                                        )}\r\n                                    </Combobox.Option>\r\n                                ))}\r\n                            </Combobox.Options>\r\n                        )}\r\n                    </div>\r\n                    <Combobox.Label className=\"flex flex-wrap line-clamp-3 leading-relaxed\">\r\n                        {selectedPerson.map((person) => \"name\" in person && <Badge key={person.id} styles=\"whitespace-nowrap\">{person?.name}</Badge>)}\r\n                    </Combobox.Label>\r\n                </>\r\n            )\r\n            }\r\n        </Combobox >\r\n    )\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\account\\profile\\InputFieldProfile.tsx","messages":[{"ruleId":"react/prop-types","severity":2,"message":"'scope' is missing in props validation","line":8,"column":69,"nodeType":"Property","messageId":"missingPropType","endLine":8,"endColumn":74},{"ruleId":"react/prop-types","severity":2,"message":"'children' is missing in props validation","line":8,"column":76,"nodeType":"Property","messageId":"missingPropType","endLine":8,"endColumn":84},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":12,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":12,"endColumn":47},{"ruleId":"react/prop-types","severity":2,"message":"'scope.replaceAll' is missing in props validation","line":13,"column":37,"nodeType":"Identifier","messageId":"missingPropType","endLine":13,"endColumn":47}],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { userProviderType, userServiceType } from \"../../../../store/userTypeStore\";\r\n\r\nexport interface InputFieldProfileType {\r\n    scope: string;\r\n    children: JSX.Element;\r\n  }\r\n\r\nconst InputFieldProfileToggler: React.FC<InputFieldProfileType> = ({scope, children}) => {\r\n    const serviceType = userServiceType();\r\n    const providerType = userProviderType();\r\n\r\n    const isMatchingScope = (scope: string) => {\r\n        const matchingArray = scope.replaceAll(\",\",\"\").split(\" \")\r\n        return (matchingArray.includes(serviceType) || matchingArray.includes(`${serviceType}-${providerType}`))\r\n    }\r\n    \r\n    const isVisible = isMatchingScope(scope)\r\n\r\n    return (\r\n        <>\r\n            {isVisible && children }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputFieldProfileToggler;","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\account\\profile\\InputFieldProfileToggler.tsx","messages":[{"ruleId":"react/prop-types","severity":2,"message":"'scope' is missing in props validation","line":8,"column":69,"nodeType":"Property","messageId":"missingPropType","endLine":8,"endColumn":74},{"ruleId":"react/prop-types","severity":2,"message":"'children' is missing in props validation","line":8,"column":76,"nodeType":"Property","messageId":"missingPropType","endLine":8,"endColumn":84},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":12,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":12,"endColumn":47},{"ruleId":"react/prop-types","severity":2,"message":"'scope.replaceAll' is missing in props validation","line":13,"column":37,"nodeType":"Identifier","messageId":"missingPropType","endLine":13,"endColumn":47}],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { userProviderType, userServiceType } from \"../../../../store/userTypeStore\";\r\n\r\nexport interface InputFieldProfileType {\r\n    scope: string;\r\n    children: JSX.Element;\r\n  }\r\n\r\nconst InputFieldProfileToggler: React.FC<InputFieldProfileType> = ({scope, children}) => {\r\n    const serviceType = userServiceType();\r\n    const providerType = userProviderType();\r\n\r\n    const isMatchingScope = (scope: string) => {\r\n        const matchingArray = scope.replaceAll(\",\",\"\").split(\" \")\r\n        return (matchingArray.includes(serviceType) || matchingArray.includes(`${serviceType}-${providerType}`))\r\n    }\r\n    \r\n    const isVisible = isMatchingScope(scope)\r\n\r\n    return (\r\n        <>\r\n            {isVisible && children }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputFieldProfileToggler;","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\account\\profile\\Profile.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":61,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":61,"endColumn":42},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'classNames' is defined but never used.","line":61,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":61,"endColumn":20},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":67,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":67,"endColumn":34},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","line":84,"column":67,"nodeType":"JSXText","messageId":"unescapedEntityAlts"},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","line":84,"column":75,"nodeType":"JSXText","messageId":"unescapedEntityAlts"},{"ruleId":"react/no-children-prop","severity":2,"message":"Do not pass children as props. Instead, nest children between the opening and closing tags.","line":89,"column":39,"nodeType":"JSXAttribute","messageId":"nestChildren","endLine":89,"endColumn":98},{"ruleId":"react/no-children-prop","severity":2,"message":"Do not pass children as props. Instead, nest children between the opening and closing tags.","line":90,"column":39,"nodeType":"JSXAttribute","messageId":"nestChildren","endLine":90,"endColumn":97},{"ruleId":"react/no-children-prop","severity":2,"message":"Do not pass children as props. Instead, nest children between the opening and closing tags.","line":91,"column":39,"nodeType":"JSXAttribute","messageId":"nestChildren","endLine":91,"endColumn":100},{"ruleId":"react/no-children-prop","severity":2,"message":"Do not pass children as props. Instead, nest children between the opening and closing tags.","line":92,"column":39,"nodeType":"JSXAttribute","messageId":"nestChildren","endLine":92,"endColumn":66},{"ruleId":"react/no-children-prop","severity":2,"message":"Do not pass children as props. Instead, nest children between the opening and closing tags.","line":93,"column":39,"nodeType":"JSXAttribute","messageId":"nestChildren","endLine":93,"endColumn":97},{"ruleId":"react/no-children-prop","severity":2,"message":"Do not pass children as props. Instead, nest children between the opening and closing tags.","line":94,"column":39,"nodeType":"JSXAttribute","messageId":"nestChildren","endLine":94,"endColumn":92},{"ruleId":"react/no-children-prop","severity":2,"message":"Do not pass children as props. Instead, nest children between the opening and closing tags.","line":95,"column":39,"nodeType":"JSXAttribute","messageId":"nestChildren","endLine":95,"endColumn":94},{"ruleId":"react/no-children-prop","severity":2,"message":"Do not pass children as props. Instead, nest children between the opening and closing tags.","line":96,"column":39,"nodeType":"JSXAttribute","messageId":"nestChildren","endLine":96,"endColumn":69},{"ruleId":"react/no-children-prop","severity":2,"message":"Do not pass children as props. Instead, nest children between the opening and closing tags.","line":97,"column":39,"nodeType":"JSXAttribute","messageId":"nestChildren","endLine":97,"endColumn":68}],"errorCount":14,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { useEffect, useState } from \"react\";\r\nimport InputField from \"../../../../utilityComponents/InputField\";\r\nimport ComboSelectBox from \"./ComboSelectBox\";\r\nimport InputFieldProfileToggler from \"./InputFieldProfile\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport RegionSelection from \"./RegionSelection\";\r\nimport UserTypeSelection from \"./UserTypeSelection\";\r\n\r\n\r\n\r\nconst profileInputValues = {\r\n  firstName: {\r\n    scope: \"provider-private, client\",\r\n    className: \"sm:col-span-3\",\r\n    name: \"first-name\",\r\n    id: \"first-name\",\r\n    label: \"Име*\",\r\n    autoComplete: \"given-name\",\r\n  },\r\n  lastName: {\r\n    scope: \"provider-private, client\",\r\n    className: \"sm:col-span-3\",\r\n    name: \"last-name\",\r\n    id: \"last-name\",\r\n    label: \"Фамилия*\",\r\n    autoComplete: \"family-name\",\r\n  },\r\n  companyName: {\r\n    scope: \"provider-company\",\r\n    className: \"sm:col-span-6\",\r\n    name: \"company\",\r\n    id: \"company\",\r\n    label: \"Име на фирма*\",\r\n  },\r\n  url: {\r\n    scope: \"provider-private, provider-company\",\r\n    className: \"sm:col-span-3\",\r\n    name: \"url\",\r\n    id: \"url\",\r\n    label: \"Уеб сайт\",\r\n  },\r\n  facebook: {\r\n    scope: \"provider-private, provider-company\",\r\n    className: \"sm:col-span-3\",\r\n    name: \"facebook\",\r\n    id: \"facebook\",\r\n    label: \"Фейсбук\",\r\n  },\r\n  phone: {\r\n    scope: \"client, provider-private, provider-company\",\r\n    className: \"sm:col-span-3\",\r\n    name: \"phone-number\",\r\n    id: \"phone-number\",\r\n    label: \"Телефонен номер*\",\r\n    autoComplete: \"tel\",\r\n  },\r\n};\r\n\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\n\r\n\r\nexport default function Profile() {\r\n\r\n  const [scrolledPosition, setScrolledPosition] = useState<number | null>(null)\r\n\r\n  window.addEventListener(\"scroll\", () => { setScrolledPosition(window.scrollY); });\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(scrolledPosition)\r\n  }, [scrolledPosition])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex-1 py-4 px-4 md:px-6 lg:px-8\">\r\n        <form className=\"space-y-8 max-w-3xl\">\r\n          <p className=\"text-sm text-gray-500\">\r\n            Информацията ще бъде използвана за да съставим вашата \"Визитка\".\r\n          </p>\r\n          <div className=\"grid grid-cols-1 gap-y-6 sm:grid-cols-6 sm:gap-x-6\">\r\n            <UserTypeSelection />\r\n            <ProfilePhoto />\r\n            <InputFieldProfileToggler children={<InputField {...profileInputValues.firstName} />} scope={profileInputValues.firstName.scope} />\r\n            <InputFieldProfileToggler children={<InputField {...profileInputValues.lastName} />} scope={profileInputValues.lastName.scope} />\r\n            <InputFieldProfileToggler children={<InputField {...profileInputValues.companyName} />} scope={profileInputValues.companyName.scope} />\r\n            <InputFieldProfileToggler children={<ProfileAbout />} scope=\"client, provider-private, provider-company\" />\r\n            <InputFieldProfileToggler children={<InputField {...profileInputValues.facebook} />} scope={profileInputValues.facebook.scope} />\r\n            <InputFieldProfileToggler children={<InputField {...profileInputValues.url} />} scope={profileInputValues.url.scope} />\r\n            <InputFieldProfileToggler children={<InputField {...profileInputValues.phone} />} scope={profileInputValues.phone.scope} />\r\n            <InputFieldProfileToggler children={<RegionSelection />} scope=\"client\" />\r\n            <InputFieldProfileToggler children={<ComboSelectBox />} scope=\"provider-private, provider-company\" />\r\n          </div>\r\n          <div className=\"flex justify-end pt-8 gap-4\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-blue-700 \"\r\n            >\r\n              Запиши\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-900 shadow-sm hover:bg-gray-50 \"\r\n            >\r\n              Отмени\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\account\\profile\\ProfileAbout.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":1,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":1,"endColumn":39}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export default function ProfileAbout() {\r\n    return (\r\n        <div className=\"sm:col-span-6\">\r\n            <label\r\n                htmlFor=\"description\"\r\n                className=\"block text-sm font-normal text-gray-900\"\r\n            >\r\n                Няколко думи за Вас*\r\n            </label>\r\n            <div className=\"mt-1\">\r\n                <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    rows={4}\r\n                    className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm overflow-y-scroll md:overflow-y-auto\"\r\n                    defaultValue={\"\"}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\account\\profile\\ProfilePhoto.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":1,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":1,"endColumn":39}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export default function ProfilePhoto() {\r\n  return (\r\n    <>\r\n      <div className=\"sm:col-span-6\">\r\n        <label\r\n          htmlFor=\"photo\"\r\n          className=\"block text-sm text-gray-900\"\r\n        >\r\n          Снимка\r\n        </label>\r\n        <div className=\"mt-1 flex items-center\">\r\n          <img\r\n            className=\"inline-block h-12 w-12 rounded-full\"\r\n            src=\"https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2.5&w=256&h=256&q=80\"\r\n            alt=\"\"\r\n          />\r\n          <div className=\"ml-4 flex\">\r\n            <div className=\"relative flex cursor-pointer items-center rounded-md border border-gray-300 bg-white py-2 px-3 shadow-sm hover:bg-gray-50\">\r\n              <label\r\n                htmlFor=\"user-photo\"\r\n                className=\"pointer-events-none relative text-sm text-gray-900\"\r\n              >\r\n                {/* //TODO bug - sticks above the mobile menu */}\r\n                <span>Смени</span>\r\n                <span className=\"sr-only\"> user photo</span>\r\n              </label>\r\n              <input\r\n                id=\"user-photo\"\r\n                name=\"user-photo\"\r\n                type=\"file\"\r\n                className=\"absolute inset-0 h-full w-full cursor-pointer rounded-md border-gray-300 opacity-0\"\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"ml-3 rounded-md border border-transparent bg-transparent py-2 px-3 text-sm text-gray-900 hover:text-gray-700 focus:border-gray-300 \"\r\n            >\r\n              Премахни\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\account\\profile\\ProviderSection.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ProfileInputValues' is assigned a value but never used.","line":1,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":25},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":45,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":45,"endColumn":42}],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const ProfileInputValues = {\r\n    firstName: {\r\n      className: \"sm:col-span-3\",\r\n      name: \"first-name\",\r\n      id: \"first-name\",\r\n      label: \"Име*\",\r\n      autoComplete: \"given-name\",\r\n    },\r\n    lastName: {\r\n      className: \"sm:col-span-3\",\r\n      name: \"last-name\",\r\n      id: \"last-name\",\r\n      label: \"Фамилия*\",\r\n      autoComplete: \"family-name\",\r\n    },\r\n    companyName: {\r\n      className: \"sm:col-span-6\",\r\n      name: \"company\",\r\n      id: \"company\",\r\n      label: \"Име на фирма\",\r\n    },\r\n    url: {\r\n      className: \"sm:col-span-3\",\r\n      name: \"url\",\r\n      id: \"url\",\r\n      label: \"Уеб сайт\",\r\n    },\r\n    facebook: {\r\n      className: \"sm:col-span-3\",\r\n      name: \"facebook\",\r\n      id: \"facebook\",\r\n      label: \"Фейсбук\",\r\n    },\r\n  \r\n    phone: {\r\n      className: \"sm:col-span-3\",\r\n      name: \"phone-number\",\r\n      id: \"phone-number\",\r\n      label: \"Телефонен номер\",\r\n      autoComplete: \"tel\",\r\n    },\r\n  \r\n  };\r\n  \r\nexport default function ProviderSection() {\r\n    return <div>\r\n\r\n    </div>\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\account\\profile\\RegionSelection.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":1,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":1,"endColumn":42}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export default function RegionSelection() {\r\n    return (\r\n        <div className=\"sm:col-span-3\">\r\n            <label\r\n                htmlFor=\"country\"\r\n                className=\"block text-sm text-gray-900\"\r\n            >\r\n                Квартал/Район\r\n            </label>\r\n            <select\r\n                id=\"country\"\r\n                name=\"country\"\r\n                autoComplete=\"country-name\"\r\n                className=\"mt-1 block w-full rounded-md border-gray-300 text-gray-900 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\r\n            >\r\n                <option />\r\n                <option>United States</option>\r\n                <option>Canada</option>\r\n                <option>Mexico</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\account\\profile\\UserTypeSelection.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":3,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":3,"endColumn":42},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":17,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":17,"endColumn":44}],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { type UserProviders, type UserServices, userServiceType, userProviderType } from '../../../../store/userTypeStore'\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nconst serviceMode = [\r\n  { id: \"client\", name: 'Търся', description: 'Възползвам се от услуги за почистване' },\r\n  { id: \"provider\", name: 'Предоставям', description: 'Предлагам услуги за почистване' },\r\n]\r\n\r\nconst providerMode = [\r\n  { id: \"private\", name: 'Частно лице', description: 'Профилът Ви ще е представен с име и фамилия' },\r\n  { id: \"company\", name: 'Фирма', description: 'Профилът Ви ще е представен с име на фирмата' },\r\n]\r\n\r\nexport default function UserTypeSelection() {\r\n  const serviceType = userServiceType();\r\n  const providerType = userProviderType();\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sm:col-span-4\">\r\n        <p className=\"block text-sm text-gray-900\">Предоставяте или търсите услуги за почистване?</p>\r\n        <div className=\"mt-2\">\r\n          <div className=\"grid grid-cols-2 gap-3\">\r\n            {serviceMode.map((option) => (\r\n              <div\r\n                key={option.id}\r\n                onClick={() => { userServiceType.setState(option.id as UserServices); }}\r\n                className={classNames(\r\n                  serviceType === option.id\r\n                    ? 'bg-indigo-600 border-transparent text-white hover:bg-indigo-700'\r\n                    : 'bg-white border-gray-200 text-gray-900 hover:bg-gray-50',\r\n                  'border rounded-md py-3 px-3 flex flex-col text-sm sm:flex-1 gap-1 cursor-pointer shadow-order'\r\n                )\r\n                }\r\n              >\r\n                <span className=\"text-base\">{option.name}</span>\r\n                <span className={classNames(serviceType === option.id ? 'text-indigo-100' : 'text-gray-500', \"text-xs\")}>{option.description}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classNames(serviceType === \"client\" ? \"hidden\" : \"rounded-md bg-white sm:col-span-4\")}>\r\n        <div className=\"flex flex-col mt-4 \">\r\n          {providerMode.map((option, selectionId) => (\r\n            <div\r\n              key={option.id}\r\n              onClick={() => { userProviderType.setState(option.id as UserProviders); }}\r\n              className={classNames(\r\n                selectionId === 0 ? 'rounded-tl-md rounded-tr-md' : '',\r\n                selectionId === providerMode.length - 1\r\n                  ? 'rounded-bl-md rounded-br-md'\r\n                  : '',\r\n                providerType === option.id\r\n                  ? 'bg-indigo-50 border-indigo-200 z-10'\r\n                  : 'border-gray-200',\r\n                'relative border p-2 flex cursor-pointer focus:outline-none items-center'\r\n              )\r\n              }\r\n            >\r\n              <span className={classNames(providerType === option.id\r\n                ? 'bg-indigo-600 border-transparent'\r\n                : 'bg-white border-gray-300',\r\n                'mt-0.5 h-4 w-4 shrink-0 cursor-pointer rounded-full border flex items-center justify-center'\r\n              )}\r\n                aria-hidden=\"true\"\r\n              >\r\n                <span className=\"rounded-full bg-white w-1.5 h-1.5\" />\r\n              </span>\r\n              <span className=\"ml-3 flex flex-col\">\r\n                <span className={classNames(providerType === option.id ? 'text-indigo-700' : 'text-gray-900', 'block text-sm')}>{option.name}</span>\r\n                <span className={classNames(providerType === option.id ? 'text-gray-800' : 'text-gray-500', 'text-xs ')}>{option.description}</span>\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\account\\security\\Security.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":27,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":27,"endColumn":42},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'classNames' is defined but never used.","line":27,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":27,"endColumn":20},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":31,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":31,"endColumn":35}],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import InputField from \"../../../../utilityComponents/InputField\";\r\n\r\n\r\nconst ProfileInputValues = {\r\n  email: {\r\n    className: \"sm:col-span-6\",\r\n    name: \"email-address\",\r\n    id: \"email-address\",\r\n    label: \"Имейл адрес\",\r\n    autoComplete: \"email\",\r\n  },\r\n  password: {\r\n    className: \"col-start-1 sm:col-end-7\",\r\n    name: \"password\",\r\n    id: \"password\",\r\n    label: \"Парола\",\r\n  },\r\n  passwordConfirm: {\r\n    className: \"col-start-1 sm:col-end-7\",\r\n    name: \"passwordConfirm\",\r\n    id: \"passwordConfirm\",\r\n    label: \"Потвърди парола\",\r\n  },\r\n\r\n};\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nexport default function Security() {\r\n  return (\r\n    <>\r\n      <div className=\"flex-1 py-4 px-4 md:px-6 lg:px-8\">\r\n        <form className=\"space-y-8 divide-y max-w-3xl\">\r\n\r\n          <div className=\"grid grid-cols-1 gap-y-6 sm:grid-cols-6 sm:gap-x-6\">\r\n            <p className=\"sm:col-span-6 text-sm text-gray-500\">\r\n              Промяна на мейл, парола и т.н.\r\n            </p>\r\n\r\n            <InputField {...ProfileInputValues.email} />\r\n            <InputField {...ProfileInputValues.password} />\r\n            <InputField {...ProfileInputValues.passwordConfirm} />\r\n\r\n          </div>\r\n\r\n          <div className=\"flex justify-end gap-4 pt-8\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-blue-700 \"\r\n            >\r\n              Запиши\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-900 shadow-sm hover:bg-gray-50 \"\r\n            >\r\n              Отмени\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\account\\settings\\AccountSettings.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":1,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":1,"endColumn":42}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export default function AccountSettings() {\r\n  return (\r\n    <fieldset className=\"space-y-5 flex-1 py-4 px-4 md:px-6 lg:px-8\">\r\n      <p className=\"sm:col-span-6 text-sm text-gray-500\">\r\n        Настройки на изглед, нотификации и т.н.\r\n      </p>\r\n      <legend className=\"sr-only\">Notifications</legend>\r\n      <div className=\"relative flex items-start\">\r\n        <div className=\"flex h-5 items-center\">\r\n          <input\r\n            id=\"comments\"\r\n            aria-describedby=\"comments-description\"\r\n            name=\"comments\"\r\n            type=\"checkbox\"\r\n            className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 \"\r\n          />\r\n        </div>\r\n        <div className=\"ml-3 text-sm\">\r\n          <label htmlFor=\"comments\" className=\"font-medium text-gray-700\">\r\n            Получавайте известия по Вайбър\r\n          </label>\r\n          <p id=\"comments-description\" className=\"text-gray-500\">\r\n            При потвърждаване и промяна на поръчки, ще получавате съобщения във вайбър като допълнение към съобщенията ви в сайта\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"relative flex items-start\">\r\n        <div className=\"flex h-5 items-center\">\r\n          <input\r\n            id=\"candidates\"\r\n            aria-describedby=\"candidates-description\"\r\n            name=\"candidates\"\r\n            type=\"checkbox\"\r\n            className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 \"\r\n            \r\n          />\r\n        </div>\r\n        <div className=\"ml-3 text-sm\">\r\n          <label htmlFor=\"candidates\" className=\"font-medium text-gray-700\">\r\n            Candidates\r\n          </label>\r\n          <p id=\"candidates-description\" className=\"text-gray-500\">\r\n            Get notified when a candidate applies for a job.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"relative flex items-start\">\r\n        <div className=\"flex h-5 items-center\">\r\n          <input\r\n            id=\"offers\"\r\n            aria-describedby=\"offers-description\"\r\n            name=\"offers\"\r\n            type=\"checkbox\"\r\n            className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 \"\r\n          />\r\n        </div>\r\n        <div className=\"ml-3 text-sm\">\r\n          <label htmlFor=\"offers\" className=\"font-medium text-gray-700\">\r\n            Offers\r\n          </label>\r\n          <p id=\"offers-description\" className=\"text-gray-500\">\r\n            Get notified when a candidate accepts or rejects an offer.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </fieldset>\r\n  )\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\chat\\Chat.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":5,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":5,"endColumn":31},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":8,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":8,"endColumn":27}],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from \"react\";\r\nimport ChatBuddies from \"./ChatBuddies\";\r\nimport Messages from \"./Messages\";\r\n\r\nexport default function Chat() {\r\n  const [chatIsActive, setChatIsActive] = useState(false);\r\n\r\n  const toggleChat = () => {\r\n    setChatIsActive(toggle => !toggle);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      <ChatBuddies toggleChat={toggleChat} chatIsActive={chatIsActive} />\r\n      <Messages toggleChat={toggleChat} chatIsActive={chatIsActive} />\r\n    </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\chat\\ChatBuddies.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":48,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":48,"endColumn":84},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":51,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":51,"endColumn":49},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected number value in conditional. An explicit zero/NaN check is required.","line":88,"column":16,"nodeType":"MemberExpression","messageId":"conditionErrorNumber","endLine":88,"endColumn":29,"suggestions":[{"messageId":"conditionFixCompareZero","fix":{"range":[3277,3290],"text":"(person.unread !== 0)"},"desc":"Change condition to check for 0 (`value !== 0`)"},{"messageId":"conditionFixCompareNaN","fix":{"range":[3277,3290],"text":"(!Number.isNaN(person.unread))"},"desc":"Change condition to check for NaN (`!Number.isNaN(value)`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[3277,3290],"text":"(Boolean(person.unread))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]}],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { useState } from \"react\";\r\nimport classNames from \"../../../helpers/classNames\";\r\n\r\nconst chatBuddies = [\r\n  {\r\n    id: 1,\r\n    name: \"Leslie Alexand  asfasfsd sadf  asf asf as easd sadg asdr\",\r\n    handle: \"lesliealexander\",\r\n    role: \"Co-Founder / CEO\",\r\n    imageUrl:\r\n      \"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\",\r\n    unread: 4,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Michael Foster\",\r\n    handle: \"michaelfoster\",\r\n    role: \"Co-Founder / CTO\",\r\n    imageUrl:\r\n      \"https://images.unsplash.com/photo-1519244703995-f4e0f30006d5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\",\r\n    unread: 4,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Dries Vincent\",\r\n    handle: \"driesvincent\",\r\n    role: \"Manager, Bus asdf sd sdf siness Relations\",\r\n    imageUrl:\r\n      \"https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\",\r\n    unread: 4,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Lindsay Walton\",\r\n    handle: \"lindsaywalton\",\r\n    role: \"Front-end Developer\",\r\n    imageUrl:\r\n      \"https://images.unsplash.com/photo-1517841905240-472988babdf9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\",\r\n    unread: 4,\r\n  },\r\n];\r\n\r\ninterface ChatBuddiesProps {\r\n    toggleChat: () => void;\r\n    chatIsActive: boolean;\r\n}\r\n\r\nexport default function ChatBuddies({ toggleChat, chatIsActive }: ChatBuddiesProps) {\r\n  const [active, setActive] = useState(1);\r\n\r\n  const handleBuddySelect = (buddyId: number) => {\r\n    setActive(buddyId);\r\n    toggleChat()\r\n  };\r\n\r\n  return (\r\n    <div className={classNames(chatIsActive ? \"hidden\" : \"block\", \"md:block border-y w-full md:w-auto min-w-0 flex-none\")}>\r\n      {\r\n        <ul role=\"list\" className=\"relative z-0\">\r\n          {chatBuddies.map((person) => (\r\n            <li\r\n              key={person.id}\r\n              onClick={() => { handleBuddySelect(person.id); }}\r\n              className={classNames(\r\n                person.id === active ? \"bg-indigo-50\" : \"\",\r\n                \"group hover:bg-indigo-50 flex justify-between cursor-pointer border-b border-indigo-100  px-4\"\r\n              )}\r\n            >\r\n              <div className=\"relative flex items-center space-x-3 py-4 focus-within:ring-2 focus-within:ring-inset focus-within:ring-pink-500 \">\r\n                <img\r\n                  className=\"flex-shrink-0 h-10 w-10 rounded-full\"\r\n                  src={person.imageUrl}\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"w-44 truncate\">\r\n                  <a className=\"focus:outline-none\">\r\n                    {/* Extend touch target to entire panel */}\r\n                    <span className=\"absolute inset-0\" aria-hidden=\"true\" />\r\n                    <p className=\"text-sm font-medium text-gray-900 truncate\">\r\n                      {person.name}\r\n                    </p>\r\n                    <p className=\"text-xs text-gray-500 truncate\">\r\n                      {person.role}\r\n                    </p>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              {person.unread ? (\r\n                <span\r\n                  className={classNames(\r\n                    person.id === active ? \"bg-indigo-200\" : \"bg-indigo-50\",\r\n                    \"self-center ml-3 block py-0.5 px-3 text-xs font-medium rounded-full group-hover:bg-indigo-200 \"\r\n                  )}\r\n                >\r\n                  {person.unread}\r\n                </span>\r\n              ) : null}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\chat\\Messages.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'useMemo' is defined but never used.","line":3,"column":45,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":52},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":97,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":97,"endColumn":78},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'messageAdded' is assigned a value but never used.","line":101,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":101,"endColumn":22},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":108,"column":30,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":108,"endColumn":35},{"ruleId":"@typescript-eslint/restrict-plus-operands","severity":2,"message":"Operands of '+' operation must either be both strings or both numbers. Consider using a template literal.","line":145,"column":37,"nodeType":"BinaryExpression","messageId":"notStrings","endLine":145,"endColumn":73},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":158,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":158,"endColumn":27},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":181,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":181,"endColumn":40}],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { FaceSmileIcon, ArrowSmallLeftIcon } from \"@heroicons/react/24/outline\";\r\nimport { PaperAirplaneIcon } from \"@heroicons/react/24/solid\";\r\nimport React, { useEffect, useLayoutEffect, useMemo, useRef, useState } from \"react\";\r\nimport classNames from \"../../../helpers/classNames\";\r\nimport data from '@emoji-mart/data/sets/14/native.json'\r\nimport Picker from '@emoji-mart/react'\r\nimport throttle from 'lodash.throttle'\r\n\r\n\r\nconst messages = [\r\n  {\r\n    id: 1,\r\n    text: \"sdgasdgasdga, asdg as,dga ,sdg, asdg\",\r\n    date: \"12:35 AM\",\r\n    type: \"in\",\r\n  }, \r\n  {\r\n    id: 2,\r\n    text: \"sdgasdgasd ga, asdg as,dga ,sdg sad fas df as df asd f asdf asdf asdf asdf sd , asdg\",\r\n    date: \"2:35 AM\",\r\n    type: \"out\",\r\n  },\r\n  {\r\n    id: 3,\r\n    text: `sdgasdgasdga,sadfasdf asd fasdf asdf as df as dg as, dga ,sdg, asdg `,\r\n    date: \"2:35 AM\",\r\n    type: \"in\",\r\n  },\r\n  {\r\n    id: 4,\r\n    text: \"sdgasdgasdga, asdga sdfasdf asdfa sdfasd  as,dga ,sdg, asdg\",\r\n    date: \"2:35 PM\",\r\n    type: \"in\",\r\n  },\r\n  {\r\n    id: 5,\r\n    text: \"sdgasdgasdga, asdg as,dga ,sdg, asdg\",\r\n    date: \"5:45 PM\",\r\n    type: \"in\",\r\n  },\r\n  {\r\n    id: 6,\r\n    text: \"sdgasdgasdga, asdg as,dga ,sdg, asdg\",\r\n    date: \"2:35 AM\",\r\n    type: \"out\",\r\n  },\r\n  {\r\n    id: 7,\r\n    text: \"sdgasdgasdga, asdg as,dga ,sdg, asdg\",\r\n    date: \"2:35 AM\",\r\n    type: \"out\",\r\n  },\r\n  {\r\n    id: 8,\r\n    text: \"!!!!sdgasdgasdga, asdg as,dga ,sdg, asdg\",\r\n    date: \"2:35 AM\",\r\n    type: \"out\",\r\n  }, {\r\n    id: 9,\r\n    text: \"!!!!sdgasdgasdga, asdg as,dga ,sdg, asdg\",\r\n    date: \"2:35 AM\",\r\n    type: \"in\",\r\n  }, {\r\n    id: 10,\r\n    text: \"!!!!sdgasdgasdga, asdg as,dga ,sdg, asdg\",\r\n    date: \"2:35 AM\",\r\n    type: \"out\",\r\n  }, {\r\n    id: 11,\r\n    text: \"!!!!sdga12312 123123123 12sd 😆😀😅🤣😂🙂😅😅🥶🥶 gasdga, asdg as,dga ,sdg, asdg\",\r\n    date: \"2:35 AM\",\r\n    type: \"in\",\r\n  },\r\n  {\r\n    id: 12,\r\n    text: \"😀\",\r\n    date: \"2:35 AM\",\r\n    type: \"in\",\r\n  },\r\n];\r\n\r\ninterface MessagesProps {\r\n  toggleChat: () => void;\r\n  chatIsActive: boolean;\r\n}\r\n\r\ninterface Emojis {\r\n  id: string;\r\n  keywords: string[];\r\n  name: string;\r\n  native: string;\r\n  shortcodes: string;\r\n  unified: string;\r\n}\r\n\r\n\r\nexport default function Messages({ toggleChat, chatIsActive }: MessagesProps) {\r\n  \r\n  const [emojiActive, setEmojiActive] = useState(false);\r\n  const [messageText, setMessageText] = useState(\"\");\r\n  const [messageAdded, setMessageAdded] = useState(1);\r\n  const [chatContent, setChatContent] = useState(messages);\r\n  const inputRef = useRef<null | HTMLTextAreaElement>(null);\r\n  const formRef = useRef<null | HTMLFormElement>(null);\r\n  const chatRef = useRef<null | HTMLUListElement>(null);\r\n  const emojiRE = /(\\p{Emoji_Presentation}|\\p{Extended_Pictographic}|\\p{Emoji_Presentation}|\\u{FE0F}|\\u{200d})/gu;\r\n  \r\n  const scrollChatToBottom = () => {\r\n    if (chatRef.current == null) return;\r\n    chatRef.current.scrollTo({\r\n      left: 0,\r\n      top: chatRef.current.scrollHeight,\r\n    })\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\r\n    inputRef.current?.addEventListener(\"keydown\", (e) => {\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) return\r\n        // avoids leaving enter in input element after form is submitted\r\n        e.preventDefault()\r\n        // submits form on enter for desktop\r\n        formRef.current?.requestSubmit();\r\n      }\r\n    })\r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    // chatRef.current.scrollTop = chatRef.current.scrollHeight;\r\n    scrollChatToBottom()\r\n  }, [chatContent])\r\n\r\n  \r\n  useLayoutEffect(() => {\r\n    // adjust automatically chat input height and keep chat window scrolled at the end\r\n    if ((inputRef.current == null) || (chatRef.current == null)) return;\r\n    let scrollTo;\r\n    // detect scrolled position of chat window \r\n    const atBottom = chatRef.current?.scrollHeight - chatRef.current?.clientHeight - chatRef.current?.scrollTop\r\n    // save chatwindow height if it is scrolled at the bottom\r\n    if (atBottom < 10) scrollTo = chatRef.current?.scrollHeight\r\n    // set automatically input height based on the text inside. Minimum height is 36px\r\n    inputRef.current.style.height = '36px';\r\n    inputRef.current.style.height = inputRef.current.scrollHeight + 'px';;\r\n    // push chat window if it was at the bottom, in case input height has changed\r\n    if (atBottom < 10)\r\n      chatRef.current.scrollTo({\r\n        left: 0,\r\n        top: scrollTo,\r\n      })\r\n  }, [messageText])\r\n\r\n  const handleChat: React.ChangeEventHandler<HTMLTextAreaElement> = (e) => {\r\n    setMessageText(e.target.value)\r\n  }\r\n\r\n  const addMessage = () => {\r\n    if (messageText.length === 0) return;\r\n    const newId = chatContent[chatContent.length - 1].id + 1;\r\n    setChatContent(chat =>\r\n      [...chat, {\r\n        id: newId,\r\n        text: messageText,\r\n        date: \"12:35 AM\",\r\n        type: \"in\",\r\n      }]);\r\n    setMessageText(\"\")\r\n    setMessageAdded(count => count + 1)\r\n  }\r\n\r\n  const toggleEmoji = throttle((toggle: \"on\" | \"off\" | \"toggle\") => {\r\n    // use throttle as toggleEmoji is called also by onClickOutside and is potentially executed two times\r\n    setEmojiActive(active => (\r\n      toggle === \"off\" ? false :\r\n        toggle === \"on\" ? true :\r\n          toggle === \"toggle\" && !active\r\n    ))\r\n  }, 50, { trailing: false })\r\n\r\n  const selectEmoji = (data: Emojis) => {\r\n    setMessageText(text => text + data.native);\r\n    console.log(data)\r\n    // inputRef.current?.focus()\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    // TODO fix the view for mobile - right now using fixed as workaround. Remove the stuff like headers and footers and such.\r\n    <div className={classNames(!chatIsActive ? \"hidden\" : \"flex z-50 bg-white\", \"md:flex flex-col border w-full pb-4 h-[calc(100dvh-88px)]\")}>\r\n      {/* Selected person for chat */}\r\n      <div className=\"relative flex items-center space-x-3 border-b mb-2 md:py-4 py-1 justify-between md:justify-end focus-within:ring-2 focus-within:ring-inset focus-within:ring-pink-500  px-4\">\r\n        <ArrowSmallLeftIcon onClick={() => { toggleChat() }} className=\"md:hidden h-6 w-6 text-indigo-500\" />\r\n        <div className=\"flex items-center gap-2\">\r\n          <img\r\n            className=\"flex-shrink-0 h-10 w-10 rounded-full\"\r\n            src=\"https://images.unsplash.com/photo-1519244703995-f4e0f30006d5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\r\n            alt=\"\"\r\n          />\r\n          <p className=\"text-sm font-medium text-gray-900 truncate\">\r\n            Leslie Alexand\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {/* Chat window */}\r\n      <ul ref={chatRef} className=\"flex flex-col overflow-y-auto  px-4\">\r\n        {chatContent.map((message) => {\r\n          return (\r\n            <li\r\n              key={message.id}\r\n              className={classNames(\r\n                message.type === \"out\"\r\n                  ? \"items-end self-end\"\r\n                  : \"self-start items-start\",\r\n                \"flex flex-col gap-1 mb-4 w-full max-w-xs\"\r\n              )}\r\n            >\r\n              <div className=\"flex items-end gap-1\">\r\n                <img\r\n                  className={classNames(message.type === \"out\" ? \"hidden\" : \"flex-shrink-0 h-7 w-7 rounded-full\")}\r\n                  src=\"https://images.unsplash.com/photo-1519244703995-f4e0f30006d5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\r\n                  alt=\"\"\r\n                />\r\n                <p\r\n                  className={classNames(\r\n                    message.type === \"out\"\r\n                      ? \"bg-indigo-600 text-gray-200\"\r\n                      : \"bg-gray-200 text-gray-800\",\r\n                    message.text.replace(emojiRE, '').length === 0 ? \"text-4xl bg-transparent p-0\" :\r\n                      \"py-2 px-4 rounded-2xl text-sm max-w-chat md:max-w-chat-md break-words whitespace-pre-line shadow-md\",\r\n                  )}\r\n                >\r\n                  {message.text}\r\n                </p>\r\n              </div>\r\n\r\n              <p\r\n                className={classNames(\r\n                  message.type === \"out\" ? \"pr-2\" : \"pl-2\",\r\n                  \"text-xs text-gray-500\"\r\n                )}\r\n              >\r\n                {message.date}\r\n              </p>\r\n            </li>\r\n          );\r\n        })}\r\n\r\n        {/* <ScrollIntoView messageAdded={messageAdded} /> */}\r\n      </ul>\r\n      {/* Chat input */}\r\n      <div className=\"flex items-end gap-2 px-4\">\r\n        <form ref={formRef} onSubmit={() => { addMessage(); }} className=\"flex w-full gap-2 items-end\">\r\n          <div className=\"h-10 flex items-center relative\">\r\n            <FaceSmileIcon onClick={() => toggleEmoji(\"toggle\")} className=\"cursor-pointer h-7 w-7 text-indigo-500\" />\r\n            <div className={classNames(emojiActive ? \"block\" : \"hidden\", \"absolute transform bottom-0 -translate-y-11\")} >\r\n              {/* <EmojiPicker onEmojiClick={selectEmoji} /> */}\r\n              <Picker set=\"native\" onClickOutside={() => toggleEmoji(\"off\")} data={data} onEmojiSelect={selectEmoji} />\r\n            </div>\r\n          </div>\r\n          <div className=\"w-full flex items-center overflow-hidden pr-4 rounded-2xl border-indigo-300 border-2  focus:border-indigo-500 transition-colors duration-200 text-sm text-gray-700\">\r\n            <textarea\r\n              id=\"textarea\"\r\n              value={messageText}\r\n              ref={inputRef}\r\n              onChange={handleChat}\r\n              placeholder=\"Aa\"\r\n              className=\"resize-none min-h-[36px] py-1 pt-1.5 h-9 max-h-28 overflow-auto w-full border-none focus:outline-none focus:ring-0\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"h-10\">\r\n            <PaperAirplaneIcon onClick={() => { addMessage(); }} className=\"h-9 w-9 p-1 text-indigo-500 cursor-pointer\"></PaperAirplaneIcon>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\orders\\Orders.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":11,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":11,"endColumn":33},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":17,"column":47,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":17,"endColumn":57,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[666,676],"text":"(defaultTab != null)"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[666,676],"text":"(defaultTab ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[666,676],"text":"(Boolean(defaultTab))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":17,"column":58,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":17,"endColumn":60,"suggestions":[{"messageId":"suggestNullish","fix":{"range":[677,679],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { Route, Routes, useLocation } from \"react-router-dom\";\r\nimport TabsMenu from \"../../../utilityComponents/TabsMenu\";\r\nimport OrderlistGrid from \"./orderlist/OrderlistGrid\";\r\nimport OrderSchedule from \"./orderschedule/OrderSchedule\";\r\n\r\nconst tabs = [\r\n    { id: 1, name: 'График', href: '#/dashboard/orders/schedule' },\r\n    { id: 2, name: 'Списък', href: '#/dashboard/orders/list' },\r\n]\r\n\r\nexport default function Orders() {\r\n    const location = useLocation();\r\n\r\n    const defaultTab = tabs.find(tab => tab.href.includes(location.pathname))?.name\r\n    return (\r\n        <div className=\"px-2 md:px-6 lg:px-8\">\r\n            <TabsMenu tabs={tabs} defaultTab={defaultTab || \"График\"} />\r\n            <Routes>\r\n                <Route path=\"/\" element={<OrderSchedule/>}/>\r\n                <Route path=\"schedule\" element={<OrderSchedule />} />\r\n                <Route path=\"list\" element={<OrderlistGrid />} />\r\n            </Routes>\r\n        </div>\r\n    )\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\orders\\orderlist\\OrderItem.tsx","messages":[{"ruleId":"react/prop-types","severity":2,"message":"'children' is missing in props validation","line":9,"column":50,"nodeType":"Property","messageId":"missingPropType","endLine":9,"endColumn":58},{"ruleId":"react/prop-types","severity":2,"message":"'styles' is missing in props validation","line":9,"column":60,"nodeType":"Property","messageId":"missingPropType","endLine":9,"endColumn":66},{"ruleId":"react/prop-types","severity":2,"message":"'stylesParent' is missing in props validation","line":9,"column":68,"nodeType":"Property","messageId":"missingPropType","endLine":9,"endColumn":80},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":10,"column":104,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":10,"endColumn":116,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[366,378],"text":"(stylesParent != null)"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[366,378],"text":"(stylesParent ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[366,378],"text":"(Boolean(stylesParent))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":10,"column":117,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":10,"endColumn":119,"suggestions":[{"messageId":"suggestNullish","fix":{"range":[379,381],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":10,"column":183,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":10,"endColumn":189,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[445,451],"text":"(styles != null)"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[445,451],"text":"(styles ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[445,451],"text":"(Boolean(styles))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":10,"column":190,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":10,"endColumn":192,"suggestions":[{"messageId":"suggestNullish","fix":{"range":[452,454],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import classNames from \"../../../../helpers/classNames\"\r\n\r\ninterface OrderItemProps {\r\n    children: React.ReactNode;\r\n    styles?: string;\r\n    stylesParent?: string;\r\n}\r\n\r\n  const OrderItem: React.FC<OrderItemProps> = ({ children, styles, stylesParent }) => {\r\n    return <div className={classNames(\"z-10 flex md:flex min-w-0 items-center px-2 py-2 h-16 text-sm\", stylesParent || \"\" )}><span className={classNames(\"min-w-0 line-clamp-2 flex\", styles || \"\")}>{children}</span></div>\r\n}\r\n\r\nexport default OrderItem;","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\orders\\orderlist\\OrderlistGrid.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'numRows' is assigned a value but never used.","line":110,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":110,"endColumn":14},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":112,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":112,"endColumn":40}],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import OrderItem from \"./OrderItem\";\r\nimport classNames from \"../../../../helpers/classNames\";\r\nimport ContextMenu from \"../../../../utilityComponents/ContextMenu\";\r\nimport Filters from \"../../../../utilityComponents/Filters\";\r\nimport { ClipboardDocumentCheckIcon, HomeIcon, UserIcon , MapPinIcon } from \"@heroicons/react/24/outline\";\r\nimport { ChevronRightIcon } from \"@heroicons/react/20/solid\";\r\n\r\n\r\nconst people = [\r\n  {\r\n    id: 1,\r\n    name: \"Lindsay Lohan\",\r\n    neighbourhood: \"Кръстова Вада\",\r\n    services: \"основно, гладене, прозорци, баня\",\r\n    type: \"subscription\",\r\n    detals: \"Апартамент\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Lindsay Walton\",\r\n    neighbourhood: \"Витоша\",\r\n    services: \"основно, хладилник\",\r\n    type: \"onetime\",\r\n    detals: \"Апартамент\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Lindsay Walton\",\r\n    neighbourhood: \"Младост 4\",\r\n    services: \"прозорци, баня\",\r\n    type: \"subscription\",\r\n    detals: \"Апартамент\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Lindа сдфсдsay Walton\",\r\n    neighbourhood: \"Надежда\",\r\n    services: \"основно, гладене, прозорци\",\r\n    type: \"onetime\",\r\n    detals: \"Апартамент\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Lindсд фсадфsay Walton\",\r\n    neighbourhood: \"Изток\",\r\n    services: \"основно, гладене\",\r\n    type: \"onetime\",\r\n    detals: \"Офис\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"сдф W alton\",\r\n    neighbourhood: \"Кръстова Вада\",\r\n    services: \"основно, прозорци\",\r\n    type: \"onetime\",\r\n    detals: \"Апартамент\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Lindsay Walton\",\r\n    neighbourhood: \"Полигона\",\r\n    services: \"основно, печка\",\r\n    type: \"subscription\",\r\n    detals: \"Офис\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Lindsay Walton\",\r\n    neighbourhood: \"Дружба\",\r\n    services: \"прозорци\",\r\n    type: \"onetime\",\r\n    detals: \"Офис\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Linds ay Walton\",\r\n    neighbourhood: \"Лозенец\",\r\n    services: \"основно, гладене, прозорци\",\r\n    type: \"subscription\",\r\n    detals: \"Къща\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Lindsay Walton\",\r\n    neighbourhood: \"Манастирски Ливади\",\r\n    services: \"основно, гладене, прозорци\",\r\n    type: \"subscription\",\r\n    detals: \"Офис\",\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"Lindsay Walton\",\r\n    neighbourhood: \"Бояна\",\r\n    services: \"основно\",\r\n    type: \"onetime\",\r\n    detals: \"Апартамент\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Lindsay Walton\",\r\n    neighbourhood: \"Малинова Долина\",\r\n    services: \"под, баня\",\r\n    type: \"onetime\",\r\n    detals: \"Къща\",\r\n  },\r\n  // More people...\r\n];\r\n\r\nconst numCols = 6;\r\nconst numRows = people.length / numCols + (people.length % numCols > 0 ? 1 : 0);\r\n\r\nexport default function OrderlistGrid() {\r\n  return (\r\n    <div className=\"pt-4\">\r\n      <p className=\"sm:col-span-6 text-sm text-gray-500 mb-4\">\r\n        Списък със заявени, договорени и изпълнени поръчки.\r\n      </p>\r\n      <Filters />\r\n      {/* Desktop view */}\r\n      <div className=\"hidden md:flex flex-col gap-4\">\r\n        <div className=\"font-medium grid grid-cols-[1fr,1fr,1rem] md:grid-cols-[2.5rem,1fr,8rem,1fr,1fr,8rem,1.5rem] auto-rows-fr gap-y-10 px-5 rounded-lg h-12 bg-white py-1 \">\r\n          <OrderItem>#</OrderItem>\r\n          <OrderItem>Име</OrderItem>\r\n          <OrderItem>Помещение</OrderItem>\r\n          <OrderItem>Квартал</OrderItem>\r\n          <OrderItem>Услуги</OrderItem>\r\n          <OrderItem>Вид посещение</OrderItem>\r\n        </div>\r\n        {people.map((person) => {\r\n          return (\r\n            <div\r\n              key={person.id}\r\n              className=\"text-gray-800 grid grid-cols-[1fr,1fr,1.5rem] md:grid-cols-[2.5rem,1fr,8rem,1fr,1fr,8rem,1.5rem] auto-rows-fr gap-y-10 md:px-5 rounded-lg  border border-indigo-100 bg-white py-1 shadow-order transition-shadow hover:shadow-order-hover\"\r\n            >\r\n              <OrderItem styles=\"md:block text-xs text-indigo-500 font-medium cursor-pointer hover:text-indigo-900\">\r\n                #{person.id}\r\n              </OrderItem>\r\n              <OrderItem>{person.name}</OrderItem>\r\n              <OrderItem>{person.detals}</OrderItem>\r\n              <OrderItem>{person.neighbourhood}</OrderItem>\r\n              <OrderItem styles=\"text-xs whitespace-normal line-clamp-3\">\r\n                {person.services}\r\n              </OrderItem>\r\n              <OrderItem>\r\n                {\r\n                  <span\r\n                    className={classNames(\r\n                      person.type === \"subscription\"\r\n                        ? \"bg-green-100 text-green-800\"\r\n                        : \"bg-purple-100 text-purple-800\",\r\n                      \"inline-flex items-center rounded-full px-3 py-0.5 text-xs font-medium\"\r\n                    )}\r\n                  >\r\n                    {person.type === \"onetime\" ? \"еднократно\" : \"абонамент\"}\r\n                  </span>\r\n                }\r\n              </OrderItem>\r\n              <ContextMenu />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Mobile view */}\r\n      {/* <div className=\"flex md:hidden flex-col gap-4 bg-gray-100 -mx-2 \">\r\n        {people.map((person) => {\r\n          return (\r\n            <ul key={person.id} className=\"bg-white flex [&_li:nth-child(even)]:bg-gray-50 flex-col shadow-md px-2 \" >\r\n              <li className=\"flex justify-between rounded-xl px-2\">\r\n                <OrderItem styles=\"font-medium text-indigo-900 text-lg flex flex-row line-clamp-none [display:flex] items-center gap-1\"><UserIcon className=\"w-6 h-6\" /><span>#{person.id}</span></OrderItem>\r\n                <OrderItem styles=\"bg-green-100 text-green-800 inline-flex items-center rounded-full px-4 text-lg py-1 font-medium -mr-2\">Активна</OrderItem> \r\n              </li>\r\n              <li className=\"flex justify-between rounded-xl px-2\">\r\n                <OrderItem styles=\"text-gray-500\">Клиент</OrderItem>\r\n                <OrderItem styles=\"font-medium\">{person.name}</OrderItem>\r\n              </li>\r\n              <li className=\"flex justify-between rounded-xl px-2  \">\r\n                <OrderItem styles=\"text-gray-500\">Тип</OrderItem>\r\n                <OrderItem styles=\"overflow-visible font-medium\">{person.type === \"onetime\" ? \"Еднократно\" : \"Абонамент\"}</OrderItem>\r\n              </li>\r\n              <li className=\"flex justify-between rounded-xl px-2\">\r\n                <OrderItem styles=\"text-gray-500\">Квартал</OrderItem>\r\n                <OrderItem styles=\"font-medium\">{person.neighbourhood}</OrderItem>\r\n              </li>\r\n              <li className=\"flex justify-between rounded-xl px-2\">\r\n                <OrderItem styles=\"text-gray-500\">Вид помещение</OrderItem>\r\n                <OrderItem styles=\"font-medium\">{person.detals}</OrderItem>\r\n              </li>\r\n              <li className=\"group flex justify-between rounded-xl px-2 cursor-pointer\">\r\n                <OrderItem styles=\"text-gray-500\">Виж повече</OrderItem>\r\n                <div className=\"flex gap-1 items-center \">\r\n                  <ChevronRightIcon className=\"w-10 h-10 text-gray-600 group-hover:text-gray-900 transition-transform group-hover:translate-x-1\" />\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          )\r\n        })}\r\n      </div> */}\r\n      {/* mobile list new card */}\r\n      <div className=\"flex md:hidden flex-col gap-4 bg-gray-100 -mx-2\">\r\n        {people.map((person) => {\r\n          return (\r\n            <ul\r\n              key={person.id}\r\n              className=\"bg-white flex flex-col gap-5 py-5 shadow-md px-4\"\r\n            >\r\n              <div className=\"flex\">\r\n                <li className=\"flex flex-1 gap-2\">\r\n                  <UserIcon className=\"w-5 h-5\" />\r\n                  <div className=\"flex flex-col \">\r\n                    <p className=\"text-gray-500 text-sm\">Клиент</p>\r\n                    <p className=\"font-medium\">{person.name}</p>\r\n                  </div>\r\n                </li>\r\n                <li className=\"flex flex-1 gap-2\">\r\n                  <MapPinIcon className=\"w-5 h-5\" />\r\n                  <div className=\"flex flex-col \">\r\n                    <p className=\"text-gray-500 text-sm\">Квартал</p>\r\n                    <p className=\"font-medium\">\r\n                      {person.neighbourhood}\r\n                    </p>\r\n                  </div>\r\n                </li>\r\n                {/* <p className=\"mr-3\">#{person.id}</p> */}\r\n              </div>\r\n              {/* <div className=\"flex\">\r\n              </div> */}\r\n              <div className=\"flex\">\r\n                <li className=\"flex flex-1 gap-2\">\r\n                  <ClipboardDocumentCheckIcon className=\"w-5 h-5\" />\r\n                  <div className=\"flex flex-col \">\r\n                    <p className=\"text-gray-500 text-sm\">Тип</p>\r\n                    <p className=\"overflow-visible font-medium\">\r\n                      {person.type === \"onetime\" ? \"Еднократно\" : \"Абонамент\"}\r\n                    </p>\r\n                  </div>\r\n                </li>\r\n                <li className=\"flex flex-1 gap-2\">\r\n                  <HomeIcon className=\"w-5 h-5\" />\r\n                  <div className=\"flex flex-col \">\r\n                    <p className=\"text-gray-500 text-sm\">Вид помещение</p>\r\n                    <p className=\"font-medium\">{person.detals}</p>\r\n                  </div>\r\n                </li>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <li className=\"flex flex-col flex-1\">\r\n                  <p className=\"bg-green-100 ml-7 text-green-600 self-start items-center rounded-md px-3 py-0.5 font-medium\">\r\n                    Активна\r\n                  </p>\r\n                </li>\r\n                <ChevronRightIcon className=\"w-10 h-10 text-gray-800\" />\r\n              </div>\r\n            </ul>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\orders\\orderlist\\orderlistExpandingCards\\OrderDetails.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ChevronRightIcon' is defined but never used.","line":2,"column":33,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":49},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ChevronUpIcon' is defined but never used.","line":2,"column":51,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":64},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'EnvelopeIcon' is defined but never used.","line":2,"column":66,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":78},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'CalendarDaysIcon' is defined but never used.","line":2,"column":112,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":128},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Fragment' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":18},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":10,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":10,"endColumn":67},{"ruleId":"@typescript-eslint/restrict-template-expressions","severity":2,"message":"Invalid type \"false | \"hidden\"\" of template literal expression.","line":19,"column":90,"nodeType":"LogicalExpression","messageId":"invalidType","endLine":19,"endColumn":113},{"ruleId":"@typescript-eslint/restrict-template-expressions","severity":2,"message":"Invalid type \"false | \"-rotate-180\"\" of template literal expression.","line":39,"column":48,"nodeType":"LogicalExpression","messageId":"invalidType","endLine":39,"endColumn":75}],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { Transition } from '@headlessui/react'\r\nimport { ClockIcon, MapPinIcon, ChevronRightIcon, ChevronUpIcon, EnvelopeIcon, ChatBubbleBottomCenterTextIcon, CalendarDaysIcon, CalendarIcon, ListBulletIcon, HomeIcon, ChevronDownIcon } from '@heroicons/react/24/outline';\r\nimport { Fragment, useState } from 'react'\r\nimport { type Order } from './Orderlist';\r\n\r\ninterface OrderDetailsProps {\r\n    order: Order;\r\n}\r\n\r\nexport default function OrderDetails({ order }: OrderDetailsProps) {\r\n\r\n    const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n    return (\r\n        <div className=\"relative ring-1 ring-indigo-50 w-full max-w-xl shadow-order hover:shadow-order-hover hover:transition-shadow  rounded-md overflow-hidden\">\r\n            {/* Order summary */}\r\n            {/* <div className=\"absolute top-0 bottom-0 left-0 h-full w-2 bg-indigo-200 z-20\"></div> */}\r\n            <div onClick={() => { setIsExpanded((isExpanded) => !isExpanded); }} className=\"relative z-30 flex flex-col gap-3 p-3 pb-4 pl-5 pr-7 cursor-pointer \">\r\n                <div className={`\" absolute bottom-0 left-6 right-4 bg-gray-200 h-px \" ${!isExpanded && 'hidden'}`}></div>\r\n                <div className=\"flex gap-3 rounded-2xl\">\r\n                    <div className=\"flex flex-row gap-1 text-gray-500 items-center\">\r\n                        <ClockIcon className=\"h-5 w-5\" />\r\n                        <p className=\"text-xs font-normal\">{order.time}</p>\r\n                    </div>\r\n                    <div className=\"flex flex-row gap-1 text-gray-500 items-center\">\r\n                        <MapPinIcon className=\"h-5 w-5\" />\r\n                        <p className=\"text-xs font-normal \">{order.location}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-2 \">\r\n                    <img className=\"h-12 w-12 rounded-full self-start flex-shrink-0 \" src={order.imageUrl} alt=\"\" />\r\n                    <div>\r\n                        <h3 className=\"text-sm font-medium break-words text-gray-700\">{order.name}</h3>\r\n                        <span className=\"inline-flex items-center rounded-full bg-indigo-100 px-2.5 py-0.5 text-xs font-normal text-indigo-800\">\r\n                            Планирана\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <ChevronDownIcon className={`${isExpanded && '-rotate-180'} 'p-1  text-blue-700 cursor-pointer h-6 w-6 rounded-full flex-shrink-0 z-1 absolute right-2 sm:right-4 top-1/2 -translate-y-1/2 transition-all duration-200 rotate-0'`} />\r\n            </div>\r\n            {/* Order details */}\r\n            <div className=\"ml-6 mr-4 overflow-hidden\">\r\n                <Transition\r\n                    show={isExpanded}\r\n                    enter=\"transition-all ease duration-200\"\r\n                    enterTo='opacity-100 max-h-96 py-4'\r\n                    enterFrom=\"opacity-0 max-h-0\"\r\n\r\n                    leave=\"transition-all ease duration-200\"\r\n                    leaveTo=\"opacity-0 max-h-0\"\r\n                    leaveFrom=\"opacity-100 max-h-96 py-4\"\r\n                >\r\n                    <div className='mb-4 rounded-lg'>\r\n                        <div className=\"flex gap-1 items-center text-gray-500 mb-0.5\">\r\n                            <ClockIcon className=\"h-4 w-4\" />\r\n                            <p className=\"text-xs font-normal\">Дата и час:</p>\r\n                        </div>\r\n                        <p className=\"pl-5 text-sm text-gray-700 font-medium\">Понеделник, 29 ноември <br></br> 12:00 - 16:00 часа</p>\r\n                    </div>\r\n                    <div className='mb-4 rounded-lg'>\r\n                        <div className=\"flex gap-1 items-center text-gray-500 mb-0.5\">\r\n                            <MapPinIcon className=\"h-4 w-4\" />\r\n                            <p className=\"text-xs font-normal\">Адрес:</p>\r\n                        </div>\r\n                        <p className=\"pl-5 text-sm text-gray-700 font-medium\">кв. Витоша, ул. Константин Петканов 25, ет. 3, ап. 25</p>\r\n                    </div>\r\n                    <div className='mb-4 rounded-lg'>\r\n                        <div className=\"flex gap-1 items-center text-gray-500 mb-0.5\">\r\n                            <HomeIcon className=\"h-4 w-4\" />\r\n                            <p className=\"text-xs font-normal\">Вид помещение:</p>\r\n                        </div>\r\n                        <p className=\"pl-5 text-sm text-gray-700 font-medium\">Дом</p>\r\n                    </div>\r\n                    <div className='mb-4 rounded-lg'>\r\n                        <div className=\"flex gap-1 items-center text-gray-500 mb-0.5\">\r\n                            <CalendarIcon className=\"h-4 w-4\" />\r\n                            <p className=\"text-xs font-normal\">Тип посещение:</p>\r\n                        </div>\r\n                        <p className=\"pl-5 text-sm text-gray-700 font-medium\">Абонамент</p>\r\n                    </div>\r\n                    <div className='mb-4 rounded-lg'>\r\n                        <div className=\"flex gap-1 items-center text-gray-500 mb-0.5\">\r\n                            <ListBulletIcon className=\"h-4 w-4\" />\r\n                            <p className=\"text-xs font-normal\">Включени слуги:</p>\r\n                        </div>\r\n                        <p className=\"pl-5 text-sm text-gray-700 font-medium\">Основно почистване, хладилник, прозорци</p>\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between mt-4 \">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"inline-flex items-center rounded-md border border-transparent bg-blue-600 px-2.5 py-1.5 text-xs font-medium leading-4 text-white shadow-sm hover:bg-blue-700 \"\r\n                        >\r\n                            <ChatBubbleBottomCenterTextIcon className=\"-ml-0.5 mr-2 h-4 w-4\" aria-hidden=\"true\" />\r\n                            Към съобщения\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => { setIsExpanded((isExpanded) => !isExpanded); }}\r\n                            className=\"inline-flex items-center rounded   bg-white px-2.5 py-1.5 text-xs font-medium text-gray-600 hover:text-gray-900\"\r\n                        >\r\n                            Затвори\r\n                        </button>\r\n                    </div>\r\n\r\n                </Transition>\r\n            </div>\r\n        </div>\r\n    )\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\orders\\orderlist\\orderlistExpandingCards\\Orderlist.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":34,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":34,"endColumn":37}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import OrderDetails from \"./OrderDetails\";\r\n\r\nexport interface Order {\r\n    id: number\r\n    date: string;\r\n    time: string;\r\n    name: string;\r\n    imageUrl:\r\n    string;\r\n    location: string;\r\n}\r\n\r\nexport const orders: Order[] = [\r\n    {\r\n        id: 1,\r\n        date: '29 януари',\r\n        time: '12:00 - 16:00',\r\n        name: 'Стоян Пеканов',\r\n        imageUrl:\r\n            'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\r\n        location: 'Кръстова Вада',\r\n    },\r\n    {\r\n        id: 2,\r\n        date: '29 януари',\r\n        time: '08:00 - 12:00',\r\n        name: 'Велизар Максимов Стоянов',\r\n        imageUrl:\r\n            'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\r\n        location: 'Хладилника',\r\n    },\r\n]\r\n\r\nexport default function Orderslist() {\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"space-y-4\">\r\n                {orders.map(order => {\r\n                    return (\r\n                        <OrderDetails key={order.id} order={order} />\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\orders\\orderschedule\\DatePicker.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'addDays' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":17},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'format' is defined but never used.","line":4,"column":19,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":25},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":13,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":13,"endColumn":63}],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { useState } from 'react';\r\nimport 'react-day-picker/dist/style.css';\r\nimport './DatePicker.css'\r\nimport { addDays, format } from 'date-fns';\r\nimport { type DateRange, DayPicker } from 'react-day-picker';\r\n\r\nconst pastMonth = new Date();\r\n\r\ninterface DatePickerProps {\r\n  close: (focusableElement?: HTMLElement | React.MutableRefObject<HTMLElement | null> | undefined) => void\r\n}\r\n\r\nexport default function DatePicker({ close }: DatePickerProps) {\r\n\r\n  const [range, setRange] = useState<DateRange | undefined>();\r\n\r\n  // let footer = <p>Please pick the first day.</p>;\r\n  // if (range?.from) {\r\n  //   if (!range.to) {\r\n  //     footer = <p>{format(range.from, 'PPP')}</p>;\r\n  //   } else if (range.to) {\r\n  //     footer = (\r\n  //       <p>\r\n  //         {format(range.from, 'PPP')}–{format(range.to, 'PPP')}\r\n  //       </p>\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div className='flex flex-col lg:col-start-8 lg:col-end-13 lg:row-start-1 gap-2'>\r\n      <DayPicker\r\n        mode=\"range\"\r\n        defaultMonth={pastMonth}\r\n        selected={range}\r\n        onSelect={setRange}\r\n\r\n      />\r\n      <div className=\"flex justify-between pl-2\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => { close(); }}\r\n          disabled={(range?.from) == null}\r\n          className=\"inline-flex disabled:text-gray-400 items-center rounded border border-gray-300 bg-white px-2.5 py-1.5 text-xs font-medium text-gray-700 shadow-sm hover:[&:not(:disabled)]:bg-gray-50 focus:outline-none\"\r\n        >\r\n          Избери\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          disabled={(range?.from) == null}\r\n          className=\"inline-flex items-center rounded  border-gray-300 bg-white px-2.5 py-1.5 text-xs font-medium text-gray-500 hover:[&:not(:disabled)]:text-indigo-500 focus:outline-none\"\r\n        >\r\n          Изчисти\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\orders\\orderschedule\\OrderSchedule.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ChevronLeftIcon' is defined but never used.","line":4,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ChevronRightIcon' is defined but never used.","line":5,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'DatePicker' is defined but never used.","line":10,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'days' is assigned a value but never used.","line":86,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":86,"endColumn":11},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":131,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":131,"endColumn":42},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":135,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":135,"endColumn":40}],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Fragment } from 'react'\r\nimport {\r\n  CalendarIcon,\r\n  ChevronLeftIcon,\r\n  ChevronRightIcon,\r\n  EllipsisHorizontalIcon,\r\n  MapPinIcon,\r\n} from '@heroicons/react/20/solid'\r\nimport { Menu, Transition } from '@headlessui/react'\r\nimport DatePicker from './DatePicker'\r\nimport Filters from '../../../../utilityComponents/Filters'\r\n\r\nconst meetings = [\r\n  {\r\n    id: 1,\r\n    date: 'January 10th, 2022',\r\n    time: '5:00 PM',\r\n    datetime: '2022-01-10T17:00',\r\n    name: 'Leslie Alexander',\r\n    imageUrl:\r\n      'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\r\n    location: 'Starbucks',\r\n  },\r\n  {\r\n    id: 2,\r\n    date: 'January 10th, 2022',\r\n    time: '5:00 PM',\r\n    datetime: '2022-01-10T17:00',\r\n    name: 'Leslie Alexander',\r\n    imageUrl:\r\n      'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\r\n    location: 'Starbucks',\r\n  },\r\n  {\r\n    id: 3,\r\n    date: 'January 10th, 2022',\r\n    time: '5:00 PM',\r\n    datetime: '2022-01-10T17:00',\r\n    name: 'Leslie Alexander',\r\n    imageUrl:\r\n      'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\r\n    location: 'Starbucks',\r\n  },\r\n  {\r\n    id: 4,\r\n    date: 'January 10th, 2022',\r\n    time: '5:00 PM',\r\n    datetime: '2022-01-10T17:00',\r\n    name: 'Leslie Alexander',\r\n    imageUrl:\r\n      'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\r\n    location: 'Starbucks',\r\n  },\r\n  {\r\n    id: 5,\r\n    date: 'January 10th, 2022',\r\n    time: '5:00 PM',\r\n    datetime: '2022-01-10T17:00',\r\n    name: 'Leslie Alexander',\r\n    imageUrl:\r\n      'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\r\n    location: 'Starbucks',\r\n  },\r\n  {\r\n    id: 6,\r\n    date: 'January 10th, 2022',\r\n    time: '5:00 PM',\r\n    datetime: '2022-01-10T17:00',\r\n    name: 'Leslie Alexander',\r\n    imageUrl:\r\n      'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\r\n    location: 'Starbucks',\r\n  },\r\n  {\r\n    id: 7,\r\n    date: 'January 10th, 2022',\r\n    time: '5:00 PM',\r\n    datetime: '2022-01-10T17:00',\r\n    name: 'Leslie Alexander',\r\n    imageUrl:\r\n      'https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80',\r\n    location: 'Starbucks',\r\n  },\r\n  // More meetings...\r\n]\r\nconst days = [\r\n  { date: '2021-12-27' },\r\n  { date: '2021-12-28' },\r\n  { date: '2021-12-29' },\r\n  { date: '2021-12-30' },\r\n  { date: '2021-12-31' },\r\n  { date: '2022-01-01', isCurrentMonth: true },\r\n  { date: '2022-01-02', isCurrentMonth: true },\r\n  { date: '2022-01-03', isCurrentMonth: true },\r\n  { date: '2022-01-04', isCurrentMonth: true },\r\n  { date: '2022-01-05', isCurrentMonth: true },\r\n  { date: '2022-01-06', isCurrentMonth: true },\r\n  { date: '2022-01-07', isCurrentMonth: true },\r\n  { date: '2022-01-08', isCurrentMonth: true },\r\n  { date: '2022-01-09', isCurrentMonth: true },\r\n  { date: '2022-01-10', isCurrentMonth: true },\r\n  { date: '2022-01-11', isCurrentMonth: true },\r\n  { date: '2022-01-12', isCurrentMonth: true, isToday: true },\r\n  { date: '2022-01-13', isCurrentMonth: true },\r\n  { date: '2022-01-14', isCurrentMonth: true },\r\n  { date: '2022-01-15', isCurrentMonth: true },\r\n  { date: '2022-01-16', isCurrentMonth: true },\r\n  { date: '2022-01-17', isCurrentMonth: true },\r\n  { date: '2022-01-18', isCurrentMonth: true },\r\n  { date: '2022-01-19', isCurrentMonth: true },\r\n  { date: '2022-01-20', isCurrentMonth: true },\r\n  { date: '2022-01-21', isCurrentMonth: true },\r\n  { date: '2022-01-22', isCurrentMonth: true, isSelected: true },\r\n  { date: '2022-01-23', isCurrentMonth: true },\r\n  { date: '2022-01-24', isCurrentMonth: true },\r\n  { date: '2022-01-25', isCurrentMonth: true },\r\n  { date: '2022-01-26', isCurrentMonth: true },\r\n  { date: '2022-01-27', isCurrentMonth: true },\r\n  { date: '2022-01-28', isCurrentMonth: true },\r\n  { date: '2022-01-29', isCurrentMonth: true },\r\n  { date: '2022-01-30', isCurrentMonth: true },\r\n  { date: '2022-01-31', isCurrentMonth: true },\r\n  { date: '2022-02-01' },\r\n  { date: '2022-02-02' },\r\n  { date: '2022-02-03' },\r\n  { date: '2022-02-04' },\r\n  { date: '2022-02-05' },\r\n  { date: '2022-02-06' },\r\n]\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport default function OrderSchedule() {\r\n  return (\r\n    <>\r\n      <div className=\"pt-4\">\r\n        <p className=\"sm:col-span-6 text-sm text-gray-500 mb-4\">\r\n          График на поръчките\r\n        </p>\r\n        <div className=\"md:max-w-3xl first-letter:lg:grid lg:grid-cols-12 lg:gap-x-16\">\r\n          <ol className=\"mt-4 divide-y divide-gray-100 text-sm leading-6 lg:col-span-7\">\r\n            <Filters />\r\n            {meetings.map((meeting) => (\r\n              <li key={meeting.id} className=\"relative flex space-x-6 py-6 xl:static\">\r\n                <img src={meeting.imageUrl} alt=\"\" className=\"h-14 w-14 flex-none rounded-full\" />\r\n                <div className=\"flex-auto\">\r\n                  <h3 className=\"pr-10 font-semibold text-gray-900 xl:pr-0\">{meeting.name}</h3>\r\n                  <dl className=\"mt-2 flex flex-col text-gray-500 xl:flex-row\">\r\n                    <div className=\"flex items-start space-x-3\">\r\n                      <dt className=\"mt-0.5\">\r\n                        <span className=\"sr-only\">Date</span>\r\n                        <CalendarIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                      </dt>\r\n                      <dd>\r\n                        <time dateTime={meeting.datetime}>\r\n                          {meeting.date} at {meeting.time}\r\n                        </time>\r\n                      </dd>\r\n                    </div>\r\n                    <div className=\"mt-2 flex items-start space-x-3 xl:mt-0 xl:ml-3.5 xl:border-l xl:border-gray-400 xl:border-opacity-50 xl:pl-3.5\">\r\n                      <dt className=\"mt-0.5\">\r\n                        <span className=\"sr-only\">Location</span>\r\n                        <MapPinIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                      </dt>\r\n                      <dd>{meeting.location}</dd>\r\n                    </div>\r\n                  </dl>\r\n                </div>\r\n                <Menu as=\"div\" className=\"absolute top-6 right-0 xl:relative xl:top-auto xl:right-auto xl:self-center\">\r\n                  <div>\r\n                    <Menu.Button className=\"-m-2 flex items-center rounded-full p-2 text-gray-500 hover:text-gray-600\">\r\n                      <span className=\"sr-only\">Open options</span>\r\n                      <EllipsisHorizontalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                    </Menu.Button>\r\n                  </div>\r\n\r\n                  <Transition\r\n                    as={Fragment}\r\n                    enter=\"transition ease-out duration-100\"\r\n                    enterFrom=\"transform opacity-0 scale-95\"\r\n                    enterTo=\"transform opacity-100 scale-100\"\r\n                    leave=\"transition ease-in duration-75\"\r\n                    leaveFrom=\"transform opacity-100 scale-100\"\r\n                    leaveTo=\"transform opacity-0 scale-95\"\r\n                  >\r\n                    <Menu.Items className=\"absolute right-0 z-10 mt-2 w-36 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\r\n                      <div className=\"py-1\">\r\n                        <Menu.Item>\r\n                          {({ active }) => (\r\n                            <a\r\n                              href=\"#\"\r\n                              className={classNames(\r\n                                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\r\n                                'block px-4 py-2 text-sm'\r\n                              )}\r\n                            >\r\n                              Edit\r\n                            </a>\r\n                          )}\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                          {({ active }) => (\r\n                            <a\r\n                              href=\"#\"\r\n                              className={classNames(\r\n                                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\r\n                                'block px-4 py-2 text-sm'\r\n                              )}\r\n                            >\r\n                              Cancel\r\n                            </a>\r\n                          )}\r\n                        </Menu.Item>\r\n                      </div>\r\n                    </Menu.Items>\r\n                  </Transition>\r\n                </Menu>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\dashboard\\sidebar\\Sidebar.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":47,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":47,"endColumn":66},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'routeTo' is assigned a value but never used.","line":54,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":54,"endColumn":16},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":54,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":54,"endColumn":35},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":55,"column":10,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":55,"endColumn":12,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[1083,1086],"text":"to == null"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[1084,1086],"text":"(to ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[1083,1086],"text":"!Boolean(to)"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":59,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":59,"endColumn":61},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected number value in conditional. An explicit zero/NaN check is required.","line":100,"column":16,"nodeType":"MemberExpression","messageId":"conditionErrorNumber","endLine":100,"endColumn":26,"suggestions":[{"messageId":"conditionFixCompareZero","fix":{"range":[2778,2788],"text":"(item.count !== 0)"},"desc":"Change condition to check for 0 (`value !== 0`)"},{"messageId":"conditionFixCompareNaN","fix":{"range":[2778,2788],"text":"(!Number.isNaN(item.count))"},"desc":"Change condition to check for NaN (`!Number.isNaN(value)`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[2778,2788],"text":"(Boolean(item.count))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]}],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import classNames from \"../../../helpers/classNames\";\r\nimport {\r\n  HomeIcon,\r\n  ChatBubbleBottomCenterTextIcon,\r\n  UserIcon,\r\n  ClipboardDocumentListIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nexport const sideNavigation = [\r\n  {\r\n    id: 1,\r\n    name: \"Начало\",\r\n    route: \"/\",\r\n    icon: HomeIcon,\r\n    count: 0\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Поръчки\",\r\n    route: \"orders\",\r\n    icon: ClipboardDocumentListIcon,\r\n    count: 2\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Съобщения\",\r\n    route: \"chat\",\r\n    icon: ChatBubbleBottomCenterTextIcon,\r\n    count: 12\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Акаунт\",\r\n    route: \"account\",\r\n    icon: UserIcon,\r\n    count: 0\r\n  },\r\n]\r\n\r\ninterface SidebarProps {\r\n  setSidebarOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\n\r\nexport default function Sidebar({ setSidebarOpen }: SidebarProps) {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [activeMenuItem, setActiveMenuItem] = useState(1)\r\n\r\n\r\n  const routeTo = (to?: string) => {\r\n    if (!to) return;\r\n    navigate(to);\r\n  }\r\n\r\n  const handleMenuItemClick = (selectedMenuItemId:number) => {\r\n    setActiveMenuItem(selectedMenuItemId)\r\n    setSidebarOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex w-full flex-col items-center py-6\">\r\n        <div className=\"hidden md:flex  flex-shrink-0 items-center lg:self-start lg:pl-6\">\r\n          <img\r\n            className=\"h-8 w-auto\"\r\n            src=\"https://tailwindui.com/img/logos/mark.svg?color=white\"\r\n            alt=\"Your Company\"\r\n          />\r\n        </div>\r\n        <nav className=\"mt-5 w-full flex-1 space-y-1 px-2\">\r\n          {sideNavigation.map((item) => (\r\n            <Link\r\n              key={item.name}\r\n              data-id={item.id}\r\n              onClick={() => { handleMenuItemClick(item.id); }}\r\n              to={item.route}\r\n              className={classNames(\r\n                item.id === activeMenuItem\r\n                  ? \"bg-indigo-800 text-white\"\r\n                  : \"text-indigo-100 hover:bg-indigo-600 hover:bg-opacity-75 \",\r\n                \"group w-full p-3 lg:px-6 lg:text-sm rounded-md flex flex-col lg:flex-row items-center text-xs font-medium\"\r\n              )}\r\n              aria-current={item.id === activeMenuItem ? \"page\" : undefined}\r\n            >\r\n              <item.icon\r\n                className={classNames(\r\n                  item.id === activeMenuItem\r\n                    ? \"text-white\"\r\n                    : \"text-indigo-300 \",\r\n                  \"h-6 w-6 lg:mr-3\"\r\n                )}\r\n                aria-hidden=\"true\"\r\n              />\r\n              {/* no mt-2; flex-1 */}\r\n              <span className=\"mt-2 lg:mt-0\">{item.name}</span>\r\n              {item.count ? (\r\n                <span\r\n                  className={classNames(\r\n                    item.id === activeMenuItem ? 'bg-indigo-600' : 'bg-indigo-800',\r\n                    'hidden lg:inline-block ml-3 py-0.5 px-3 text-xs font-medium rounded-full'\r\n                  )}\r\n                >\r\n                  {item.count}\r\n                </span>\r\n              ) : null}\r\n            </Link>\r\n          ))}\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\defaultRoutePage\\PageNotFound.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":1,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":1,"endColumn":27}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"const PageNotFound = () => {\r\n    return (\r\n        <>Ooops.... Page not found</>\r\n    )\r\n}\r\n\r\nexport default PageNotFound;","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\footer\\Footer.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'HTMLProps' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":19},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":77,"column":18,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":77,"endColumn":35}],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { HTMLProps, type SVGProps } from \"react\"\r\n\r\nconst navigation = {\r\n    main: [\r\n      { name: 'About', href: '#' },\r\n      { name: 'Blog', href: '#' },\r\n      { name: 'Jobs', href: '#' },\r\n      { name: 'Press', href: '#' },\r\n      { name: 'Accessibility', href: '#' },\r\n      { name: 'Partners', href: '#' },\r\n    ],\r\n    social: [\r\n      {\r\n        name: 'Facebook',\r\n        href: '#',\r\n        icon: (props: SVGProps<SVGSVGElement>) => (\r\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z\"\r\n              clipRule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        ),\r\n      },\r\n      {\r\n        name: 'Instagram',\r\n        href: '#',\r\n        icon: (props: SVGProps<SVGSVGElement>) => (\r\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z\"\r\n              clipRule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        ),\r\n      },\r\n      {\r\n        name: 'Twitter',\r\n        href: '#',\r\n        icon: (props: SVGProps<SVGSVGElement>) => (\r\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\r\n            <path d=\"M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84\" />\r\n          </svg>\r\n        ),\r\n      },\r\n      {\r\n        name: 'GitHub',\r\n        href: '#',\r\n        icon: (props: SVGProps<SVGSVGElement>) => (\r\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z\"\r\n              clipRule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        ),\r\n      },\r\n      {\r\n        name: 'Dribbble',\r\n        href: '#',\r\n        icon: (props : SVGProps<SVGSVGElement>) => (\r\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10c5.51 0 10-4.48 10-10S17.51 2 12 2zm6.605 4.61a8.502 8.502 0 011.93 5.314c-.281-.054-3.101-.629-5.943-.271-.065-.141-.12-.293-.184-.445a25.416 25.416 0 00-.564-1.236c3.145-1.28 4.577-3.124 4.761-3.362zM12 3.475c2.17 0 4.154.813 5.662 2.148-.152.216-1.443 1.941-4.48 3.08-1.399-2.57-2.95-4.675-3.189-5A8.687 8.687 0 0112 3.475zm-3.633.803a53.896 53.896 0 013.167 4.935c-3.992 1.063-7.517 1.04-7.896 1.04a8.581 8.581 0 014.729-5.975zM3.453 12.01v-.26c.37.01 4.512.065 8.775-1.215.25.477.477.965.694 1.453-.109.033-.228.065-.336.098-4.404 1.42-6.747 5.303-6.942 5.629a8.522 8.522 0 01-2.19-5.705zM12 20.547a8.482 8.482 0 01-5.239-1.8c.152-.315 1.888-3.656 6.703-5.337.022-.01.033-.01.054-.022a35.318 35.318 0 011.823 6.475 8.4 8.4 0 01-3.341.684zm4.761-1.465c-.086-.52-.542-3.015-1.659-6.084 2.679-.423 5.022.271 5.314.369a8.468 8.468 0 01-3.655 5.715z\"\r\n              clipRule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        ),\r\n      },\r\n    ],\r\n  }\r\n  \r\n  export default function Footer() {\r\n    return (\r\n      <footer className=\"bg-white\">\r\n        <div className=\"mx-auto max-w-7xl overflow-hidden py-12 px-4 sm:px-6 lg:px-8\">\r\n          <nav className=\"-mx-5 -my-2 flex flex-wrap justify-center\" aria-label=\"Footer\">\r\n            {navigation.main.map((item) => (\r\n              <div key={item.name} className=\"px-5 py-2\">\r\n                <a href={item.href} className=\"text-base text-gray-500 hover:text-gray-900\">\r\n                  {item.name}\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </nav>\r\n          <div className=\"mt-8 flex justify-center space-x-6\">\r\n            {navigation.social.map((item) => (\r\n              <a key={item.name} href={item.href} className=\"text-gray-400 hover:text-gray-500\">\r\n                <span className=\"sr-only\">{item.name}</span>\r\n                <item.icon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n              </a>\r\n            ))}\r\n          </div>\r\n          <p className=\"mt-8 text-center text-base text-gray-400\">&copy; 2020 Your Company, Inc. All rights reserved.</p>\r\n        </div>\r\n      </footer>\r\n    )\r\n  }\r\n  ","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\header\\Header.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Fragment' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Popover' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":17},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Transition' is defined but never used.","line":2,"column":19,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":29},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'XMarkIcon' is defined but never used.","line":11,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":11,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ChevronDownIcon' is defined but never used.","line":13,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'solutions' is assigned a value but never used.","line":16,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":16,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'resources' is assigned a value but never used.","line":57,"column":7,"nodeType":"Identifier","messageId":"unusedVar","endLine":57,"endColumn":16},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":83,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":83,"endColumn":42},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'classNames' is defined but never used.","line":83,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":83,"endColumn":20},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":91,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":91,"endColumn":64}],"errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { Fragment } from \"react\";\r\nimport { Popover, Transition } from \"@headlessui/react\";\r\nimport {\r\n  ArrowPathIcon,\r\n  Bars3Icon,\r\n  ChartBarIcon,\r\n  CursorArrowRaysIcon,\r\n  DocumentChartBarIcon,\r\n  ShieldCheckIcon,\r\n  Squares2X2Icon,\r\n  XMarkIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { ChevronDownIcon } from \"@heroicons/react/20/solid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst solutions = [\r\n  {\r\n    name: \"Analytics\",\r\n    description:\r\n      \"Get a better understanding of where your traffic is coming from.\",\r\n    href: \"#\",\r\n    icon: ChartBarIcon,\r\n  },\r\n  {\r\n    name: \"Engagement\",\r\n    description: \"Speak directly to your customers in a more meaningful way.\",\r\n    href: \"#\",\r\n    icon: CursorArrowRaysIcon,\r\n  },\r\n  {\r\n    name: \"Security\",\r\n    description: \"Your customers' data will be safe and secure.\",\r\n    href: \"#\",\r\n    icon: ShieldCheckIcon,\r\n  },\r\n  {\r\n    name: \"Integrations\",\r\n    description: \"Connect with third-party tools that you're already using.\",\r\n    href: \"#\",\r\n    icon: Squares2X2Icon,\r\n  },\r\n  {\r\n    name: \"Automations\",\r\n    description:\r\n      \"Build strategic funnels that will drive your customers to convert\",\r\n    href: \"#\",\r\n    icon: ArrowPathIcon,\r\n  },\r\n  {\r\n    name: \"Reports\",\r\n    description:\r\n      \"Get detailed reports that will help you make more informed decisions \",\r\n    href: \"#\",\r\n    icon: DocumentChartBarIcon,\r\n  },\r\n];\r\nconst resources = [\r\n  {\r\n    name: \"Help Center\",\r\n    description:\r\n      \"Get all of your questions answered in our forums or contact support.\",\r\n    href: \"#\",\r\n  },\r\n  {\r\n    name: \"Guides\",\r\n    description:\r\n      \"Learn how to maximize our platform to get the most out of it.\",\r\n    href: \"#\",\r\n  },\r\n  {\r\n    name: \"Events\",\r\n    description:\r\n      \"See what meet-ups and other events we might be planning near you.\",\r\n    href: \"#\",\r\n  },\r\n  {\r\n    name: \"Security\",\r\n    description: \"Understand how we take your privacy seriously.\",\r\n    href: \"#\",\r\n  },\r\n];\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\ninterface HeaderProps {\r\n  setSidebarOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport default function Header({ setSidebarOpen }: HeaderProps) {\r\n  return (\r\n    <div className=\"flex relative bg-white z-20  items-center justify-between px-4 py-6 sm:px-6 md:justify-start md:space-x-10\">\r\n      {/* burger menu icon in mobile */}\r\n      <div className=\"flex justify-between items-center w-full md:w-auto\">\r\n        <div className=\"md:hidden\">\r\n          <button\r\n            onClick={() => { setSidebarOpen(true); }}\r\n            className=\"inline-flex items-center justify-center rounded-md bg-white p-2 text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\r\n          >\r\n            <span className=\"sr-only\">Open menu</span>\r\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n          </button>\r\n        </div>\r\n        <a href=\"#\" className=\"flex\">\r\n          <span className=\"sr-only\">Your Company</span>\r\n          <img\r\n            className=\"h-8 w-auto sm:h-10\"\r\n            src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\r\n            alt=\"\"\r\n          />\r\n        </a>\r\n      </div>\r\n      {/* Navigation */}\r\n      <nav className=\"hidden md:flex md:flex-1 md:items-center md:justify-between\">\r\n        <div className=\"flex space-x-10\">\r\n          <a\r\n            href=\"#\"\r\n            className=\"text-base font-medium text-gray-500 hover:text-gray-900\"\r\n          >\r\n            Pricing\r\n          </a>\r\n          <a\r\n            href=\"#\"\r\n            className=\"text-base font-medium text-gray-500 hover:text-gray-900\"\r\n          >\r\n            Docs\r\n          </a>\r\n        </div>\r\n        {/* Sign in & Sign up buttons desktop */}\r\n        <div className=\"flex items-center md:ml-12\">\r\n          <Link\r\n            to=\"signin\"\r\n            className=\"text-base font-medium text-gray-500 hover:text-gray-900\"\r\n          >\r\n            Влез\r\n          </Link>\r\n          <a\r\n            href=\"#\"\r\n            className=\"ml-8 inline-flex items-center justify-center rounded-md  bg-indigo-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-indigo-700\"\r\n          >\r\n            Регистрирай се\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\homepage\\HomePage.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":3,"column":18,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":3,"endColumn":23}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { useNavigate } from \"react-router\";\r\n\r\nconst HomePage = () => {\r\n    const navigate = useNavigate()\r\n    return <>\r\n        <button onClick={() => { navigate(\"/dashboard\"); }}>to dashboard</button>\r\n    </>\r\n}\r\n\r\nexport default HomePage;","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\login\\SignIn.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":17,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":17,"endColumn":33}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Link } from \"react-router-dom\";\r\n\r\n/*\r\n  This example requires some changes to your config:\r\n  \r\n  ```\r\n  // tailwind.config.js\r\n  module.exports = {\r\n    // ...\r\n    plugins: [\r\n      // ...\r\n      require('@tailwindcss/forms'),\r\n    ],\r\n  }\r\n  ```\r\n*/\r\nexport default function SignIn() {\r\n  return (\r\n    <>\r\n      {/*\r\n          This example requires updating your template:\r\n  \r\n          ```\r\n          <html class=\"h-full bg-gray-50\">\r\n          <body class=\"h-full\">\r\n          ```\r\n        */}\r\n      <div className=\"flex min-h-full flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n          <img\r\n            className=\"mx-auto h-12 w-auto\"\r\n            src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\r\n            alt=\"Your Company\"\r\n          />\r\n          <h2 className=\"mt-6 text-center text-3xl font-bold tracking-tight text-gray-900\">Влез в своя акаунт</h2>\r\n        </div>\r\n\r\n        <div className=\"mt-4 sm:mx-auto sm:w-full sm:max-w-md\">\r\n          <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n            <form className=\"space-y-6\" action=\"#\" method=\"POST\">\r\n              <div>\r\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                  Имейл адрес\r\n                </label>\r\n                <div className=\"mt-1\">\r\n                  <input\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    autoComplete=\"email\"\r\n                    required\r\n                    className=\"block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                  Парола\r\n                </label>\r\n                <div className=\"mt-1\">\r\n                  <input\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    required\r\n                    className=\"block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center\">\r\n                  <input\r\n                    id=\"remember-me\"\r\n                    name=\"remember-me\"\r\n                    type=\"checkbox\"\r\n                    className=\"h-4 w-4 rounded border-gray-300 text-indigo-700 focus:ring-indigo-500\"\r\n                  />\r\n                  <label htmlFor=\"remember-me\" className=\"ml-2 block text-xs text-gray-900\">\r\n                    Запомни ме\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"text-xs\">\r\n                  <a href=\"#\" className=\"font-medium text-indigo-700 hover:text-indigo-500\">\r\n                    Забравена парола?\r\n                  </a>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"flex w-full justify-center rounded-md border border-transparent bg-indigo-700 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n                >\r\n                  Влез\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <div className=\"mt-6\">\r\n              <div className=\"relative\">\r\n                <div className=\"absolute inset-0 flex items-center\">\r\n                  <div className=\"w-full border-t border-gray-300\" />\r\n                </div>\r\n                <div className=\"relative flex justify-center text-xs\">\r\n                  <span className=\"bg-white px-2 text-gray-500\">или продължи със</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-6 grid grid-cols-3 gap-3\">\r\n                <div>\r\n                  <a\r\n                    href=\"#\"\r\n                    className=\"inline-flex w-full justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-500 shadow-sm hover:bg-gray-50\"\r\n                  >\r\n                    <span className=\"sr-only\">Sign in with Facebook</span>\r\n                    <svg className=\"h-5 w-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                      <path\r\n                        fillRule=\"evenodd\"\r\n                        d=\"M20 10c0-5.523-4.477-10-10-10S0 4.477 0 10c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V10h2.54V7.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V10h2.773l-.443 2.89h-2.33v6.988C16.343 19.128 20 14.991 20 10z\"\r\n                        clipRule=\"evenodd\"\r\n                      />\r\n                    </svg>\r\n                  </a>\r\n                </div>\r\n\r\n                <div>\r\n                  <a\r\n                    href=\"#\"\r\n                    className=\"inline-flex w-full justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-500 shadow-sm hover:bg-gray-50\"\r\n                  >\r\n                    <span className=\"sr-only\">Sign in with Twitter</span>\r\n                    <svg className=\"h-5 w-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                      <path d=\"M6.29 18.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0020 3.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.073 4.073 0 01.8 7.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 010 16.407a11.616 11.616 0 006.29 1.84\" />\r\n                    </svg>\r\n                  </a>\r\n                </div>\r\n\r\n                <div>\r\n                  <a\r\n                    href=\"#\"\r\n                    className=\"inline-flex w-full justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-500 shadow-sm hover:bg-gray-50\"\r\n                  >\r\n                    <span className=\"sr-only\">Sign in with GitHub</span>\r\n                    <svg className=\"h-5 w-5\" aria-hidden=\"true\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                      <path\r\n                        fillRule=\"evenodd\"\r\n                        d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\"\r\n                        clipRule=\"evenodd\"\r\n                      />\r\n                    </svg>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <p className=\"mt-6 text-center text-xs text-gray-600\">\r\n              Нямаш акаунт? <br /> Присъедини се като{' '}\r\n              <Link to=\"#\" className=\"font-medium text-indigo-700 hover:text-indigo-500\">\r\n                Клиент\r\n              </Link>\r\n              {' '}или{' '}\r\n              <Link to=\"#\" className=\"font-medium text-indigo-700 hover:text-indigo-500\">\r\n                Доставчик\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\orderManagement\\CreateEditOrderBasic.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'InputFieldProfile' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":25},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":61,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":61,"endColumn":43},{"ruleId":"react/jsx-key","severity":2,"message":"Missing \"key\" prop for element in iterator","line":66,"column":55,"nodeType":"JSXElement","messageId":"missingIterKey","endLine":66,"endColumn":85}],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import InputField from \"../../utilityComponents/InputField\";\r\nimport InputFieldProfile from \"../dashboard/account/profile/InputFieldProfile\";\r\n\r\nconst profileInputValues = [\r\n    {\r\n        className: \"col-span-2\",\r\n        name: \"visit-type\",\r\n        id: \"visit-type\",\r\n        label: \"Вид посещение*\",\r\n    },\r\n    {\r\n        className: \"col-span-1\",\r\n        name: \"date\",\r\n        id: \"date\",\r\n        label: \"Дата*\",\r\n    },\r\n    {\r\n        className: \"col-span-1\",\r\n        name: \"hour\",\r\n        id: \"hour\",\r\n        label: \"Час*\",\r\n    },\r\n    {\r\n        className: \"col-span-1\",\r\n        name: \"location-type\",\r\n        id: \"location-type\",\r\n        label: \"Вид помещение\",\r\n    },\r\n    {\r\n        className: \"col-span-1\",\r\n        name: \"size\",\r\n        id: \"size\",\r\n        label: \"Размер*\",\r\n    },\r\n    {\r\n        className: \"col-span-2\",\r\n        name: \"services\",\r\n        id: \"services\",\r\n        label: \"Услуга*\",\r\n    },\r\n    {\r\n        className: \"col-span-2\",\r\n        name: \"comments\",\r\n        id: \"comments\",\r\n        label: \"Допълнителна информация*\",\r\n    },\r\n    {\r\n        className: \"col-span-2\",\r\n        name: \"price-offer\",\r\n        id: \"price-offer\",\r\n        label: \"Предложение за цена\",\r\n    },\r\n    {\r\n        className: \"col-span-2\",\r\n        name: \"address\",\r\n        id: \"address\",\r\n        label: \"Адрес*\",\r\n    },\r\n];\r\n\r\nexport default function CreateOrderBasic() {\r\n    return (\r\n        <div className=\"bg-gray-50 p-4\">\r\n            <h2 className=\"mb-4\">Заявка за услуга</h2>\r\n            <div className=\"gap-4 grid grid-cols-2\">\r\n                {profileInputValues.map(inputValue => <InputField {...inputValue} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\searchOrders\\CreateOrder.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'MinusIcon' is defined but never used.","line":2,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'PlusCircleIcon' is defined but never used.","line":3,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'useEffect' is defined but never used.","line":7,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'useRef' is defined but never used.","line":7,"column":21,"nodeType":"Identifier","messageId":"unusedVar","endLine":7,"endColumn":27},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'TransitionWrapperBuildUp' is defined but never used.","line":10,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":10,"endColumn":32},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'debounce' is defined but never used.","line":13,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":16},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":114,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":114,"endColumn":38},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'active' is assigned a value but never used.","line":115,"column":12,"nodeType":"Identifier","messageId":"unusedVar","endLine":115,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'setActive' is assigned a value but never used.","line":115,"column":20,"nodeType":"Identifier","messageId":"unusedVar","endLine":115,"endColumn":29},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'setDistrict' is assigned a value but never used.","line":124,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":124,"endColumn":33},{"ruleId":"@typescript-eslint/ban-types","severity":2,"message":"Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":124,"column":72,"nodeType":"TSTypeLiteral","messageId":"bannedTypeMessage","endLine":124,"endColumn":74},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":126,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":129,"endColumn":9},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":130,"column":14,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":130,"endColumn":23,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[4603,4613],"text":"selection == null"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[4604,4613],"text":"(selection ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[4603,4613],"text":"!Boolean(selection)"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":140,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":140,"endColumn":45},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'handleAdditionalServices2' is assigned a value but never used.","line":150,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":150,"endColumn":36},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":150,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":150,"endColumn":54},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":154,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":154,"endColumn":45},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":158,"column":28,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":158,"endColumn":42},{"ruleId":"@typescript-eslint/ban-types","severity":2,"message":"Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":200,"column":56,"nodeType":"TSTypeLiteral","messageId":"bannedTypeMessage","endLine":200,"endColumn":58},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":220,"column":51,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":220,"endColumn":62,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[7754,7765],"text":"(serviceType != null)"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[7754,7765],"text":"(serviceType ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[7754,7765],"text":"(Boolean(serviceType))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":220,"column":63,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":220,"endColumn":65,"suggestions":[{"messageId":"suggestNullish","fix":{"range":[7766,7768],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"errorCount":21,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import {\r\n    MinusIcon,\r\n    PlusCircleIcon,\r\n    PlusIcon,\r\n    XMarkIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { type SelectionOption } from \"../../helpers/types\";\r\nimport ComboSelect from \"../../utilityComponents/ComboSelect\";\r\nimport TransitionWrapperBuildUp from \"../../utilityComponents/TransitionWrapperBuildUp\";\r\nimport CardChoice from \"../../utilityComponents/TagSelectGroup\";\r\nimport RadioGroup from \"../../utilityComponents/RadioGroup\";\r\nimport debounce from \"lodash.debounce\";\r\nimport Toggle from \"./ToggleInput\";\r\n\r\nconst serviceTypeChoices: SelectionOption[] = [\r\n    {\r\n        id: \"1\",\r\n        name: \"Стандартно почистване\",\r\n        description: \"Почистване на гъз, глава, и тем подобни\",\r\n    },\r\n    {\r\n        id: \"2\",\r\n        name: \"Миене на мека мебел\",\r\n        description: \"Почистване на фотьойли и изхвърляне на котки\",\r\n    },\r\n    {\r\n        id: \"3\",\r\n        name: \"Почистване след ремонт\",\r\n        description: \"Рязане на кабели и промиване с чист спирт\",\r\n    },\r\n];\r\n\r\nconst additionalServiceChoices: Record<string, SelectionOption[]> = {\r\n    \"1\": [\r\n        { id: \"1\", name: \"Миене на печка\" },\r\n        { id: \"4\", name: \"Миене на хладилник\" },\r\n        { id: \"3\", name: \"Миене на тераса\" },\r\n        { id: \"2\", name: \"Миене на прозорци\" },\r\n    ],\r\n};\r\n\r\nconst serviceModeChoices: SelectionOption[] = [\r\n    { id: \"1\", name: \"Еднократно\" },\r\n    { id: \"2\", name: \"Седмично\" },\r\n    { id: \"3\", name: \"На 2 седмици\" },\r\n    { id: \"4\", name: \"На 4 седмици\" },\r\n];\r\n\r\nconst serviceDayChoices: SelectionOption[] = [\r\n    { id: \"1\", name: \"Понеделник\" },\r\n    { id: \"2\", name: \"Вторник\" },\r\n    { id: \"3\", name: \"Сряда\" },\r\n    { id: \"4\", name: \"Четвъртък\" },\r\n    { id: \"5\", name: \"Петък\" },\r\n    { id: \"6\", name: \"Събота\" },\r\n    { id: \"7\", name: \"Неделя\" },\r\n];\r\n\r\nconst areaSizeChoices: SelectionOption[] = [\r\n    { id: \"1\", name: \"< 50 кв/м\" },\r\n    { id: \"2\", name: \"51 - 70 кв/м\" },\r\n    { id: \"3\", name: \"71 - 90 кв/м\" },\r\n    { id: \"4\", name: \"91 - 110 кв/м\" },\r\n    { id: \"5\", name: \"111 - 130 кв/м\" },\r\n    { id: \"6\", name: \"131 - 150 кв/м\" },\r\n    { id: \"7\", name: \"> 150 кв/м\" },\r\n];\r\n\r\nconst districtChoices: SelectionOption[] = [\r\n    { id: \"1\", name: \"Leslie Alexander\" },\r\n    { id: \"2\", name: \"saf Alexander\" },\r\n    { id: \"3\", name: \"Lessaglie Alefjxander\" },\r\n    { id: \"4\", name: \"edfh Alexander\" },\r\n    { id: \"5\", name: \"Ledsadie Alefjxander\" },\r\n    { id: \"6\", name: \"Ledfhsljie Alexander\" },\r\n    { id: \"7\", name: \"Ledfhstfjjslie Alexander\" },\r\n    { id: \"8\", name: \"Ledfhssdglie Alexander\" },\r\n    { id: \"9\", name: \"Ledfhslie Alexander\" },\r\n    { id: \"10\", name: \"Ledfhdjslie Alexanjfder\" },\r\n    { id: \"11\", name: \"Ledfhslie Alexandfer\" },\r\n    { id: \"12\", name: \"Ledfhfgdjslie Alexander\" },\r\n    { id: \"13\", name: \"Ledfhfgjfslie Alejxandfgjer\" },\r\n    { id: \"14\", name: \"Ledfhslie Alefgjxander\" },\r\n    { id: \"15\", name: \"Ledfhslie Alexander\" },\r\n    // More users...\r\n];\r\n\r\nconst ServiceHourChoices: SelectionOption[] = [\r\n    { id: \"1\", name: \"08:00\" },\r\n    { id: \"2\", name: \"08:30\" },\r\n    { id: \"3\", name: \"09:00\" },\r\n    { id: \"4\", name: \"10:00\" },\r\n    { id: \"5\", name: \"10:30\" },\r\n    { id: \"6\", name: \"11:00\" },\r\n    { id: \"7\", name: \"11:30\" },\r\n    { id: \"8\", name: \"12:00\" },\r\n    { id: \"9\", name: \"12:30\" },\r\n    { id: \"10\", name: \"13:00\" },\r\n    { id: \"11\", name: \"13:30\" },\r\n    { id: \"12\", name: \"14:00\" },\r\n    { id: \"13\", name: \"14:30\" },\r\n    { id: \"14\", name: \"15:00\" },\r\n    { id: \"16\", name: \"15:30\" },\r\n    { id: \"17\", name: \"16:00\" },\r\n    { id: \"18\", name: \"16:30\" },\r\n    { id: \"19\", name: \"17:00\" },\r\n    { id: \"20\", name: \"17:30\" },\r\n    { id: \"21\", name: \"18:00\" },\r\n    { id: \"22\", name: \"18:30\" },\r\n    // More users...\r\n];\r\n\r\nexport default function CreateOrder() {\r\n    const [active, setActive] = useState(1);\r\n    const [serviceMode, setServiceMode] = useState<string | undefined>();\r\n    const [additionalServices, setAdditionalServices] = useState<Set<string>>(\r\n        new Set()\r\n    );\r\n    const [serviceType, setServiceType] = useState<string | undefined>();\r\n    const [areaSize, setareaSize] = useState<string | undefined>();\r\n    const [serviceDays, setServiceDays] = useState<Set<string>>(new Set());\r\n    const [serviceHours, setServiceHours] = useState<Set<string>>(new Set());\r\n    const [district, setDistrict] = useState<SelectionOption[] | Array<{}>>([]);\r\n\r\n    const toggleSelection = (\r\n        selection: string | undefined,\r\n        setSelection: React.Dispatch<React.SetStateAction<Set<string>>>\r\n    ) => {\r\n        if (!selection) return;\r\n        setSelection((current) => {\r\n            const updated = new Set(current);\r\n            updated.has(selection)\r\n                ? updated.delete(selection)\r\n                : updated.add(selection);\r\n            return updated;\r\n        });\r\n    };\r\n\r\n    const handleServiceMode = (e: string) => {\r\n        setServiceMode(e);\r\n    };\r\n\r\n    const handleAdditionalServices: React.MouseEventHandler<HTMLElement> = (\r\n        e\r\n    ) => {\r\n        toggleSelection(e.currentTarget.dataset.id, setAdditionalServices);\r\n    };\r\n\r\n    const handleAdditionalServices2 = (id: string) => {\r\n        toggleSelection(id, setAdditionalServices);\r\n    };\r\n\r\n    const handleServiceType = (e: string) => {\r\n        setServiceType(e);\r\n    };\r\n\r\n    const handleAreaSize = (e: string) => {\r\n        setareaSize(e);\r\n    };\r\n\r\n    const handleServiceDays: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n        toggleSelection(e.currentTarget.dataset.id, setServiceDays);\r\n    };\r\n\r\n    const handleServiceHours: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n        toggleSelection(e.currentTarget.dataset.id, setServiceHours);\r\n    };\r\n\r\n    const handleServiceHoursMultiple: React.MouseEventHandler<\r\n        HTMLButtonElement\r\n    > = (e) => {\r\n        // let newSet = new Set([\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"])\r\n        const filterWord = e.currentTarget.dataset.id;\r\n        if (filterWord === \"clear\") {\r\n            setServiceHours(new Set([]));\r\n            return;\r\n        }\r\n        const btnChoices = new Set(\r\n            ServiceHourChoices.filter((choice) => {\r\n                switch (filterWord) {\r\n                    case \"morning\":\r\n                        return choice.name <= \"12:00\";\r\n                    case \"afternoon\":\r\n                        return choice.name >= \"12:30\";\r\n                    // case \"all\":\r\n                    //     return true;\r\n                    default:\r\n                        return false;\r\n                }\r\n            }).map((hour) => hour.id)\r\n        );\r\n        setServiceHours((currentHours) => {\r\n            const updatedHours = new Set([...btnChoices, ...currentHours]);\r\n            return updatedHours;\r\n        });\r\n    };\r\n\r\n    const handleDistrict: React.Dispatch<\r\n        React.SetStateAction<SelectionOption[] | Array<{}>>\r\n    > = (e) => {\r\n        // setDistrict(e.currentTarget.dataset.id)\r\n    };\r\n\r\n    return (\r\n        <div className=\"relative my-10 mx-auto flex max-w-2xl flex-col border-t py-2 px-4\">\r\n            <h2 id=\"step-1\" className=\"mt-10 text-xl text-gray-900\">\r\n                Каква услуга търсите?\r\n            </h2>\r\n            {/* <CardChoice options={serviceTypeChoices} onClick={handleServiceType} activeId={serviceType} styles=\"grid\"></CardChoice> */}\r\n            <RadioGroup\r\n                options={serviceTypeChoices}\r\n                activeId={serviceType}\r\n                onClick={handleServiceType}\r\n            />\r\n            <h2 id=\"step-2\" className=\"mt-10 text-xl text-gray-900\">\r\n                Ще имате ли нужда от?\r\n            </h2>\r\n            <Toggle\r\n                options={additionalServiceChoices[serviceType || \"1\"]}\r\n                onClick={handleAdditionalServices}\r\n                activeId={additionalServices}\r\n            />\r\n            <h2 id=\"step-3\" className=\"mt-10 text-xl text-gray-900\">\r\n                Колко често ще са посещенията?\r\n            </h2>\r\n            <RadioGroup\r\n                options={serviceModeChoices}\r\n                onClick={handleServiceMode}\r\n                activeId={serviceMode}\r\n            ></RadioGroup>\r\n            <h2 id=\"step-4\" className=\"mt-10 text-xl text-gray-900\">\r\n                В кои дни искате да са посещенията?\r\n            </h2>\r\n            <p className=\"text-xs text-gray-600\">\r\n                (Изберете повече варианти, ако ви устройват)\r\n            </p>\r\n            <CardChoice\r\n                options={serviceDayChoices}\r\n                onClick={handleServiceDays}\r\n                activeId={serviceDays}\r\n                styles=\"grid grid-cols-2\"\r\n            ></CardChoice>\r\n            <h2 id=\"step-5\" className=\"mt-10 text-xl text-gray-900\">\r\n                В кои часове искате да са посещенията?\r\n            </h2>\r\n            <p className=\"text-xs text-gray-600\">\r\n                (Изберете повече варианти, ако ви устройват)\r\n            </p>\r\n            <div className=\"mt-3 flex max-w-md justify-between px-2\">\r\n                <button\r\n                    className=\"inline-flex items-center rounded bg-white px-2.5 py-1.5 text-xs font-medium text-gray-700 hover:bg-gray-50 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-indigo-500 focus-visible:ring-offset-2\"\r\n                    data-id=\"morning\"\r\n                    onClick={handleServiceHoursMultiple}\r\n                >\r\n                    <PlusIcon className=\"-ml-1 mr-0.5 mt-0.5 h-3 w-3\" /> преди\r\n                    обяд\r\n                </button>\r\n                <button\r\n                    className=\"inline-flex items-center rounded bg-white px-2.5 py-1.5 text-xs font-medium text-gray-700 hover:bg-gray-50 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-indigo-500 focus-visible:ring-offset-2\"\r\n                    data-id=\"afternoon\"\r\n                    onClick={handleServiceHoursMultiple}\r\n                >\r\n                    <PlusIcon className=\"-ml-1 mr-0.5 mt-0.5 h-3 w-3\" />\r\n                    след обяд\r\n                </button>\r\n                <button\r\n                    className=\"inline-flex items-center rounded bg-white px-2.5 py-1.5 text-xs font-medium text-gray-700 hover:bg-gray-50 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-indigo-500 focus-visible:ring-offset-2\"\r\n                    data-id=\"clear\"\r\n                    onClick={handleServiceHoursMultiple}\r\n                >\r\n                    <XMarkIcon className=\"-ml-1 mr-0.5 mt-0.5 h-3 w-3\" />\r\n                    изчисти\r\n                </button>\r\n            </div>\r\n            <CardChoice\r\n                options={ServiceHourChoices}\r\n                onClick={handleServiceHours}\r\n                activeId={serviceHours}\r\n                styles=\"grid grid-cols-3\"\r\n            ></CardChoice>\r\n            <h2 id=\"step-6\" className=\"mt-10 text-xl text-gray-900\">\r\n                Каква площ ще почистваме (кв. м.)?\r\n            </h2>\r\n            <RadioGroup\r\n                options={areaSizeChoices}\r\n                onClick={handleAreaSize}\r\n                activeId={areaSize}\r\n            ></RadioGroup>\r\n            <h2 id=\"step-7\" className=\"mt-10 text-xl text-gray-900\">\r\n                Къде ще почистваме?\r\n            </h2>\r\n            <p className=\"text-xs text-gray-600\">(Ориентировъчна локация)</p>\r\n            <ComboSelect\r\n                options={districtChoices}\r\n                selection={district}\r\n                handleChange={handleDistrict}\r\n            ></ComboSelect>\r\n        </div>\r\n    );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\searchOrders\\CreateOrderDynamic.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'PlusCircleIcon' is defined but never used.","line":1,"column":21,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":35},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'useEffect' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":19},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":100,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":100,"endColumn":45},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'setDistrict' is assigned a value but never used.","line":108,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":108,"endColumn":33},{"ruleId":"@typescript-eslint/ban-types","severity":2,"message":"Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":108,"column":72,"nodeType":"TSTypeLiteral","messageId":"bannedTypeMessage","endLine":108,"endColumn":74},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":116,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":116,"endColumn":128},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":117,"column":14,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":117,"endColumn":23,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[4595,4605],"text":"selection == null"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[4596,4605],"text":"(selection ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[4595,4605],"text":"!Boolean(selection)"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":125,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":125,"endColumn":27},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'handleAdditionalServices2' is assigned a value but never used.","line":145,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":145,"endColumn":36},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":145,"column":39,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":145,"endColumn":54},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":149,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":149,"endColumn":45},{"ruleId":"@typescript-eslint/ban-types","severity":2,"message":"Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":192,"column":89,"nodeType":"TSTypeLiteral","messageId":"bannedTypeMessage","endLine":192,"endColumn":91},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":198,"column":55,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":198,"endColumn":66,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[7629,7640],"text":"(serviceType != null)"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[7629,7640],"text":"(serviceType ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[7629,7640],"text":"(Boolean(serviceType))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":198,"column":67,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":198,"endColumn":69,"suggestions":[{"messageId":"suggestNullish","fix":{"range":[7641,7643],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":210,"column":67,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":210,"endColumn":78,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[8528,8539],"text":"(serviceType != null)"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[8528,8539],"text":"(serviceType ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[8528,8539],"text":"(Boolean(serviceType))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":210,"column":79,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":210,"endColumn":81,"suggestions":[{"messageId":"suggestNullish","fix":{"range":[8540,8542],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"errorCount":16,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { MinusIcon, PlusCircleIcon, PlusIcon } from \"@heroicons/react/24/outline\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { type SelectionOption } from \"../../helpers/types\";\r\nimport ComboSelect from \"../../utilityComponents/ComboSelect\";\r\nimport TransitionWrapperBuildUp from \"../../utilityComponents/TransitionWrapperBuildUp\";\r\nimport CardChoice from \"../../utilityComponents/TagSelectGroup\";\r\nimport RadioGroup from \"../../utilityComponents/RadioGroup\";\r\nimport debounce from 'lodash.debounce'\r\nimport Toggle from \"./ToggleInput\";\r\n\r\n\r\nconst serviceTypeChoices: SelectionOption[] = [\r\n    { id: \"1\", name: 'Стандартно почистване', description: \"Почистване на гъз, глава, и тем подобни\" },\r\n    { id: \"2\", name: 'Миене на мека мебел', description: \"Почистване на фотьойли и изхвърляне на котки\" },\r\n    { id: \"3\", name: 'Почистване след ремонт', description: \"Рязане на кабели и промиване с чист спирт\" },\r\n]\r\n\r\nconst additionalServiceChoices: Record<string, SelectionOption[]> = {\r\n    \"1\": [\r\n        { id: \"1\", name: 'Миене на печка' },\r\n        { id: \"4\", name: 'Миене на хладилник' },\r\n        { id: \"3\", name: 'Миене на тераса' },\r\n        { id: \"2\", name: 'Миене на прозорци' },\r\n    ]\r\n}\r\n\r\nconst serviceModeChoices: SelectionOption[] = [\r\n    { id: \"1\", name: 'Еднократно' },\r\n    { id: \"2\", name: 'Седмично' },\r\n    { id: \"3\", name: 'На 2 седмици' },\r\n    { id: \"4\", name: 'На 4 седмици' },\r\n]\r\n\r\nconst serviceDayChoices: SelectionOption[] = [\r\n    { id: \"1\", name: 'Понеделник' },\r\n    { id: \"2\", name: 'Вторник' },\r\n    { id: \"3\", name: 'Сряда' },\r\n    { id: \"4\", name: 'Четвъртък' },\r\n    { id: \"5\", name: 'Петък' },\r\n    { id: \"6\", name: 'Събота' },\r\n    { id: \"7\", name: 'Неделя' },\r\n]\r\n\r\nconst areaSizeChoices: SelectionOption[] = [\r\n    { id: \"1\", name: '< 50' },\r\n    { id: \"2\", name: '51 - 70' },\r\n    { id: \"3\", name: '71 - 90' },\r\n    { id: \"4\", name: '91 - 110' },\r\n    { id: \"5\", name: '111 - 130' },\r\n    { id: \"6\", name: '131 - 150' },\r\n    { id: \"7\", name: '> 150' },\r\n]\r\n\r\n\r\nconst districtChoices: SelectionOption[] = [\r\n    { id: \"1\", name: 'Leslie Alexander' },\r\n    { id: \"2\", name: 'saf Alexander' },\r\n    { id: \"3\", name: 'Lessaglie Alefjxander' },\r\n    { id: \"4\", name: 'edfh Alexander' },\r\n    { id: \"5\", name: 'Ledsadie Alefjxander' },\r\n    { id: \"6\", name: 'Ledfhsljie Alexander' },\r\n    { id: \"7\", name: 'Ledfhstfjjslie Alexander' },\r\n    { id: \"8\", name: 'Ledfhssdglie Alexander' },\r\n    { id: \"9\", name: 'Ledfhslie Alexander' },\r\n    { id: \"10\", name: 'Ledfhdjslie Alexanjfder' },\r\n    { id: \"11\", name: 'Ledfhslie Alexandfer' },\r\n    { id: \"12\", name: 'Ledfhfgdjslie Alexander' },\r\n    { id: \"13\", name: 'Ledfhfgjfslie Alejxandfgjer' },\r\n    { id: \"14\", name: 'Ledfhslie Alefgjxander' },\r\n    { id: \"15\", name: 'Ledfhslie Alexander' },\r\n    // More users...\r\n]\r\n\r\n\r\nconst ServiceHourChoices: SelectionOption[] = [\r\n    { id: \"1\", name: '08:00' },\r\n    { id: \"2\", name: '08:30' },\r\n    { id: \"3\", name: '09:00' },\r\n    { id: \"4\", name: '10:00' },\r\n    { id: \"5\", name: '10:30' },\r\n    { id: \"6\", name: '11:00' },\r\n    { id: \"7\", name: '11:30' },\r\n    { id: \"8\", name: '12:00' },\r\n    { id: \"9\", name: '12:30' },\r\n    { id: \"10\", name: '13:00' },\r\n    { id: \"11\", name: '13:30' },\r\n    { id: \"12\", name: '14:00' },\r\n    { id: \"13\", name: '14:30' },\r\n    { id: \"14\", name: '15:00' },\r\n    { id: \"16\", name: '15:30' },\r\n    { id: \"17\", name: '16:00' },\r\n    { id: \"18\", name: '16:30' },\r\n    { id: \"19\", name: '17:00' },\r\n    { id: \"20\", name: '17:30' },\r\n    { id: \"21\", name: '18:00' },\r\n    { id: \"22\", name: '18:30' },\r\n    // More users...\r\n]\r\n\r\nexport default function CreateOrderDynamic() {\r\n    const [active, setActive] = useState(1);\r\n    const [serviceMode, setServiceMode] = useState<string | undefined>()\r\n    const [additionalServices, setAdditionalServices] = useState<Set<string>>(new Set())\r\n    const [serviceType, setServiceType] = useState<string | undefined>()\r\n    const [areaSize, setareaSize] = useState<string | undefined>()\r\n    const [serviceDays, setServiceDays] = useState<Set<string>>(new Set())\r\n    const [serviceHours, setServiceHours] = useState<Set<string>>(new Set())\r\n    const [district, setDistrict] = useState<SelectionOption[] | Array<{}>>([])\r\n\r\n\r\n    const testRef = useRef<null | HTMLParagraphElement>(null);\r\n    // useEffect(() => {\r\n    //     nextStep()\r\n    // }, [serviceMode, serviceType, areaSize, serviceDays, serviceHours, district])\r\n\r\n    const toggleSelection = (selection: string | undefined, setSelection: React.Dispatch<React.SetStateAction<Set<string>>>) => {\r\n        if (!selection) return;\r\n        setSelection((current) => {\r\n            const updated = new Set(current)\r\n            updated.has(selection) ? updated.delete(selection) : updated.add(selection)\r\n            return updated;\r\n        })\r\n    }\r\n\r\n    const nextStep = () => {\r\n        const scrollToStep = active + 1;\r\n        setActive((current) => current + 1)\r\n        // setTimeout(() => {\r\n        //     document.querySelector(`#step-${scrollToStep.toString()}`)?.scrollTo({ top: 0, left: 0, behavior: \"smooth\" })\r\n        // }, 500);\r\n        debounce(() => document.querySelector(`#step-${scrollToStep.toString()}`)?.scrollIntoView({ behavior: \"smooth\" }), 100)()\r\n\r\n    }\r\n\r\n    const handleServiceMode: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n        setServiceMode(e.currentTarget.dataset.id)\r\n        nextStep()\r\n    }\r\n\r\n    const handleAdditionalServices: React.MouseEventHandler<HTMLElement> = (e) => {\r\n        toggleSelection(e.currentTarget.dataset.id, setAdditionalServices)\r\n        nextStep()\r\n    }\r\n\r\n    const handleAdditionalServices2 = (id: string) => {\r\n        toggleSelection(id, setAdditionalServices)\r\n    }\r\n\r\n    const handleServiceType = (e: string) => {\r\n        setServiceType(e)\r\n        nextStep()\r\n    }\r\n\r\n    const handleAreaSize: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n        setareaSize(e.currentTarget.dataset.id)\r\n        nextStep()\r\n    }\r\n\r\n    const handleServiceDays: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n        toggleSelection(e.currentTarget.dataset.id, setServiceDays)\r\n    }\r\n\r\n    const handleServiceHours: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n        toggleSelection(e.currentTarget.dataset.id, setServiceHours)\r\n    }\r\n\r\n    const handleServiceHoursMultiple: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        // let newSet = new Set([\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"])\r\n        const filterWord = e.currentTarget.dataset.id;\r\n        if (filterWord === \"clear\") {\r\n            setServiceHours(new Set([]));\r\n            return;\r\n        }\r\n        const btnChoices = new Set(ServiceHourChoices.filter(choice => {\r\n            switch (filterWord) {\r\n                case \"morning\":\r\n                    return choice.name <= \"12:00\";\r\n                case \"afternoon\":\r\n                    return choice.name >= \"12:30\";\r\n                // case \"all\":\r\n                //     return true;\r\n                default:\r\n                    return false;\r\n            }\r\n        }).map(hour => hour.id))\r\n        setServiceHours((currentHours) => {\r\n            const updatedHours = new Set([...btnChoices, ...currentHours])\r\n            return updatedHours;\r\n        })\r\n    }\r\n\r\n    const handleDistrict: React.Dispatch<React.SetStateAction<SelectionOption[] | Array<{}>>> = (e) => {\r\n        // setDistrict(e.currentTarget.dataset.id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center relative my-10 py-2 px-4 border-t max-w-2xl mx-auto\">\r\n            <Toggle options={additionalServiceChoices[serviceType || \"1\"]} onClick={handleAdditionalServices} activeId={additionalServices} />\r\n\r\n            <TransitionWrapperBuildUp visible={active >= 1}>\r\n                <div>\r\n                    <p ref={testRef} id=\"step-1\" className=\"text-2xl font-light text-gray-900 pb-8\">Каква услуга търсите?</p>\r\n                    {/* <CardChoice options={serviceTypeChoices} onClick={handleServiceType} activeId={serviceType} styles=\"grid\"></CardChoice> */}\r\n                    <RadioGroup options={serviceTypeChoices} activeId={serviceType} onClick={handleServiceType} />\r\n                </div>\r\n            </TransitionWrapperBuildUp>\r\n            <TransitionWrapperBuildUp visible={active >= 2} >\r\n                <div>\r\n                    <p id=\"step-2\" className=\"text-2xl font-light text-gray-900 pb-8\">Ще имате ли нужда от?</p>\r\n                    <CardChoice options={additionalServiceChoices[serviceType || \"1\"]} onClick={handleAdditionalServices} activeId={additionalServices} styles=\"grid\"></CardChoice>\r\n                </div>\r\n            </TransitionWrapperBuildUp>\r\n            <TransitionWrapperBuildUp visible={active >= 3} >\r\n                <div>\r\n                    <p id=\"step-3\" className=\"text-2xl font-light text-gray-900 pb-8\">Колко често ще са посещенията?</p>\r\n                    <CardChoice options={serviceModeChoices} onClick={handleServiceMode} activeId={serviceMode} styles=\"grid\"></CardChoice>\r\n                </div>\r\n            </TransitionWrapperBuildUp>\r\n            <TransitionWrapperBuildUp visible={active >= 4} btnNext={nextStep}>\r\n                <div>\r\n                    <p id=\"step-4\" className=\"text-2xl font-light text-gray-900 pb-8\">В кои дни искате да са посещенията?</p>\r\n                    <p className=\"text-xs text-gray-600\">(Изберете повече варианти, ако ви устройват)</p>\r\n                    <CardChoice options={serviceDayChoices} onClick={handleServiceDays} activeId={serviceDays} styles=\"grid grid-cols-2\"></CardChoice>\r\n                </div>\r\n            </TransitionWrapperBuildUp>\r\n            <TransitionWrapperBuildUp visible={active >= 5} btnNext={nextStep}>\r\n                <div>\r\n                    <p id=\"step-5\" className=\"text-2xl font-light text-gray-900 pb-8\">В кои часове искате да са посещенията?</p>\r\n                    <p className=\"text-xs text-gray-600\">(Изберете повече варианти, ако ви устройват)</p>\r\n                    <div className=\"flex justify-between py-3 flex-wrap gap-2\">\r\n                        <button className=\"inline-flex items-center rounded-full px-3 py-1.5 text-sm whitespace-nowrap font-medium bg-indigo-100 text-indigo-700  hover:bg-indigo-200  active:outline-none active:ring-2 active:ring-indigo-500 active:ring-offset-2\" data-id=\"morning\" onClick={handleServiceHoursMultiple}><PlusIcon className=\"h-4 w-4 mt-0.5 -ml-1\" /> преди обяд</button>\r\n                        <button className=\"inline-flex items-center rounded-full px-3 py-1.5 text-sm whitespace-nowrap font-medium bg-indigo-100 text-indigo-700  hover:bg-indigo-200  active:outline-none active:ring-2 active:ring-indigo-500 active:ring-offset-2\" data-id=\"afternoon\" onClick={handleServiceHoursMultiple}><PlusIcon className=\"h-4 w-4 mt-0.5 -ml-1\" />след обяд</button>\r\n                        {/* <button className=\"text-sm whitespace-nowrap underline\" data-id=\"all\" onClick={handleServiceHoursMultiple}>всички</button> */}\r\n                        <button className=\"inline-flex items-center rounded-full px-3 py-1.5 text-sm whitespace-nowrap font-medium bg-indigo-100 text-indigo-700  hover:bg-indigo-200  active:outline-none active:ring-2 active:ring-indigo-500 active:ring-offset-2\" data-id=\"clear\" onClick={handleServiceHoursMultiple}><MinusIcon className=\"h-4 w-4 mt-0.5 -ml-1\" />изчисти</button>\r\n                    </div>\r\n                    <CardChoice options={ServiceHourChoices} onClick={handleServiceHours} activeId={serviceHours} styles=\"grid grid-cols-3\"></CardChoice>\r\n                </div>\r\n            </TransitionWrapperBuildUp>\r\n            <TransitionWrapperBuildUp visible={active >= 6} >\r\n                <div>\r\n                    <p id=\"step-6\" className=\"text-2xl font-light text-gray-900 pb-8\">Каква площ ще почистваме (кв. м.)?</p>\r\n                    <CardChoice options={areaSizeChoices} onClick={handleAreaSize} activeId={areaSize} styles=\"grid grid-cols-2\"></CardChoice>\r\n                </div>\r\n            </TransitionWrapperBuildUp>\r\n            <TransitionWrapperBuildUp visible={active >= 7} btnNext={nextStep}>\r\n                <div>\r\n                    <p id=\"step-7\" className=\"text-2xl font-light text-gray-900 pb-8\">Къде ще почистваме?</p>\r\n                    <p className=\"text-xs text-gray-600\">(Ориентировъчна локация)</p>\r\n                    <ComboSelect options={districtChoices} selection={district} handleChange={handleDistrict}></ComboSelect>\r\n                </div>\r\n            </TransitionWrapperBuildUp>\r\n        </div>)\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\searchOrders\\SearchOrderWizard.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'PlusCircleIcon' is defined but never used.","line":1,"column":21,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":35},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":99,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":99,"endColumn":44},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'setDistrict' is assigned a value but never used.","line":107,"column":22,"nodeType":"Identifier","messageId":"unusedVar","endLine":107,"endColumn":33},{"ruleId":"@typescript-eslint/ban-types","severity":2,"message":"Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":107,"column":72,"nodeType":"TSTypeLiteral","messageId":"bannedTypeMessage","endLine":107,"endColumn":74},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":113,"column":29,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":113,"endColumn":128},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":114,"column":14,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":114,"endColumn":23,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[4420,4430],"text":"selection == null"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[4421,4430],"text":"(selection ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[4420,4430],"text":"!Boolean(selection)"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":122,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":122,"endColumn":27},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":134,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":134,"endColumn":45},{"ruleId":"@typescript-eslint/ban-types","severity":2,"message":"Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":175,"column":89,"nodeType":"TSTypeLiteral","messageId":"bannedTypeMessage","endLine":175,"endColumn":91},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":191,"column":67,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":191,"endColumn":78,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[7593,7604],"text":"(serviceType != null)"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[7593,7604],"text":"(serviceType ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[7593,7604],"text":"(Boolean(serviceType))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":191,"column":79,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":191,"endColumn":81,"suggestions":[{"messageId":"suggestNullish","fix":{"range":[7605,7607],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { MinusIcon, PlusCircleIcon, PlusIcon } from \"@heroicons/react/24/outline\";\r\nimport { useState } from \"react\";\r\nimport { type SelectionOption } from \"../../helpers/types\";\r\nimport ComboSelect from \"../../utilityComponents/ComboSelect\";\r\nimport TransitionWrapper from \"../../utilityComponents/TransitionWrapper\";\r\nimport CardChoice from \"../../utilityComponents/TagSelectGroup\";\r\nimport RadioGroup from \"../../utilityComponents/RadioGroup\";\r\n\r\n\r\n\r\nconst serviceTypeChoices: SelectionOption[] = [\r\n    { id: \"1\", name: 'Стандартно почистване', description: \"Почистване на гъз, глава, и тем подобни\" },\r\n    { id: \"2\", name: 'Миене на мека мебел', description: \"Почистване на фотьойли и изхвърляне на котки\" },\r\n    { id: \"3\", name: 'Почистване след ремонт', description: \"Рязане на кабели и промиване с чист спирт\" },\r\n]\r\n\r\nconst additionalServiceChoices: Record<string, SelectionOption[]> = {\r\n    \"1\": [\r\n        { id: \"1\", name: 'Миене на печка' },\r\n        { id: \"4\", name: 'Миене на хладилник' },\r\n        { id: \"3\", name: 'Миене на тераса' },\r\n        { id: \"2\", name: 'Миене на прозорци' },\r\n    ]\r\n}\r\n\r\nconst serviceModeChoices: SelectionOption[] = [\r\n    { id: \"1\", name: 'Еднократно' },\r\n    { id: \"2\", name: 'Седмично' },\r\n    { id: \"3\", name: 'На 2 седмици' },\r\n    { id: \"4\", name: 'На 4 седмици' },\r\n]\r\n\r\nconst serviceDayChoices: SelectionOption[] = [\r\n    { id: \"1\", name: 'Понеделник' },\r\n    { id: \"2\", name: 'Вторник' },\r\n    { id: \"3\", name: 'Сряда' },\r\n    { id: \"4\", name: 'Четвъртък' },\r\n    { id: \"5\", name: 'Петък' },\r\n    { id: \"6\", name: 'Събота' },\r\n    { id: \"7\", name: 'Неделя' },\r\n]\r\n\r\nconst areaSizeChoices: SelectionOption[] = [\r\n    { id: \"1\", name: '< 50' },\r\n    { id: \"2\", name: '51 - 70' },\r\n    { id: \"3\", name: '71 - 90' },\r\n    { id: \"4\", name: '91 - 110' },\r\n    { id: \"5\", name: '111 - 130' },\r\n    { id: \"6\", name: '131 - 150' },\r\n    { id: \"7\", name: '> 150' },\r\n]\r\n\r\n\r\nconst districtChoices: SelectionOption[] = [\r\n    { id: \"1\", name: 'Leslie Alexander' },\r\n    { id: \"2\", name: 'saf Alexander' },\r\n    { id: \"3\", name: 'Lessaglie Alefjxander' },\r\n    { id: \"4\", name: 'edfh Alexander' },\r\n    { id: \"5\", name: 'Ledsadie Alefjxander' },\r\n    { id: \"6\", name: 'Ledfhsljie Alexander' },\r\n    { id: \"7\", name: 'Ledfhstfjjslie Alexander' },\r\n    { id: \"8\", name: 'Ledfhssdglie Alexander' },\r\n    { id: \"9\", name: 'Ledfhslie Alexander' },\r\n    { id: \"10\", name: 'Ledfhdjslie Alexanjfder' },\r\n    { id: \"11\", name: 'Ledfhslie Alexandfer' },\r\n    { id: \"12\", name: 'Ledfhfgdjslie Alexander' },\r\n    { id: \"13\", name: 'Ledfhfgjfslie Alejxandfgjer' },\r\n    { id: \"14\", name: 'Ledfhslie Alefgjxander' },\r\n    { id: \"15\", name: 'Ledfhslie Alexander' },\r\n    // More users...\r\n]\r\n\r\n\r\nconst ServiceHourChoices: SelectionOption[] = [\r\n    { id: \"1\", name: '08:00' },\r\n    { id: \"2\", name: '08:30' },\r\n    { id: \"3\", name: '09:00' },\r\n    { id: \"4\", name: '10:00' },\r\n    { id: \"5\", name: '10:30' },\r\n    { id: \"6\", name: '11:00' },\r\n    { id: \"7\", name: '11:30' },\r\n    { id: \"8\", name: '12:00' },\r\n    { id: \"9\", name: '12:30' },\r\n    { id: \"10\", name: '13:00' },\r\n    { id: \"11\", name: '13:30' },\r\n    { id: \"12\", name: '14:00' },\r\n    { id: \"13\", name: '14:30' },\r\n    { id: \"14\", name: '15:00' },\r\n    { id: \"16\", name: '15:30' },\r\n    { id: \"17\", name: '16:00' },\r\n    { id: \"18\", name: '16:30' },\r\n    { id: \"19\", name: '17:00' },\r\n    { id: \"20\", name: '17:30' },\r\n    { id: \"21\", name: '18:00' },\r\n    { id: \"22\", name: '18:30' },\r\n    // More users...\r\n]\r\n\r\nexport default function SearchOrderWizard() {\r\n    const [active, setActive] = useState(1);\r\n    const [serviceMode, setServiceMode] = useState<string | undefined>()\r\n    const [additionalServices, setAdditionalServices] = useState<Set<string>>(new Set())\r\n    const [serviceType, setServiceType] = useState<string | undefined>()\r\n    const [areaSize, setareaSize] = useState<string | undefined>()\r\n    const [serviceDays, setServiceDays] = useState<Set<string>>(new Set())\r\n    const [serviceHours, setServiceHours] = useState<Set<string>>(new Set())\r\n    const [district, setDistrict] = useState<SelectionOption[] | Array<{}>>([])\r\n\r\n    // useEffect(() => {\r\n    //     nextStep()\r\n    // }, [serviceMode, serviceType, areaSize, serviceDays, serviceHours, district])\r\n\r\n    const toggleSelection = (selection: string | undefined, setSelection: React.Dispatch<React.SetStateAction<Set<string>>>) => {\r\n        if (!selection) return;\r\n        setSelection((current) => {\r\n            const updated = new Set(current)\r\n            updated.has(selection) ? updated.delete(selection) : updated.add(selection)\r\n            return updated;\r\n        })\r\n    }\r\n\r\n    const nextStep = () => {\r\n        setActive((current) => current + 1)\r\n    }\r\n\r\n    const handleServiceMode: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n        setServiceMode(e.currentTarget.dataset.id)\r\n    }\r\n\r\n    const handleAdditionalServices: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n        toggleSelection(e.currentTarget.dataset.id, setAdditionalServices)\r\n    }\r\n\r\n    const handleServiceType = (e: string) => {\r\n        setServiceType(e)\r\n    }\r\n\r\n    const handleAreaSize: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n        setareaSize(e.currentTarget.dataset.id)\r\n    }\r\n\r\n    const handleServiceDays: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n        toggleSelection(e.currentTarget.dataset.id, setServiceDays)\r\n    }\r\n\r\n    const handleServiceHours: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n        toggleSelection(e.currentTarget.dataset.id, setServiceHours)\r\n    }\r\n\r\n    const handleServiceHoursMultiple: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        // let newSet = new Set([\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"])\r\n        const filterWord = e.currentTarget.dataset.id;\r\n        if (filterWord === \"clear\") {\r\n            setServiceHours(new Set([]));\r\n            return;\r\n        }\r\n        const btnChoices = new Set(ServiceHourChoices.filter(choice => {\r\n            switch (filterWord) {\r\n                case \"morning\":\r\n                    return choice.name <= \"12:00\";\r\n                case \"afternoon\":\r\n                    return choice.name >= \"12:30\";\r\n                // case \"all\":\r\n                //     return true;\r\n                default:\r\n                    return false;\r\n            }\r\n        }).map(hour => hour.id))\r\n        setServiceHours((currentHours) => {\r\n            const updatedHours = new Set([...btnChoices, ...currentHours])\r\n            return updatedHours;\r\n        })\r\n    }\r\n\r\n    const handleDistrict: React.Dispatch<React.SetStateAction<SelectionOption[] | Array<{}>>> = (e) => {\r\n        // setDistrict(e.currentTarget.dataset.id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"relative my-10 py-2 px-4 border-t\">\r\n            <TransitionWrapper visible={active === 1} btnNext={nextStep}>\r\n                <div>\r\n                    <p className=\"text-2xl font-light text-gray-900 pb-8\">Каква услуга търсите?</p>\r\n                    {/* <CardChoice options={serviceTypeChoices} onClick={handleServiceType} activeId={serviceType} styles=\"grid\"></CardChoice> */}\r\n                    <RadioGroup options={serviceTypeChoices} activeId={serviceType} onClick={handleServiceType}/>\r\n                </div>\r\n            </TransitionWrapper>\r\n            <TransitionWrapper visible={active === 2} btnNext={nextStep}>\r\n                <div>\r\n                    <p className=\"text-2xl font-light text-gray-900 pb-8\">Ще имате ли нужда от?</p>\r\n                    <CardChoice options={additionalServiceChoices[serviceType || \"1\"]} onClick={handleAdditionalServices} activeId={additionalServices} styles=\"grid\"></CardChoice>\r\n                </div>\r\n            </TransitionWrapper>\r\n            <TransitionWrapper visible={active === 3} btnNext={nextStep}>\r\n                <div>\r\n                    <p className=\"text-2xl font-light text-gray-900 pb-8\">Колко често ще са посещенията?</p>\r\n                    <CardChoice options={serviceModeChoices} onClick={handleServiceMode} activeId={serviceMode} styles=\"grid\"></CardChoice>\r\n                </div>\r\n            </TransitionWrapper>\r\n            <TransitionWrapper visible={active === 4} btnNext={nextStep}>\r\n                <div>\r\n                    <p className=\"text-2xl font-light text-gray-900 pb-8\">В кои дни искате да са посещенията?</p>\r\n                    <p className=\"text-xs text-gray-600\">(Изберете повече варианти, ако ви устройват)</p>\r\n                    <CardChoice options={serviceDayChoices} onClick={handleServiceDays} activeId={serviceDays} styles=\"grid grid-cols-2\"></CardChoice>\r\n                </div>\r\n            </TransitionWrapper>\r\n            <TransitionWrapper visible={active === 5} btnNext={nextStep}>\r\n                <div>\r\n                    <p className=\"text-2xl font-light text-gray-900 pb-8\">В кои часове искате да са посещенията?</p>\r\n                    <p className=\"text-xs text-gray-600\">(Изберете повече варианти, ако ви устройват)</p>\r\n                    <div className=\"flex justify-between py-3 flex-wrap gap-2\">\r\n                        <button className=\"inline-flex items-center rounded-full px-3 py-1.5 text-sm whitespace-nowrap font-medium bg-indigo-100 text-indigo-700  hover:bg-indigo-200  active:outline-none active:ring-2 active:ring-indigo-500 active:ring-offset-2\" data-id=\"morning\" onClick={handleServiceHoursMultiple}><PlusIcon className=\"h-4 w-4 mt-0.5 -ml-1\"/> преди обяд</button>\r\n                        <button className=\"inline-flex items-center rounded-full px-3 py-1.5 text-sm whitespace-nowrap font-medium bg-indigo-100 text-indigo-700  hover:bg-indigo-200  active:outline-none active:ring-2 active:ring-indigo-500 active:ring-offset-2\" data-id=\"afternoon\" onClick={handleServiceHoursMultiple}><PlusIcon className=\"h-4 w-4 mt-0.5 -ml-1\"/>след обяд</button>\r\n                        {/* <button className=\"text-sm whitespace-nowrap underline\" data-id=\"all\" onClick={handleServiceHoursMultiple}>всички</button> */}\r\n                        <button className=\"inline-flex items-center rounded-full px-3 py-1.5 text-sm whitespace-nowrap font-medium bg-indigo-100 text-indigo-700  hover:bg-indigo-200  active:outline-none active:ring-2 active:ring-indigo-500 active:ring-offset-2\" data-id=\"clear\" onClick={handleServiceHoursMultiple}><MinusIcon className=\"h-4 w-4 mt-0.5 -ml-1\"/>изчисти</button>\r\n                    </div>\r\n                    <CardChoice options={ServiceHourChoices} onClick={handleServiceHours} activeId={serviceHours} styles=\"grid grid-cols-3\"></CardChoice>\r\n                </div>\r\n            </TransitionWrapper>\r\n            <TransitionWrapper visible={active === 6} btnNext={nextStep}>\r\n                <div>\r\n                    <p className=\"text-2xl font-light text-gray-900 pb-8\">Каква площ ще почистваме (кв. м.)?</p>\r\n                    <CardChoice options={areaSizeChoices} onClick={handleAreaSize} activeId={areaSize} styles=\"grid grid-cols-2\"></CardChoice>\r\n                </div>\r\n            </TransitionWrapper>\r\n            <TransitionWrapper visible={active === 7} btnNext={nextStep}>\r\n                <div>\r\n                    <p className=\"text-2xl font-light text-gray-900 pb-8\">Къде ще почистваме?</p>\r\n                    <p className=\"text-xs text-gray-600\">(Ориентировъчна локация)</p>\r\n                    <ComboSelect options={districtChoices} selection={district} handleChange={handleDistrict}></ComboSelect>\r\n                </div>\r\n            </TransitionWrapper>\r\n        </div>)\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\searchOrders\\ToggleInput.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'useState' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":18},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":12,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":12,"endColumn":86},{"ruleId":"react/jsx-key","severity":2,"message":"Missing \"key\" prop for element in iterator","line":19,"column":13,"nodeType":"JSXElement","messageId":"missingIterKey","endLine":37,"endColumn":19},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected string value in conditional. An explicit empty string check is required.","line":35,"column":18,"nodeType":"MemberExpression","messageId":"conditionErrorString","endLine":35,"endColumn":29,"suggestions":[{"messageId":"conditionFixCompareStringLength","fix":{"range":[1438,1449],"text":"(option.name.length > 0)"},"desc":"Change condition to check string's length (`value.length !== 0`)"},{"messageId":"conditionFixCompareEmptyString","fix":{"range":[1438,1449],"text":"(option.name !== \"\")"},"desc":"Change condition to check for empty string (`value !== \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[1438,1449],"text":"(Boolean(option.name))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]}],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { useState } from 'react'\r\nimport { Switch } from '@headlessui/react'\r\nimport classNames from '../../helpers/classNames';\r\nimport { type SelectionOption } from '../../helpers/types';\r\n\r\ninterface ToggleInputProps {\r\n  options: SelectionOption[];\r\n  activeId: string | Set<string> | undefined;\r\n  onClick: React.MouseEventHandler<HTMLElement>\r\n}\r\n\r\nexport default function ToggleInput({ options, activeId, onClick }: ToggleInputProps) {\r\n  return (\r\n    <div className='flex flex-col gap-6 max-w-md mt-3'>\r\n      {\r\n        options.map(option => {\r\n          const enabled = (activeId === option.id || (activeId instanceof Set && activeId.has(option.id)));\r\n          return (\r\n            <div className='flex gap-2'>\r\n              <Switch.Group>\r\n                <Switch\r\n                  key={option.id}\r\n                  data-id={option.id}\r\n                  checked={enabled}\r\n                  onClick={onClick}\r\n                  className={`${enabled ? 'bg-indigo-600' : 'bg-gray-200'\r\n                    } relative inline-flex h-6 w-11 items-center rounded-full`}\r\n                >\r\n                  <span className=\"sr-only\">Enable notifications</span>\r\n                  <span\r\n                    className={`${enabled ? 'translate-x-6' : 'translate-x-1'\r\n                      } inline-block h-4 w-4 transform rounded-full bg-white transition`}\r\n                  />\r\n                </Switch>\r\n                {option.name && <Switch.Label className={classNames(\"cursor-pointer\", enabled ? \"text-indigo-800\" : \"text-gray-500\")}>{option.name}</Switch.Label>}\r\n              </Switch.Group>\r\n            </div>)\r\n        }\r\n        )}\r\n    </div>\r\n  )\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\structure\\searchOrders\\VendorList.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Filters' is defined but never used.","line":1,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Header' is defined but never used.","line":3,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":14},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":83,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":83,"endColumn":42},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":87,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":87,"endColumn":37}],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import Filters from \"../../utilityComponents/Filters\";\r\nimport VendorCard from \"../cards/VendorCard\";\r\nimport Header from \"../header/Header\";\r\n\r\n// Filters should be:\r\n// Район\r\n// Оценка\r\n// Град\r\n// Цени (валиден само за един вид услуга)\r\n// Видове услуги\r\n// Име (търсене)\r\n/*\r\n  This example requires some changes to your config:\r\n  \r\n  ```\r\n  // tailwind.config.js\r\n  module.exports = {\r\n    // ...\r\n    plugins: [\r\n      // ...\r\n      require('@tailwindcss/forms'),\r\n    ],\r\n  }\r\n  ```\r\n*/\r\nimport { Fragment, useState } from 'react'\r\nimport { Dialog, Disclosure, Menu, Transition } from '@headlessui/react'\r\nimport { XMarkIcon } from '@heroicons/react/24/outline'\r\nimport { ChevronDownIcon, FunnelIcon, MinusIcon, PlusIcon, Squares2X2Icon } from '@heroicons/react/20/solid'\r\n\r\nconst sortOptions = [\r\n    { name: 'Most Popular', href: '#', current: true },\r\n    { name: 'Best Rating', href: '#', current: false },\r\n    { name: 'Newest', href: '#', current: false },\r\n    { name: 'Price: Low to High', href: '#', current: false },\r\n    { name: 'Price: High to Low', href: '#', current: false },\r\n]\r\nconst subCategories = [\r\n    { name: 'Totes', href: '#' },\r\n    { name: 'Backpacks', href: '#' },\r\n    { name: 'Travel Bags', href: '#' },\r\n    { name: 'Hip Bags', href: '#' },\r\n    { name: 'Laptop Sleeves', href: '#' },\r\n]\r\nconst filters = [\r\n    {\r\n        id: 'color',\r\n        name: 'Color',\r\n        options: [\r\n            { value: 'white', label: 'White', checked: false },\r\n            { value: 'beige', label: 'Beige', checked: false },\r\n            { value: 'blue', label: 'Blue', checked: true },\r\n            { value: 'brown', label: 'Brown', checked: false },\r\n            { value: 'green', label: 'Green', checked: false },\r\n            { value: 'purple', label: 'Purple', checked: false },\r\n        ],\r\n    },\r\n    {\r\n        id: 'category',\r\n        name: 'Category',\r\n        options: [\r\n            { value: 'new-arrivals', label: 'New Arrivals', checked: false },\r\n            { value: 'sale', label: 'Sale', checked: false },\r\n            { value: 'travel', label: 'Travel', checked: true },\r\n            { value: 'organization', label: 'Organization', checked: false },\r\n            { value: 'accessories', label: 'Accessories', checked: false },\r\n        ],\r\n    },\r\n    {\r\n        id: 'size',\r\n        name: 'Size',\r\n        options: [\r\n            { value: '2l', label: '2L', checked: false },\r\n            { value: '6l', label: '6L', checked: false },\r\n            { value: '12l', label: '12L', checked: false },\r\n            { value: '18l', label: '18L', checked: false },\r\n            { value: '20l', label: '20L', checked: false },\r\n            { value: '40l', label: '40L', checked: true },\r\n        ],\r\n    },\r\n]\r\n\r\nfunction classNames(...classes: string[]) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport default function VendorList() {\r\n    const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false)\r\n\r\n    return (\r\n        <div className=\"bg-white\">\r\n            <div>\r\n                {/* Mobile filter dialog */}\r\n                <Transition.Root show={mobileFiltersOpen} as={Fragment}>\r\n                    <Dialog as=\"div\" className=\"relative z-40 lg:hidden\" onClose={setMobileFiltersOpen}>\r\n                        <Transition.Child\r\n                            as={Fragment}\r\n                            enter=\"transition-opacity ease-linear duration-300\"\r\n                            enterFrom=\"opacity-0\"\r\n                            enterTo=\"opacity-100\"\r\n                            leave=\"transition-opacity ease-linear duration-300\"\r\n                            leaveFrom=\"opacity-100\"\r\n                            leaveTo=\"opacity-0\"\r\n                        >\r\n                            <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\r\n                        </Transition.Child>\r\n\r\n                        <div className=\"fixed inset-0 z-40 flex\">\r\n                            <Transition.Child\r\n                                as={Fragment}\r\n                                enter=\"transition ease-in-out duration-300 transform\"\r\n                                enterFrom=\"translate-x-full\"\r\n                                enterTo=\"translate-x-0\"\r\n                                leave=\"transition ease-in-out duration-300 transform\"\r\n                                leaveFrom=\"translate-x-0\"\r\n                                leaveTo=\"translate-x-full\"\r\n                            >\r\n                                <Dialog.Panel className=\"relative ml-auto flex h-full w-full max-w-xs flex-col overflow-y-auto bg-white py-4 pb-12 shadow-xl\">\r\n                                    <div className=\"flex items-center justify-between px-4\">\r\n                                        <h2 className=\"text-lg font-medium text-gray-900\">Filters</h2>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"-mr-2 flex h-10 w-10 items-center justify-center rounded-md bg-white p-2 text-gray-400\"\r\n                                            onClick={() => { setMobileFiltersOpen(false); }}\r\n                                        >\r\n                                            <span className=\"sr-only\">Close menu</span>\r\n                                            <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    {/* Filters */}\r\n                                    <form className=\"mt-4 border-t border-gray-200\">\r\n                                        <h3 className=\"sr-only\">Categories</h3>\r\n                                        <ul role=\"list\" className=\"px-2 py-3 font-medium text-gray-900\">\r\n                                            {subCategories.map((category) => (\r\n                                                <li key={category.name}>\r\n                                                    <a href={category.href} className=\"block px-2 py-3\">\r\n                                                        {category.name}\r\n                                                    </a>\r\n                                                </li>\r\n                                            ))}\r\n                                        </ul>\r\n\r\n                                        {filters.map((section) => (\r\n                                            <Disclosure as=\"div\" key={section.id} className=\"border-t border-gray-200 px-4 py-6\">\r\n                                                {({ open }) => (\r\n                                                    <>\r\n                                                        <h3 className=\"-mx-2 -my-3 flow-root\">\r\n                                                            <Disclosure.Button className=\"flex w-full items-center justify-between bg-white px-2 py-3 text-gray-400 hover:text-gray-500\">\r\n                                                                <span className=\"font-medium text-gray-900\">{section.name}</span>\r\n                                                                <span className=\"ml-6 flex items-center\">\r\n                                                                    {open ? (\r\n                                                                        <MinusIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                                                                    ) : (\r\n                                                                        <PlusIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                                                                    )}\r\n                                                                </span>\r\n                                                            </Disclosure.Button>\r\n                                                        </h3>\r\n                                                        <Disclosure.Panel className=\"pt-6\">\r\n                                                            <div className=\"space-y-6\">\r\n                                                                {section.options.map((option, optionIdx) => (\r\n                                                                    <div key={option.value} className=\"flex items-center\">\r\n                                                                        <input\r\n                                                                            id={`filter-mobile-${section.id}-${optionIdx}`}\r\n                                                                            name={`${section.id}[]`}\r\n                                                                            defaultValue={option.value}\r\n                                                                            type=\"checkbox\"\r\n                                                                            defaultChecked={option.checked}\r\n                                                                            className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\r\n                                                                        />\r\n                                                                        <label\r\n                                                                            htmlFor={`filter-mobile-${section.id}-${optionIdx}`}\r\n                                                                            className=\"ml-3 min-w-0 flex-1 text-gray-500\"\r\n                                                                        >\r\n                                                                            {option.label}\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </Disclosure.Panel>\r\n                                                    </>\r\n                                                )}\r\n                                            </Disclosure>\r\n                                        ))}\r\n                                    </form>\r\n                                </Dialog.Panel>\r\n                            </Transition.Child>\r\n                        </div>\r\n                    </Dialog>\r\n                </Transition.Root>\r\n\r\n                <main className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\r\n                    <div className=\"flex items-baseline justify-between border-b border-gray-200 pt-10 pb-6\">\r\n                        <h1 className=\"text-3xl font-semibold tracking-tight text-gray-900\">Предлагащи услуги</h1>\r\n\r\n                        <div className=\"flex items-center\">\r\n                            <Menu as=\"div\" className=\"relative inline-block text-left\">\r\n                                <div>\r\n                                    <Menu.Button className=\"group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900\">\r\n                                        Sort\r\n                                        <ChevronDownIcon\r\n                                            className=\"-mr-1 ml-1 h-5 w-5 flex-shrink-0 text-gray-400 group-hover:text-gray-500\"\r\n                                            aria-hidden=\"true\"\r\n                                        />\r\n                                    </Menu.Button>\r\n                                </div>\r\n\r\n                                <Transition\r\n                                    as={Fragment}\r\n                                    enter=\"transition ease-out duration-100\"\r\n                                    enterFrom=\"transform opacity-0 scale-95\"\r\n                                    enterTo=\"transform opacity-100 scale-100\"\r\n                                    leave=\"transition ease-in duration-75\"\r\n                                    leaveFrom=\"transform opacity-100 scale-100\"\r\n                                    leaveTo=\"transform opacity-0 scale-95\"\r\n                                >\r\n                                    <Menu.Items className=\"absolute right-0 z-10 mt-2 w-40 origin-top-right rounded-md bg-white shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none\">\r\n                                        <div className=\"py-1\">\r\n                                            {sortOptions.map((option) => (\r\n                                                <Menu.Item key={option.name}>\r\n                                                    {({ active }) => (\r\n                                                        <a\r\n                                                            href={option.href}\r\n                                                            className={classNames(\r\n                                                                option.current ? 'font-medium text-gray-900' : 'text-gray-500',\r\n                                                                active ? 'bg-gray-100' : '',\r\n                                                                'block px-4 py-2 text-sm'\r\n                                                            )}\r\n                                                        >\r\n                                                            {option.name}\r\n                                                        </a>\r\n                                                    )}\r\n                                                </Menu.Item>\r\n                                            ))}\r\n                                        </div>\r\n                                    </Menu.Items>\r\n                                </Transition>\r\n                            </Menu>\r\n\r\n                            <button type=\"button\" className=\"-m-2 ml-5 p-2 text-gray-400 hover:text-gray-500 sm:ml-7\">\r\n                                <span className=\"sr-only\">View grid</span>\r\n                                <Squares2X2Icon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"-m-2 ml-4 p-2 text-gray-400 hover:text-gray-500 sm:ml-6 lg:hidden\"\r\n                                onClick={() => { setMobileFiltersOpen(true); }}\r\n                            >\r\n                                <span className=\"sr-only\">Filters</span>\r\n                                <FunnelIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <section aria-labelledby=\"products-heading\" className=\"pt-6 pb-24\">\r\n                        <h2 id=\"products-heading\" className=\"sr-only\">\r\n                            Products\r\n                        </h2>\r\n\r\n                        <div className=\"grid grid-cols-1 gap-x-8 gap-y-10 lg:grid-cols-4\">\r\n                            {/* Filters */}\r\n                            <form className=\"hidden lg:block\">\r\n                                <h3 className=\"sr-only\">Categories</h3>\r\n                                <ul role=\"list\" className=\"space-y-4 border-b border-gray-200 pb-6 text-sm font-medium text-gray-900\">\r\n                                    {subCategories.map((category) => (\r\n                                        <li key={category.name}>\r\n                                            <a href={category.href}>{category.name}</a>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n\r\n                                {filters.map((section) => (\r\n                                    <Disclosure as=\"div\" key={section.id} className=\"border-b border-gray-200 py-6\">\r\n                                        {({ open }) => (\r\n                                            <>\r\n                                                <h3 className=\"-my-3 flow-root\">\r\n                                                    <Disclosure.Button className=\"flex w-full items-center justify-between bg-white py-3 text-sm text-gray-400 hover:text-gray-500\">\r\n                                                        <span className=\"font-medium text-gray-900\">{section.name}</span>\r\n                                                        <span className=\"ml-6 flex items-center\">\r\n                                                            {open ? (\r\n                                                                <MinusIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                                                            ) : (\r\n                                                                <PlusIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                                                            )}\r\n                                                        </span>\r\n                                                    </Disclosure.Button>\r\n                                                </h3>\r\n                                                <Disclosure.Panel className=\"pt-6\">\r\n                                                    <div className=\"space-y-4\">\r\n                                                        {section.options.map((option, optionIdx) => (\r\n                                                            <div key={option.value} className=\"flex items-center\">\r\n                                                                <input\r\n                                                                    id={`filter-${section.id}-${optionIdx}`}\r\n                                                                    name={`${section.id}[]`}\r\n                                                                    defaultValue={option.value}\r\n                                                                    type=\"checkbox\"\r\n                                                                    defaultChecked={option.checked}\r\n                                                                    className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\r\n                                                                />\r\n                                                                <label\r\n                                                                    htmlFor={`filter-${section.id}-${optionIdx}`}\r\n                                                                    className=\"ml-3 text-sm text-gray-600\"\r\n                                                                >\r\n                                                                    {option.label}\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </Disclosure.Panel>\r\n                                            </>\r\n                                        )}\r\n                                    </Disclosure>\r\n                                ))}\r\n                            </form>\r\n\r\n                            {/* Product grid */}\r\n                            <div className=\"lg:col-span-3\">\r\n                                <div className=\"px-4 max-w-4xl mx-auto space-y-5\">\r\n                                    {[0, 1, 2, 3, 4, 5].map((card) => (\r\n                                        <div key={card}>\r\n                                            <VendorCard />\r\n                                        </div>))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\utilityComponents\\Badge.tsx","messages":[{"ruleId":"react/prop-types","severity":2,"message":"'children' is missing in props validation","line":7,"column":40,"nodeType":"Property","messageId":"missingPropType","endLine":7,"endColumn":48},{"ruleId":"react/prop-types","severity":2,"message":"'styles' is missing in props validation","line":7,"column":50,"nodeType":"Property","messageId":"missingPropType","endLine":7,"endColumn":56},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":9,"column":141,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":9,"endColumn":147,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[348,354],"text":"(styles != null)"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[348,354],"text":"(styles ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[348,354],"text":"(Boolean(styles))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":9,"column":148,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":9,"endColumn":150,"suggestions":[{"messageId":"suggestNullish","fix":{"range":[355,357],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import classNames from \"../helpers/classNames\"\r\n\r\ninterface BadgeProps {\r\n    children: React.ReactNode\r\n    styles?: string\r\n}\r\nconst Badge: React.FC<BadgeProps> = ({ children, styles }) => {\r\n    return (\r\n        <span className={classNames(\"mr-1 last:mr-0 inline-flex items-center rounded-full bg-gray-100 px-2.5 py-0.5 text-xs text-gray-800\", styles || \"\")}>\r\n            {children}\r\n        </span>\r\n    )\r\n}\r\nexport default Badge;","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\utilityComponents\\ComboSelect.tsx","messages":[{"ruleId":"@typescript-eslint/ban-types","severity":2,"message":"Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":10,"column":42,"nodeType":"TSTypeLiteral","messageId":"bannedTypeMessage","endLine":10,"endColumn":44},{"ruleId":"@typescript-eslint/ban-types","severity":2,"message":"Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.","line":11,"column":81,"nodeType":"TSTypeLiteral","messageId":"bannedTypeMessage","endLine":11,"endColumn":83},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":15,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":15,"endColumn":95},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":28,"column":36,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":28,"endColumn":77}],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { useEffect, useRef, useState } from 'react'\r\nimport { CheckIcon, ChevronUpDownIcon } from '@heroicons/react/20/solid'\r\nimport { Combobox } from '@headlessui/react'\r\nimport Badge from './Badge';\r\nimport { type SelectionOption } from '../helpers/types';\r\nimport classNames from '../helpers/classNames';\r\n\r\ninterface ComboSelectBoxProps {\r\n    options: SelectionOption[];\r\n    selection: SelectionOption[] | Array<{}>;\r\n    handleChange: React.Dispatch<React.SetStateAction<SelectionOption[] | Array<{}>>>\r\n\r\n}\r\n\r\nexport default function ComboSelect({ options, selection, handleChange }: ComboSelectBoxProps) {\r\n    const [query, setQuery] = useState('')\r\n\r\n    const [value, setValue] = useState(\"\")\r\n\r\n\r\n    const filteredPeople =\r\n        query === ''\r\n            ? options\r\n            : options.filter((option) => {\r\n                return option.name.toLowerCase().includes(query.toLowerCase())\r\n            })\r\n\r\n    const scrollDropdownIntoView = (behavior: \"auto\" | \"smooth\" = \"auto\") => {\r\n        const el = comboRef.current;\r\n        if (el == null) return\r\n        const scrollGap = el.getBoundingClientRect().bottom - window.innerHeight\r\n        if (scrollGap > 0)\r\n            comboRef.current?.scrollIntoView({ block: \"end\", inline: \"nearest\", behavior })\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollDropdownIntoView();\r\n    }, [query])\r\n\r\n    const comboRef = useRef<null | HTMLUListElement>(null)\r\n\r\n\r\n    return (\r\n\r\n\r\n        <Combobox as=\"div\" value={selection} onChange={handleChange} multiple nullable className=\"sm:col-span-3 coverage-combo-box\">\r\n            {({ open }) => (\r\n                <>\r\n                    <div className=\"relative mb-2\">\r\n                        <Combobox.Input\r\n                            className=\"mt-1 block w-full rounded-md border-gray-300 text-gray-900 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\r\n                            onChange={(event) => { setQuery(event.target.value); }}\r\n                            onBlur={() => { setValue(\"\"); }}\r\n                            displayValue={() => value}\r\n                            onFocus={() => { setQuery(\"\"); }}\r\n                        />\r\n                        <Combobox.Button onClick={() => setTimeout(() => {\r\n                            scrollDropdownIntoView(\"smooth\")\r\n                        }, 200)} className=\"absolute inset-y-0 right-0 flex items-center rounded-r-md px-2 focus:outline-none\">\r\n                            <ChevronUpDownIcon className=\"h-5 w-5 text-gray-500\" aria-hidden=\"true\" />\r\n                        </Combobox.Button>\r\n                        {filteredPeople.length > 0 && (\r\n                            <Combobox.Options ref={comboRef} className=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\r\n                                {filteredPeople.map((person) => (\r\n                                    <Combobox.Option\r\n                                        key={person.id}\r\n                                        value={person}\r\n                                        className={({ active }) =>\r\n                                            classNames(\r\n                                                'relative cursor-default select-none py-2 pl-3 pr-9',\r\n                                                active ? 'bg-indigo-600 text-white' : 'text-gray-900'\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        {({ active, selected }) => (\r\n                                            <>\r\n                                                <span className={classNames('block truncate', selected ? 'font-semibold' : \"\")}>{person.name}</span>\r\n                                                {selected && (\r\n                                                    <span\r\n                                                        className={classNames(\r\n                                                            'absolute inset-y-0 right-0 flex items-center pr-4',\r\n                                                            active ? 'text-white' : 'text-indigo-600'\r\n                                                        )}\r\n                                                    >\r\n                                                        <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                                                    </span>\r\n                                                )}\r\n                                            </>\r\n                                        )}\r\n                                    </Combobox.Option>\r\n                                ))}\r\n                            </Combobox.Options>\r\n                        )}\r\n                    </div>\r\n                    <Combobox.Label className=\"flex flex-wrap line-clamp-3 leading-relaxed\">\r\n                        {selection.map((person) => \"name\" in person && <Badge key={person.id} styles=\"whitespace-nowrap\">{person?.name}</Badge>)}\r\n                    </Combobox.Label>\r\n                </>\r\n            )\r\n            }\r\n        </Combobox >\r\n    )\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\utilityComponents\\ContextMenu.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":5,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":5,"endColumn":41},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":9,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":9,"endColumn":38}],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Fragment } from 'react'\r\nimport { Menu, Transition } from '@headlessui/react'\r\nimport { EllipsisVerticalIcon } from '@heroicons/react/20/solid'\r\n\r\nfunction classNames(...classes:string[]) {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport default function ContextMenu() {\r\n  return (\r\n    <Menu as=\"div\" className=\"hidden md:flex relative text-left items-center justify-center w-min\">\r\n      <div>\r\n        <Menu.Button className=\"flex items-center rounded-full  text-gray-600 hover:text-gray-600 focus:outline-none \">\r\n          <span className=\"sr-only\">Open options</span>\r\n          <EllipsisVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n        </Menu.Button>\r\n      </div>\r\n\r\n      <Transition\r\n        as={Fragment}\r\n        enter=\"transition ease-out duration-100\"\r\n        enterFrom=\"transform opacity-0 scale-95\"\r\n        enterTo=\"transform opacity-100 scale-100\"\r\n        leave=\"transition ease-in duration-75\"\r\n        leaveFrom=\"transform opacity-100 scale-100\"\r\n        leaveTo=\"transform opacity-0 scale-95\"\r\n      >\r\n        <Menu.Items className=\"z-20  absolute right-0 top-full mt-2 w-56 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\r\n          <div className=\"py-1\">\r\n            <Menu.Item>\r\n              {({ active }) => (\r\n                <a\r\n                  href=\"#\"\r\n                  className={classNames(\r\n                    active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\r\n                    'block px-4 py-2 text-sm'\r\n                  )}\r\n                >\r\n                  Account settings\r\n                </a>\r\n              )}\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              {({ active }) => (\r\n                <a\r\n                  href=\"#\"\r\n                  className={classNames(\r\n                    active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\r\n                    'block px-4 py-2 text-sm'\r\n                  )}\r\n                >\r\n                  Support\r\n                </a>\r\n              )}\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              {({ active }) => (\r\n                <a\r\n                  href=\"#\"\r\n                  className={classNames(\r\n                    active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\r\n                    'block px-4 py-2 text-sm'\r\n                  )}\r\n                >\r\n                  License\r\n                </a>\r\n              )}\r\n            </Menu.Item>\r\n            <form method=\"POST\" action=\"#\">\r\n              <Menu.Item>\r\n                {({ active }) => (\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={classNames(\r\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\r\n                      'block w-full px-4 py-2 text-left text-sm'\r\n                    )}\r\n                  >\r\n                    Sign out\r\n                  </button>\r\n                )}\r\n              </Menu.Item>\r\n            </form>\r\n          </div>\r\n        </Menu.Items>\r\n      </Transition>\r\n    </Menu>\r\n  )\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\utilityComponents\\Filters.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ArrowLongDownIcon' is defined but never used.","line":4,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":27},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":56,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":56,"endColumn":42},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":60,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":60,"endColumn":34},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected string value in conditional. An explicit empty string check is required.","line":249,"column":87,"nodeType":"Literal","messageId":"conditionErrorString","endLine":249,"endColumn":113,"suggestions":[{"messageId":"conditionFixCompareStringLength","fix":{"range":[11483,11509],"text":"(\"max-h-64 overflow-y-auto\".length > 0)"},"desc":"Change condition to check string's length (`value.length !== 0`)"},{"messageId":"conditionFixCompareEmptyString","fix":{"range":[11483,11509],"text":"(\"max-h-64 overflow-y-auto\" !== \"\")"},"desc":"Change condition to check for empty string (`value !== \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[11483,11509],"text":"(Boolean(\"max-h-64 overflow-y-auto\"))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]}],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { Fragment, useState } from 'react'\r\nimport { Dialog, Disclosure, Menu, Popover, Transition } from '@headlessui/react'\r\nimport { ArrowLongUpIcon, XMarkIcon } from '@heroicons/react/24/outline'\r\nimport { ArrowLongDownIcon, ChevronDownIcon } from '@heroicons/react/20/solid'\r\nimport DatePicker from '../structure/dashboard/orders/orderschedule/DatePicker'\r\n\r\nconst sortOptions = [\r\n  { name: 'Дата', href: '#', current: true },\r\n  { name: 'Име на клиент', href: '#', current: false },\r\n  { name: 'Статус', href: '#', current: false },\r\n]\r\nconst filters = [\r\n  {\r\n    id: 'date',\r\n    name: 'Период',\r\n    options: [\r\n\r\n    ],\r\n  },\r\n  {\r\n    id: 'name',\r\n    name: 'Име',\r\n    options: [\r\n      { value: 'GeorgiIvanov', label: 'Георги Иванов', checked: false },\r\n      { value: 'IlianIliev', label: 'Илиян Илиев', checked: false },\r\n      { value: 'VladimirGotsev', label: 'Владимир Гоцев', checked: true },\r\n    ],\r\n  },\r\n  {\r\n    id: 'type',\r\n    name: 'Тип посещение',\r\n    options: [\r\n      { value: 'onetime', label: 'Еднократно', checked: false },\r\n      { value: 'subscription', label: 'Абонамент', checked: false },\r\n    ],\r\n  },\r\n  {\r\n    id: 'neighbourhood',\r\n    name: 'Квартал',\r\n    options: [\r\n      { value: 's', label: 'Кръстова Вада', checked: false },\r\n      { value: 'm', label: 'Витоша', checked: false },\r\n      { value: 'l', label: 'Младост 4', checked: false },\r\n      { value: 'l', label: 'Надежда', checked: false },\r\n      { value: 'l', label: 'Изток', checked: false },\r\n      { value: 'l', label: 'Полигона', checked: false },\r\n      { value: 'l', label: 'Дружба', checked: false },\r\n      { value: 'l', label: 'Лозенец', checked: false },\r\n      { value: 'l', label: 'Манастирски Ливади', checked: false },\r\n      { value: 'l', label: 'Малинова Долина', checked: false },\r\n    ],\r\n  },\r\n]\r\n// const activeFilters = [{ value: 'Велизар Стоянов', label: 'Велизар Стоянов' }]\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport default function Filters() {\r\n  const [open, setOpen] = useState(false)\r\n\r\n  return (\r\n    <div className=\"bg-white\">\r\n      {/* Mobile filter dialog */}\r\n      <Transition.Root show={open} as={Fragment}>\r\n        <Dialog as=\"div\" className=\"relative z-40 sm:hidden\" onClose={setOpen}>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"transition-opacity ease-linear duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"transition-opacity ease-linear duration-300\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\r\n          </Transition.Child>\r\n\r\n          <div className=\"fixed inset-0 z-40 flex\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"transition ease-in-out duration-300 transform\"\r\n              enterFrom=\"translate-x-full\"\r\n              enterTo=\"translate-x-0\"\r\n              leave=\"transition ease-in-out duration-300 transform\"\r\n              leaveFrom=\"translate-x-0\"\r\n              leaveTo=\"translate-x-full\"\r\n            >\r\n              <Dialog.Panel className=\"relative ml-auto flex h-full w-full max-w-xs flex-col overflow-y-auto bg-white py-4 pb-12 shadow-xl\">\r\n                <div className=\"flex items-center justify-between px-4\">\r\n                  <h2 className=\"text-lg font-medium text-gray-900\">Filters</h2>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"-mr-2 flex h-10 w-10 items-center justify-center rounded-md bg-white p-2 text-gray-400\"\r\n                    onClick={() => { setOpen(false); }}\r\n                  >\r\n                    <span className=\"sr-only\">Close menu</span>\r\n                    <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Filters */}\r\n                <form className=\"mt-4\">\r\n                  {filters.map((section) => (\r\n                    <Disclosure as=\"div\" key={section.name} className=\"border-t border-gray-200 px-4 py-6\">\r\n                      {({ open }) => (\r\n                        <>\r\n                          <h3 className=\"-mx-2 -my-3 flow-root\">\r\n                            <Disclosure.Button className=\"flex w-full items-center justify-between bg-white px-2 py-3 text-sm text-gray-400\">\r\n                              <span className=\"font-medium text-gray-900\">{section.name}</span>\r\n                              <span className=\"ml-6 flex items-center\">\r\n                                <ChevronDownIcon\r\n                                  className={classNames(open ? '-rotate-180' : 'rotate-0', 'h-5 w-5 transform')}\r\n                                  aria-hidden=\"true\"\r\n                                />\r\n                              </span>\r\n                            </Disclosure.Button>\r\n                          </h3>\r\n                          <Disclosure.Panel className=\"pt-6\">\r\n                            {({ close }) => (\r\n\r\n                              <div className=\"space-y-6\">\r\n                                {section.options.map((option, optionIdx) => (\r\n                                  <div key={option.value} className=\"flex items-center\">\r\n                                    <input\r\n                                      id={`filter-mobile-${section.id}-${optionIdx}`}\r\n                                      name={`${section.id}[]`}\r\n                                      defaultValue={option.value}\r\n                                      type=\"checkbox\"\r\n                                      defaultChecked={option.checked}\r\n                                      className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\r\n                                    />\r\n                                    <label\r\n                                      htmlFor={`filter-mobile-${section.id}-${optionIdx}`}\r\n                                      className=\"ml-3 text-sm text-gray-500\"\r\n                                    >\r\n                                      {option.label}\r\n                                    </label>\r\n                                  </div>\r\n                                ))}\r\n                                {section.id === 'date' && <DatePicker close={close} />}\r\n                              </div>\r\n                            )}\r\n                          </Disclosure.Panel>\r\n                        </>\r\n                      )}\r\n                    </Disclosure>\r\n                  ))}\r\n                </form>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n\r\n\r\n      {/* Filters */}\r\n      <section aria-labelledby=\"filter-heading\">\r\n        <h2 id=\"filter-heading\" className=\"sr-only\">\r\n          Filters\r\n        </h2>\r\n\r\n        <div className=\"border-b border-gray-200 bg-white pb-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <Menu as=\"div\" className=\"relative inline-block text-left\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Menu.Button className=\"group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900\">\r\n                  {sortOptions.find(sortOption => sortOption.current)?.name}\r\n                  <ChevronDownIcon\r\n                    className=\"-mr-1 ml-1 h-5 w-5 flex-shrink-0 text-gray-400 group-hover:text-gray-500\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n\r\n                </Menu.Button>\r\n                <div className=\"group h-full flex px-2 justify-center text-sm font-medium cursor-pointer items-center\">\r\n                  <p className=\"text-gray-700\">Възх</p>\r\n                  <ArrowLongUpIcon className=\"h-4 w-4 pt-0.5 flex-shrink-0 text-gray-500 group-hover:text-gray-800\" />\r\n                </div>\r\n              </div>\r\n              <Transition\r\n                as={Fragment}\r\n                enter=\"transition ease-out duration-100\"\r\n                enterFrom=\"transform opacity-0 scale-95\"\r\n                enterTo=\"transform opacity-100 scale-100\"\r\n                leave=\"transition ease-in duration-75\"\r\n                leaveFrom=\"transform opacity-100 scale-100\"\r\n                leaveTo=\"transform opacity-0 scale-95\"\r\n              >\r\n                <Menu.Items className=\"absolute left-0 z-20 mt-2 w-40 origin-top-left rounded-md bg-white shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none\">\r\n                  <div className=\"py-1\">\r\n                    {sortOptions.map((option) => (\r\n                      <Menu.Item key={option.name}>\r\n                        {({ active }) => (\r\n                          <a\r\n                            href={option.href}\r\n                            className={classNames(\r\n                              option.current ? 'font-medium text-gray-900' : 'text-gray-500',\r\n                              active ? 'bg-gray-100' : '',\r\n                              'block px-4 py-2 text-sm'\r\n                            )}\r\n                          >\r\n                            {option.name}\r\n                          </a>\r\n                        )}\r\n                      </Menu.Item>\r\n                    ))}\r\n                  </div>\r\n                </Menu.Items>\r\n              </Transition>\r\n            </Menu>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"inline-block text-sm font-medium text-gray-700 hover:text-gray-900 sm:hidden\"\r\n              onClick={() => { setOpen(true); }}\r\n            >\r\n              Filters\r\n            </button>\r\n\r\n            <div className=\"hidden sm:block\">\r\n              <div className=\"flow-root\">\r\n                <Popover.Group className=\"-mx-4 flex items-center divide-x divide-gray-200\">\r\n                  {filters.map((section, sectionIdx) => (\r\n                    <Popover key={section.name} className=\"relative inline-block px-4 text-left\">\r\n                      <Popover.Button className=\"group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900\">\r\n                        <span>{section.name}</span>\r\n                        {/* TODO: add here number of selected filters as additional tag */}\r\n                        {/* {numSelected > 0 ? (\r\n                          <span className=\"ml-1.5 rounded bg-gray-200 py-0.5 px-1.5 text-xs font-semibold tabular-nums text-gray-700\">\r\n                            1\r\n                          </span>\r\n                        ) : null} */}\r\n                        <ChevronDownIcon\r\n                          className=\"-mr-1 ml-1 h-5 w-5 flex-shrink-0 text-gray-400 group-hover:text-gray-500\"\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      </Popover.Button>\r\n\r\n                      <Transition\r\n                        as={Fragment}\r\n                        enter=\"transition ease-out duration-100\"\r\n                        enterFrom=\"transform opacity-0 scale-95\"\r\n                        enterTo=\"transform opacity-100 scale-100\"\r\n                        leave=\"transition ease-in duration-75\"\r\n                        leaveFrom=\"transform opacity-100 scale-100\"\r\n                        leaveTo=\"transform opacity-0 scale-95\"\r\n                      >\r\n                        <Popover.Panel className={classNames(section.id !== 'date' && \"max-h-64 overflow-y-auto\" || \"\", \"border absolute right-0 z-20 mt-2 origin-top-right rounded-md bg-white p-4 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\")}>\r\n                          {({ close }) => (\r\n\r\n                            <form className=\"space-y-4 relative\">\r\n                              <>\r\n                                {section.id !== 'date' && section.options.map((option, optionIdx) => (\r\n                                  <div key={option.value} className=\"flex items-center\">\r\n                                    <input\r\n                                      id={`filter-${section.id}-${optionIdx}`}\r\n                                      name={`${section.id}[]`}\r\n                                      defaultValue={option.value}\r\n                                      type=\"checkbox\"\r\n                                      defaultChecked={option.checked}\r\n                                      className=\"h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500\"\r\n                                    />\r\n                                    <label\r\n                                      htmlFor={`filter-${section.id}-${optionIdx}`}\r\n                                      className=\"ml-3 whitespace-nowrap pr-6 text-sm font-medium text-gray-900\"\r\n                                    >\r\n                                      {option.label}\r\n                                    </label>\r\n                                  </div>\r\n                                ))}\r\n                                {section.id === 'date' && <DatePicker close={close} />}\r\n                              </>\r\n                            </form>\r\n                          )}\r\n                        </Popover.Panel>\r\n                      </Transition>\r\n                    </Popover>\r\n                  ))}\r\n                </Popover.Group>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Active filters */}\r\n        {/* <div>\r\n          <div className=\"mx-auto max-w-7xl py-3 sm:flex sm:items-center \">\r\n              <div className=\"-m-1 flex flex-wrap items-center\">\r\n                {activeFilters.map((activeFilter) => (\r\n                  <span\r\n                    key={activeFilter.value}\r\n                    className=\"m-1 inline-flex items-center rounded-full border border-gray-200 bg-white py-1.5 pl-3 pr-2 text-sm font-medium text-gray-900\"\r\n                  >\r\n                    <span>{activeFilter.label}</span>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"ml-1 inline-flex h-4 w-4 flex-shrink-0 rounded-full p-1 text-gray-400 hover:bg-gray-200 hover:text-gray-500\"\r\n                    >\r\n                      <span className=\"sr-only\">Remove filter for {activeFilter.label}</span>\r\n                      <svg className=\"h-2 w-2\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 8 8\">\r\n                        <path strokeLinecap=\"round\" strokeWidth=\"1.5\" d=\"M1 1l6 6m0-6L1 7\" />\r\n                      </svg>\r\n                    </button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n          </div>\r\n        </div> */}\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\utilityComponents\\InputField.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":13,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":13,"endColumn":121},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable boolean value in conditional. Please handle the nullish case explicitly.","line":15,"column":37,"nodeType":"Identifier","messageId":"conditionErrorNullableBoolean","endLine":15,"endColumn":44,"suggestions":[{"messageId":"conditionFixDefaultFalse","fix":{"range":[419,426],"text":"(include ?? false)"},"desc":"Explicitly treat nullish value the same as false (`value ?? false`)"},{"messageId":"conditionFixCompareFalse","fix":{"range":[418,426],"text":"(include === false)"},"desc":"Change condition to check if false (`value === false`)"}]}],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import classNames from \"../helpers/classNames\";\r\n\r\ninterface InputFieldProps {\r\n    label: string;\r\n    name: string;\r\n    id: string;\r\n    autoComplete?: string;\r\n    className: string;\r\n    defaultValue?: string;\r\n    include?: boolean;\r\n}\r\n\r\nexport default function InputField({ label, name, id, autoComplete, className, defaultValue, include }: InputFieldProps) {\r\n    return (\r\n        <div className={classNames(!include && (typeof include !== \"undefined\") ? \"hidden\" : \"\", className)}>\r\n            <label htmlFor={name} className=\"block text-sm font-normal text-gray-900\">\r\n                {label}\r\n            </label>\r\n            <input\r\n                \r\n                type=\"text\"\r\n                name={name}\r\n                id={id}\r\n                defaultValue={defaultValue}\r\n                autoComplete={autoComplete}\r\n                className=\" mt-1 block w-full rounded-md border-gray-300 text-gray-900 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\r\n            />\r\n\r\n        </div>\r\n    )\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\utilityComponents\\RadioGroup.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":15,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":15,"endColumn":84},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":17,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":17,"endColumn":64},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":22,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"missingReturnType","endLine":22,"endColumn":53}],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { type SelectionOption } from \"../helpers/types\";\r\n\r\ninterface RadioGroupProps {\r\n  options: SelectionOption[];\r\n  activeId: string | undefined;\r\n  onClick: (id: string) => void;\r\n}\r\n\r\n// interface UserTypeSelectionProps {\r\n//   options: SelectionOption[];\r\n//   styles?: string;\r\n// }\r\n\r\n\r\nexport default function RadioGroup({ options, activeId, onClick }: RadioGroupProps) {\r\n\r\n  const onSelect = (e: React.SyntheticEvent<HTMLDivElement>) => {\r\n    (e.currentTarget.querySelector(\"input\") as HTMLInputElement).focus();\r\n    onClick(e.currentTarget.dataset.id as string)\r\n  }\r\n\r\n  const stopPrapagate = (e: React.SyntheticEvent) => {\r\n    e.stopPropagation()\r\n  }\r\n\r\n  return (\r\n    <fieldset>\r\n      <legend className=\"sr-only\">Plan</legend>\r\n      <div className=\"space-y-5 max-w-md mt-3\">\r\n        {options.map((option) => (\r\n          <div key={option.id} data-id={option.id} onClick={onSelect} className=\"relative flex items-start cursor-pointer\">\r\n            <div className=\"flex h-5 items-center\">\r\n              <input\r\n                id={option.id}\r\n                checked={option.id === activeId}\r\n                onChange={stopPrapagate}\r\n                aria-describedby={`${option.id}-description`}\r\n                name=\"option\"\r\n                type=\"radio\"\r\n                className=\"h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-500 cursor-pointer transition-all duration-300\"\r\n              />\r\n            </div>\r\n            <div className=\"ml-3\">\r\n              <label htmlFor={option.id} onClick={stopPrapagate} className=\"text-gray-800 cursor-pointer\">\r\n                {option.name}\r\n              </label>\r\n              <p id={`${option.id}-description`} className=\"text-gray-500 font-light text-sm mt-1.5 cursor-pointer\">\r\n                {option.description}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </fieldset>\r\n  )\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\utilityComponents\\RangeSlider.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Slider' is defined but never used.","line":2,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":11},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'SliderTrack' is defined but never used.","line":3,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":16},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'SliderFilledTrack' is defined but never used.","line":4,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":22},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'SliderThumb' is defined but never used.","line":5,"column":5,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":16}],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\r\n    Slider,\r\n    SliderTrack,\r\n    SliderFilledTrack,\r\n    SliderThumb,\r\n  } from \"@chakra-ui/react/\"","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\utilityComponents\\RatingCard.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":48,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":48,"endColumn":42},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":52,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":52,"endColumn":37}],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { StarIcon } from \"@heroicons/react/20/solid\";\r\n\r\nconst reviews = {\r\n  average: 4,\r\n  totalCount: 52,\r\n  counts: [\r\n    { rating: 5, count: 40 },\r\n    { rating: 4, count: 4 },\r\n    { rating: 3, count: 3 },\r\n    { rating: 2, count: 4 },\r\n    { rating: 1, count: 1 },\r\n  ],\r\n  featured: [\r\n    {\r\n      id: 1,\r\n      rating: 5,\r\n      content: `\r\n        <p>This is the bag of my dreams. I took it on my last vacation and was able to fit an absurd amount of snacks for the many long and hungry flights.</p>\r\n      `,\r\n      author: \"Emily Selman\",\r\n      avatarSrc:\r\n        \"https://images.unsplash.com/photo-1502685104226-ee32379fefbe?ixlib=rb-=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=8&w=256&h=256&q=80\",\r\n    },\r\n    {\r\n      id: 2,\r\n      rating: 5,\r\n      content: `\r\n        <p>This is the bag of my dreams. I took it on my last vacation and was able to fit an absurd amount of snacks for the many long and hungry flights.</p>\r\n      `,\r\n      author: \"Emily Selman\",\r\n      avatarSrc:\r\n        \"https://images.unsplash.com/photo-1502685104226-ee32379fefbe?ixlib=rb-=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=8&w=256&h=256&q=80\",\r\n    },\r\n    {\r\n      id: 3,\r\n      rating: 5,\r\n      content: `\r\n        <p>This is the bag of my dreams. I took it on my last vacation and was able to fit an absurd amount of snacks for the many long and hungry flights.</p>\r\n      `,\r\n      author: \"Emily Selman\",\r\n      avatarSrc:\r\n        \"https://images.unsplash.com/photo-1502685104226-ee32379fefbe?ixlib=rb-=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=8&w=256&h=256&q=80\",\r\n    },\r\n    // More reviews...\r\n  ],\r\n};\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nexport default function RatingCard() {\r\n  return (\r\n    <div className=\"mx-auto\">\r\n      <div className=\"\">\r\n        <div className=\"mt-3 flex items-center\">\r\n          <div>\r\n            <div className=\"flex items-center\">\r\n              {[0, 1, 2, 3, 4].map((rating) => (\r\n                <StarIcon\r\n                  key={rating}\r\n                  className={classNames(\r\n                    reviews.average > rating\r\n                      ? \"text-yellow-400\"\r\n                      : \"text-gray-300\",\r\n                    \"flex-shrink-0 h-5 w-5\"\r\n                  )}\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ))}\r\n            </div>\r\n            <p className=\"sr-only\">{reviews.average}от 5 звезди</p>\r\n          </div>\r\n          <p className=\"ml-2 text-sm text-gray-900\">\r\n            Базирано на {reviews.totalCount} ревюта\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"sr-only\">Review data</h3>\r\n\r\n          <dl className=\"space-y-3\">\r\n            {reviews.counts.map((count) => (\r\n              <div key={count.rating} className=\"flex items-center text-sm\">\r\n                <dt className=\"flex flex-1 items-center\">\r\n                  <p className=\"w-3 font-medium text-gray-900\">\r\n                    {count.rating}\r\n                    <span className=\"sr-only\"> star reviews</span>\r\n                  </p>\r\n                  <div\r\n                    aria-hidden=\"true\"\r\n                    className=\"ml-1 flex flex-1 items-center\"\r\n                  >\r\n                    <StarIcon\r\n                      className={classNames(\r\n                        count.count > 0 ? \"text-yellow-400\" : \"text-gray-300\",\r\n                        \"flex-shrink-0 h-5 w-5\"\r\n                      )}\r\n                      aria-hidden=\"true\"\r\n                    />\r\n\r\n                    <div className=\"relative ml-3 flex-1\">\r\n                      <div className=\"h-3 rounded-full border border-gray-200 bg-gray-100\" />\r\n                      {count.count > 0 ? (\r\n                        <div\r\n                          className=\"absolute inset-y-0 rounded-full border border-yellow-400 bg-yellow-400\"\r\n                          style={{\r\n                            width: `calc(${count.count} / ${reviews.totalCount} * 100%)`,\r\n                          }}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </dt>\r\n                <dd className=\"ml-3 w-10 text-right text-sm tabular-nums text-gray-900\">\r\n                  {Math.round((count.count / reviews.totalCount) * 100)}%\r\n                </dd>\r\n              </div>\r\n            ))}\r\n          </dl>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-16\">\r\n        <h3 className=\"sr-only\">Recent reviews</h3>\r\n\r\n        <div className=\"flow-root\">\r\n          <div className=\"-my-12 divide-y divide-gray-200\">\r\n            {reviews.featured.map((review) => (\r\n              <div key={review.id} className=\"py-12\">\r\n                <div className=\"flex items-center\">\r\n                  <img\r\n                    src={review.avatarSrc}\r\n                    alt={`${review.author}.`}\r\n                    className=\"h-12 w-12 rounded-full\"\r\n                  />\r\n                  <div className=\"ml-4\">\r\n                    <h4 className=\"text-sm font-bold text-gray-900\">\r\n                      {review.author}\r\n                    </h4>\r\n                    <div className=\"mt-1 flex items-center\">\r\n                      {[0, 1, 2, 3, 4].map((rating) => (\r\n                        <StarIcon\r\n                          key={rating}\r\n                          className={classNames(\r\n                            review.rating > rating\r\n                              ? \"text-yellow-400\"\r\n                              : \"text-gray-300\",\r\n                            \"h-5 w-5 flex-shrink-0\"\r\n                          )}\r\n                          aria-hidden=\"true\"\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                    <p className=\"sr-only\">{review.rating} out of 5 stars</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  className=\"mt-4 space-y-6 text-base italic text-gray-600\"\r\n                  dangerouslySetInnerHTML={{ __html: review.content }}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\utilityComponents\\ScrollIntoView.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":7,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":7,"endColumn":78}],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { useEffect, useRef } from \"react\";\r\n\r\ninterface ScrollIntoViewProps {\r\n    messageAdded: number\r\n}\r\n\r\nexport default function ScrollIntoView({ messageAdded }: ScrollIntoViewProps) {\r\n    const ref = useRef<null | HTMLDivElement>(null);\r\n    useEffect(() => {\r\n        if ('scrollRestoration' in history) {\r\n            // Back off, browser, I got this...\r\n            history.scrollRestoration = 'manual';\r\n        }\r\n        if (ref.current != null) {\r\n            setTimeout(() => {\r\n                ref.current?.scrollIntoView({ block: \"nearest\", behavior:\"smooth\" })\r\n            }, 100);\r\n        }\r\n    }, [messageAdded]);\r\n    return <div ref={ref} />\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\utilityComponents\\TabsMenu.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":3,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":3,"endColumn":42},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":16,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":16,"endColumn":70}],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { useState } from \"react\";\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\ninterface TabsMenuProps {\r\n  tabs: Array<{\r\n    id: number;\r\n    name: string;\r\n    href: string;\r\n  }>;\r\n  defaultTab: string;\r\n}\r\n\r\nexport default function TabsMenu({ tabs, defaultTab }: TabsMenuProps) {\r\n\r\n  const [current, setCurrent] = useState(defaultTab);\r\n\r\n  // const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n  //   let id = tabs.find(tab => tab.name === e.target.value)?.id;\r\n  //   id && setCurrent(id)\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"border-b border-gray-200\">\r\n        <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\r\n          {tabs.map((tab) => (\r\n            <a\r\n              key={tab.id}\r\n              href={tab.href}\r\n              onClick={() => { setCurrent(tab.name); }}\r\n              className={classNames(\r\n                tab.name === current\r\n                  ? 'border-indigo-500 text-indigo-600'\r\n                  : 'border-transparent text-gray-500 hover:text-gray-500 hover:border-gray-700',\r\n                'whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm cursor-pointer'\r\n              )}\r\n              aria-current={tab.name === current ? 'page' : undefined}\r\n            >\r\n              {tab.name}\r\n            </a>\r\n          ))}\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\utilityComponents\\TagSelectGroup.tsx","messages":[{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":3,"column":1,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":3,"endColumn":42},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":14,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":14,"endColumn":106},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected nullable string value in conditional. Please handle the nullish/empty cases explicitly.","line":18,"column":102,"nodeType":"Identifier","messageId":"conditionErrorNullableString","endLine":18,"endColumn":108,"suggestions":[{"messageId":"conditionFixCompareNullish","fix":{"range":[572,578],"text":"(styles != null)"},"desc":"Change condition to check for null/undefined (`value != null`)"},{"messageId":"conditionFixDefaultEmptyString","fix":{"range":[572,578],"text":"(styles ?? \"\")"},"desc":"Explicitly treat nullish value the same as an empty string (`value ?? \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[572,578],"text":"(Boolean(styles))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]},{"ruleId":"@typescript-eslint/prefer-nullish-coalescing","severity":2,"message":"Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","line":18,"column":109,"nodeType":"Punctuator","messageId":"preferNullishOverOr","endLine":18,"endColumn":111,"suggestions":[{"messageId":"suggestNullish","fix":{"range":[579,581],"text":"??"},"desc":"Fix to nullish coalescing operator (`??`)."}]}],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { type SelectionOption } from \"../helpers/types\";\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\ninterface UserTypeSelectionProps {\r\n  activeId: string | Set<string> | undefined;\r\n  onClick: React.MouseEventHandler<HTMLDivElement>;\r\n  options: SelectionOption[];\r\n  styles?: string;\r\n}\r\n\r\nexport default function UserTypeSelection({ activeId, onClick, options, styles }: UserTypeSelectionProps) {\r\n\r\n\r\n  return (\r\n    <div className={classNames(\"sm:col-span-4 flex flex-wrap gap-3 whitespace-nowrap max-w-md mt-3\", styles || \"\")}>\r\n      {options.map((option) => (\r\n        <div\r\n          key={option.id}\r\n          data-id={option.id}\r\n          onClick={onClick}\r\n          className={classNames(\r\n            (activeId === option.id || (activeId instanceof Set && activeId.has(option.id)))\r\n              ? 'bg-sky-200 border-transparent text-sky-700 bg-'\r\n              : 'bg-white border-gray-200 text-gray-600 hover:bg-sky-50',\r\n            'border rounded-full py-3 px-5 flex justify-center text-sm gap-1 cursor-pointer shadow-order flex-1 '\r\n          )\r\n          }\r\n        >\r\n          <span className=\"text-base\">{option.name}</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\utilityComponents\\TransitionWrapper.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ChevronLeftIcon' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ChevronRightIcon' is defined but never used.","line":2,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":43},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Fragment' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'useState' is defined but never used.","line":3,"column":20,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":28},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":12,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":12,"endColumn":98},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected string value in conditional. An explicit empty string check is required.","line":33,"column":335,"nodeType":"Literal","messageId":"conditionErrorString","endLine":33,"endColumn":343,"suggestions":[{"messageId":"conditionFixCompareStringLength","fix":{"range":[1581,1589],"text":"(\"hidden\".length > 0)"},"desc":"Change condition to check string's length (`value.length !== 0`)"},{"messageId":"conditionFixCompareEmptyString","fix":{"range":[1581,1589],"text":"(\"hidden\" !== \"\")"},"desc":"Change condition to check for empty string (`value !== \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[1581,1589],"text":"(Boolean(\"hidden\"))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]}],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { Transition } from '@headlessui/react'\r\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';\r\nimport { Fragment, useState } from 'react'\r\nimport classNames from '../helpers/classNames';\r\n\r\ninterface TransitionWrapperProps {\r\n    children: React.ReactNode;\r\n    visible: boolean;\r\n    btnNext?: () => void\r\n}\r\n\r\nexport default function TransitionWrapper({ children, visible, btnNext }: TransitionWrapperProps) {\r\n\r\n    return (\r\n        <Transition\r\n            className=\"overflow-x-clip px-0.5 mx-auto absolute w-full left-0 top-0\"\r\n            show={visible}\r\n        >\r\n            <Transition.Child\r\n                enter=\"transition duration-400 delay-300\"\r\n                enterFrom=\"translate-x-10 opacity-0\"\r\n                enterTo=\"opacity-100 translate-x-0\"\r\n                leave=\"transition duration-300\"\r\n                leaveFrom=\"translate-x-0 opacity-100\"\r\n                leaveTo=\"-translate-x-10 opacity-0\"\r\n            >\r\n                {children}\r\n                <div className=\"flex justify-between mt-5\">\r\n                    {/* <button className=\"ml-2\">Назад</button> */}\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={btnNext}\r\n                        className={classNames(\"inline-flex justify-center w-full max-w-sm sm:max-w-xs items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\", (btnNext == null) && \"hidden\" || \"\")}\r\n                    >\r\n                        Напред\r\n                    </button>\r\n                </div>\r\n            </Transition.Child>\r\n        </Transition>\r\n    )\r\n}","usedDeprecatedRules":[]},{"filePath":"C:\\Projects\\homecare-fe-v2\\src\\utilityComponents\\TransitionWrapperBuildUp.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ChevronLeftIcon' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'ChevronRightIcon' is defined but never used.","line":2,"column":27,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":43},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'Fragment' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":18},{"ruleId":"@typescript-eslint/no-unused-vars","severity":2,"message":"'useState' is defined but never used.","line":3,"column":20,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":28},{"ruleId":"@typescript-eslint/explicit-function-return-type","severity":2,"message":"Missing return type on function.","line":12,"column":16,"nodeType":"FunctionDeclaration","messageId":"missingReturnType","endLine":12,"endColumn":105},{"ruleId":"@typescript-eslint/strict-boolean-expressions","severity":2,"message":"Unexpected string value in conditional. An explicit empty string check is required.","line":33,"column":335,"nodeType":"Literal","messageId":"conditionErrorString","endLine":33,"endColumn":343,"suggestions":[{"messageId":"conditionFixCompareStringLength","fix":{"range":[1559,1567],"text":"(\"hidden\".length > 0)"},"desc":"Change condition to check string's length (`value.length !== 0`)"},{"messageId":"conditionFixCompareEmptyString","fix":{"range":[1559,1567],"text":"(\"hidden\" !== \"\")"},"desc":"Change condition to check for empty string (`value !== \"\"`)"},{"messageId":"conditionFixCastBoolean","fix":{"range":[1559,1567],"text":"(Boolean(\"hidden\"))"},"desc":"Explicitly cast value to a boolean (`Boolean(value)`)"}]}],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"import { Transition } from '@headlessui/react'\r\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline';\r\nimport { Fragment, useState } from 'react'\r\nimport classNames from '../helpers/classNames';\r\n\r\ninterface TransitionWrapperProps {\r\n    children: React.ReactNode;\r\n    visible: boolean;\r\n    btnNext?: () => void\r\n}\r\n\r\nexport default function TransitionWrapperBuildUp({ children, visible, btnNext }: TransitionWrapperProps) {\r\n\r\n    return (\r\n        <Transition\r\n            className=\"overflow-x-clip px-0.5 mx-auto w-full left-0 top-0\"\r\n            show={visible}\r\n        >\r\n            <Transition.Child\r\n                enter=\"transition duration-500 delay-300\"\r\n                enterFrom=\"opacity-0\"\r\n                enterTo=\"opacity-100\"\r\n                // leave=\"transition duration-300\"\r\n                // leaveFrom=\"translate-x-0 opacity-100\"\r\n                // leaveTo=\"-translate-x-10 opacity-0\"\r\n            >\r\n                {children}\r\n                <div className=\"flex justify-between mt-5\">\r\n                    {/* <button className=\"ml-2\">Назад</button> */}\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={btnNext}\r\n                        className={classNames(\"inline-flex justify-center w-full max-w-sm sm:max-w-xs items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\", (btnNext == null) && \"hidden\" || \"\")}\r\n                    >\r\n                        Напред\r\n                    </button>\r\n                </div>\r\n            </Transition.Child>\r\n        </Transition>\r\n    )\r\n}","usedDeprecatedRules":[]}]